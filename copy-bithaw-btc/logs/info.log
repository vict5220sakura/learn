2018-08-28 09:48:42.135 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 09:48:42 CST 2018]; root of context hierarchy
2018-08-28 09:48:42.290 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 09:48:42.409 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:48:42.449 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$31657f29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:48:43.108 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:48:43.118 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:48:48.227 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 09:48:48.227 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 09:48:43.070 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 09:48:48.396 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5e76a2bb: startup date [Tue Aug 28 09:48:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:48:49.184 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 09:48:49.587 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 09:48:50.033 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 09:48:50.144 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:48:50.177 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:48:50.267 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$e8fd8daf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:48:50.419 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$154b7c2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:48:50.606 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$4778226d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:48:50.623 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$31657f29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:48:50.888 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52a7928a: startup date [Tue Aug 28 09:48:50 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5e76a2bb
2018-08-28 09:48:50.918 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:48:51.596 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 09:48:51.685 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@5e76a2bb: startup date [Tue Aug 28 09:48:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 09:48:51.686 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 09:48:51.800 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:48:51.806 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4438b862
2018-08-28 09:48:52.827 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:48:53.091 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5e76a2bb: startup date [Tue Aug 28 09:48:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:48:53.350 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 09:48:53.351 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 09:48:53.352 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 09:48:53.353 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 09:48:53.353 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 09:48:53.354 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:48:53.355 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:48:53.360 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 09:48:53.360 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 09:48:53.484 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:48:53.485 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:48:53.615 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:48:54.708 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 09:48:55.028 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 09:48:56.360 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:48:56.361 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 09:48:56.362 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 09:48:56.363 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 09:48:56.364 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.364 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.364 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.365 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:48:56.365 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:48:56.366 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 09:48:56.368 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 09:48:56.369 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 09:48:56.369 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.370 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.370 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 09:48:56.371 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 09:48:56.371 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.372 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:48:56.374 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 09:48:56.375 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:48:56.375 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.375 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.376 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.377 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.378 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.378 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 09:48:56.378 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 09:48:56.379 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:48:56.379 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 09:48:57.693 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 09:48:57.693 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 09:48:57.697 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 09:48:57.716 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 09:48:57.870 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@65b85cc3: startup date [Tue Aug 28 09:48:57 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5e76a2bb
2018-08-28 09:48:57.918 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:48:58.137 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:48:58.152 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:48:58.158 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 09:48:58.165 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 09:48:58.179 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 09:48:58.199 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 09:48:58.425 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 09:48:58.426 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 09:48:58.532 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 09:48:58.532 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 09:48:58.836 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 09:48:58.950 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 09:48:58.950 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 09:48:58.950 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 09:48:58.951 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 09:48:58.951 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 09:48:58.951 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 09:48:58.952 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 09:49:00.193 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 09:49:00.194 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 09:49:00.201 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 09:49:00.204 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535420940203 with initial instances count: 1
2018-08-28 09:49:01.508 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5cc40ae2
2018-08-28 09:49:01.509 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:49:01.765 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 09:49:01.767 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 09:49:01.770 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 20.3 seconds (JVM running for 21.296)
2018-08-28 09:49:30.247 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:819] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - Re-registering apps/BTC-SERVICE
2018-08-28 09:49:30.247 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 09:49:30.273 [DiscoveryClient-HeartbeatExecutor-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 09:49:40.207 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 09:49:40.212 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 09:52:38.727 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 09:52:38 CST 2018]; root of context hierarchy
2018-08-28 09:52:38.892 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 09:52:38.978 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:52:39.011 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:52:39.500 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:52:39.507 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:52:44.585 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 09:52:44.585 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 09:52:39.474 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 09:52:44.750 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:52:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:52:45.539 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 09:52:45.827 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 09:52:46.265 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 09:52:46.348 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:52:46.379 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:52:46.450 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:52:46.589 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:52:46.753 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:52:46.776 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:52:47.117 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e76afeb: startup date [Tue Aug 28 09:52:47 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:52:47.149 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:52:47.753 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 09:52:47.858 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:52:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 09:52:47.859 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 09:52:47.958 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:52:47.964 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5cc3e49b
2018-08-28 09:52:48.936 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:52:49.351 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:52:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:52:49.491 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 09:52:49.492 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 09:52:49.492 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 09:52:49.493 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 09:52:49.493 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 09:52:49.494 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:52:49.494 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:52:49.497 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 09:52:49.498 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 09:52:49.607 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:52:49.607 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:52:49.675 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:52:50.709 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 09:52:50.907 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 09:52:52.147 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 09:52:52.148 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.149 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 09:52:52.149 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.150 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:52:52.150 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.150 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.151 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 09:52:52.152 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.152 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 09:52:52.153 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:52:52.153 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:52:52.154 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 09:52:52.155 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 09:52:52.155 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.156 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 09:52:52.156 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:52:52.156 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 09:52:52.157 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 09:52:52.158 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:52:52.158 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.159 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 09:52:52.159 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.160 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.160 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.161 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:52.161 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 09:52:52.162 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 09:52:52.162 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:52:53.334 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 09:52:53.335 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 09:52:53.338 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 09:52:53.355 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 09:52:53.521 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7a7d896: startup date [Tue Aug 28 09:52:53 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:52:53.559 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:52:53.710 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:52:53.725 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:52:53.731 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 09:52:53.739 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 09:52:53.753 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 09:52:53.775 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 09:52:54.022 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 09:52:54.022 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 09:52:54.121 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 09:52:54.122 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 09:52:54.272 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 09:52:54.339 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 09:52:54.340 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 09:52:54.342 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 09:52:54.342 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 09:52:54.343 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 09:52:54.343 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 09:52:54.343 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 09:52:54.728 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 09:52:54.730 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 09:52:54.735 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 09:52:54.737 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421174737 with initial instances count: 2
2018-08-28 09:52:54.821 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:52:54.823 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@369c9c41
2018-08-28 09:52:55.050 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 09:52:55.050 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 09:52:55.052 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 17.014 seconds (JVM running for 18.015)
2018-08-28 09:52:55.304 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@79c48ad5, testMethod = newAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2045108]; rollback [true]
2018-08-28 09:52:55.335 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 09:52:55.338 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : cRVVgLMuu2ZoVpQ1X4u3RMS5VzGDmLt1nhUmTnWxUb67P6937kjz
2018-08-28 09:52:55.344 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : mt4d4buDnQ2hmcQ6KunoX5PWWkGyshDs3J
2018-08-28 09:52:55.350 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 09:52:55.357 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@79c48ad5, testMethod = newAddressTest@BitRpcUtilsTest, testException = java.lang.AssertionError, mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 09:52:55.366 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:52:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:52:55.367 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 09:52:55.369 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 09:52:55.370 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 09:52:55.370 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 09:52:55.371 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 09:52:55.383 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 200
2018-08-28 09:52:55.389 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 09:52:55.393 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 09:52:55.394 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 09:52:55.404 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 09:52:55.420 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 09:52:55.424 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7a7d896: startup date [Tue Aug 28 09:52:53 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:52:55.428 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:52:55.429 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 09:52:55.430 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e76afeb: startup date [Tue Aug 28 09:52:47 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:53:08.556 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 09:53:08 CST 2018]; root of context hierarchy
2018-08-28 09:53:08.663 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 09:53:08.820 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:53:08.853 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:53:09.291 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:53:09.298 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:53:14.336 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 09:53:14.337 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 09:53:09.268 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 09:53:14.496 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:53:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:53:15.259 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 09:53:15.589 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 09:53:15.979 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 09:53:16.063 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:53:16.092 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:53:16.185 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:53:16.317 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:53:16.481 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:53:16.498 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:53:16.762 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6d5f4900: startup date [Tue Aug 28 09:53:16 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:53:16.787 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:53:17.389 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 09:53:17.477 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:53:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 09:53:17.478 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 09:53:17.580 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:53:17.586 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@667797f
2018-08-28 09:53:18.572 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:53:18.860 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:53:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:53:18.987 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 09:53:18.988 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 09:53:18.988 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 09:53:18.989 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 09:53:18.989 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 09:53:18.989 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:53:18.990 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:53:18.994 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 09:53:18.994 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 09:53:19.076 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:53:19.076 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:53:19.138 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:53:20.184 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 09:53:20.385 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 09:53:21.590 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 09:53:21.591 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 09:53:21.592 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.593 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 09:53:21.593 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.594 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.594 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 09:53:21.594 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 09:53:21.595 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.595 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:53:21.596 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 09:53:21.597 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:53:21.597 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.598 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 09:53:21.598 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 09:53:21.599 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.601 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 09:53:21.603 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:53:21.604 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:53:21.604 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:53:21.605 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 09:53:21.606 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.606 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.607 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.607 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.608 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 09:53:21.609 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:21.609 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 09:53:21.610 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:53:22.782 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 09:53:22.783 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 09:53:22.786 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 09:53:22.801 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 09:53:22.933 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@654d5fd8: startup date [Tue Aug 28 09:53:22 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:53:22.973 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:53:23.111 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:53:23.125 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:53:23.132 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 09:53:23.139 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 09:53:23.154 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 09:53:23.175 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 09:53:23.388 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 09:53:23.388 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 09:53:23.481 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 09:53:23.481 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 09:53:23.654 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 09:53:23.717 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 09:53:23.717 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 09:53:23.718 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 09:53:23.718 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 09:53:23.718 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 09:53:23.718 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 09:53:23.719 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 09:53:24.051 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 09:53:24.054 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 09:53:24.057 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 09:53:24.059 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421204059 with initial instances count: 2
2018-08-28 09:53:24.137 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:53:24.140 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2d84cbfc
2018-08-28 09:53:24.143 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:53:24.309 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 09:53:24.309 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 09:53:24.311 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.376 seconds (JVM running for 17.132)
2018-08-28 09:53:24.576 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@5f0bcadb, testMethod = newAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@697f4085]; rollback [true]
2018-08-28 09:53:24.607 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 09:53:24.612 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : cVo3bAC5eWu4PB4CAw8LGrfNyGdrJSdf1e3bfLFYJ6BHXoSQVtRJ
2018-08-28 09:53:24.621 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : mmrA1FqCxZR338dnvyCn4MaBQ8y7Vis3zm
2018-08-28 09:53:24.624 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 09:53:24.632 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@5f0bcadb, testMethod = newAddressTest@BitRpcUtilsTest, testException = java.lang.AssertionError, mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 09:53:24.637 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:53:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:53:24.638 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 09:53:24.638 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 09:53:24.640 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 09:53:24.640 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 09:53:24.640 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 09:53:24.647 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 200
2018-08-28 09:53:24.653 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 09:53:24.654 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 09:53:24.660 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 09:53:24.670 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 09:53:24.674 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@654d5fd8: startup date [Tue Aug 28 09:53:22 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:53:24.677 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:53:24.678 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 09:53:24.681 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6d5f4900: startup date [Tue Aug 28 09:53:16 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:53:24.682 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 09:54:04.281 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 09:54:04 CST 2018]; root of context hierarchy
2018-08-28 09:54:04.403 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 09:54:04.519 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:54:04.552 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:54:05.027 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:54:05.033 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:54:10.070 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 09:54:10.071 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 09:54:05.004 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 09:54:10.230 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:54:10 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:54:11.107 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 09:54:11.396 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 09:54:11.775 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 09:54:11.868 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:54:11.905 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:54:12.001 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:54:12.179 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:54:12.352 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:54:12.370 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:54:12.613 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@39023dbf: startup date [Tue Aug 28 09:54:12 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:54:12.629 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:54:13.236 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 09:54:13.325 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:54:10 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 09:54:13.326 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 09:54:13.428 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:54:13.433 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6658f08a
2018-08-28 09:54:14.409 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:54:14.698 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:54:10 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:54:14.803 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 09:54:14.804 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 09:54:14.805 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 09:54:14.805 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 09:54:14.805 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 09:54:14.805 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:54:14.806 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:54:14.807 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 09:54:14.807 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 09:54:14.873 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:54:14.873 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:54:14.923 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:54:16.059 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 09:54:16.269 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 09:54:17.578 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 09:54:17.579 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:54:17.579 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 09:54:17.580 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.580 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:54:17.581 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 09:54:17.582 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.582 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 09:54:17.583 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 09:54:17.584 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:54:17.584 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.585 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 09:54:17.585 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.586 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 09:54:17.586 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.587 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 09:54:17.587 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 09:54:17.587 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.588 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.588 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.589 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:54:17.590 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.590 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.591 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.591 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:54:17.591 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 09:54:17.592 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:54:17.592 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 09:54:17.593 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 09:54:18.743 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 09:54:18.743 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 09:54:18.746 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 09:54:18.762 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 09:54:18.886 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4352d9bf: startup date [Tue Aug 28 09:54:18 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:54:18.926 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:54:19.191 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:54:19.206 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:54:19.212 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 09:54:19.219 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 09:54:19.231 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 09:54:19.252 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 09:54:19.470 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 09:54:19.471 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 09:54:19.583 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 09:54:19.584 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 09:54:19.765 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 09:54:19.831 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 09:54:19.831 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 09:54:19.831 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 09:54:19.832 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 09:54:19.832 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 09:54:19.832 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 09:54:19.832 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 09:54:20.721 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 09:54:20.724 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 09:54:20.730 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 09:54:21.087 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421260732 with initial instances count: 2
2018-08-28 09:54:23.157 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:54:23.614 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3e7bbeac
2018-08-28 09:54:23.817 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 09:54:23.817 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 09:54:23.819 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 20.134 seconds (JVM running for 20.867)
2018-08-28 09:54:24.088 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@7b3b763d, testMethod = newAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@25000d3d]; rollback [true]
2018-08-28 09:54:24.116 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 09:54:24.119 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : cVCfRzr7ZwmnygneqtsEopSjKiUQCMkxuh6wn9UMMJFvKjRua1WM
2018-08-28 09:54:24.153 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : msQkwTcbxYC74gvfvAneg7zuRW4nCDD7ZV
2018-08-28 09:54:24.153 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 09:54:24.162 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@7b3b763d, testMethod = newAddressTest@BitRpcUtilsTest, testException = java.lang.AssertionError, mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 09:54:24.168 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 09:54:24.171 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:54:10 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:54:24.172 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 09:54:24.173 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 09:54:24.174 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 09:54:24.180 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 200
2018-08-28 09:54:24.184 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 09:54:24.187 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 09:54:24.188 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 09:54:24.195 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 09:54:24.203 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4352d9bf: startup date [Tue Aug 28 09:54:18 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:54:24.206 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:54:24.206 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 09:54:24.209 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@39023dbf: startup date [Tue Aug 28 09:54:12 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:54:55.464 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 09:54:55 CST 2018]; root of context hierarchy
2018-08-28 09:54:55.659 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 09:54:55.702 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:54:55.735 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:54:56.917 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:54:56.923 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:55:02.020 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 09:55:02.020 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 09:54:56.893 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 09:55:02.261 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@601cbd8c: startup date [Tue Aug 28 09:55:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:55:03.255 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 09:55:03.886 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 09:55:04.582 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 09:55:04.646 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:55:04.689 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:55:04.843 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:55:05.069 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:55:05.397 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:55:05.414 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:55:05.818 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6060f1: startup date [Tue Aug 28 09:55:05 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@601cbd8c
2018-08-28 09:55:05.833 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:55:06.565 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 09:55:06.819 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@601cbd8c: startup date [Tue Aug 28 09:55:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 09:55:06.820 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 09:55:07.083 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:55:07.089 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6598caab
2018-08-28 09:55:08.469 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:55:08.932 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@601cbd8c: startup date [Tue Aug 28 09:55:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:55:09.327 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 09:55:09.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 09:55:09.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 09:55:09.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 09:55:09.329 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 09:55:09.329 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:55:09.329 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:55:09.330 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 09:55:09.331 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 09:55:09.405 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:55:09.406 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:55:09.465 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:55:10.656 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 09:55:11.198 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 09:55:12.907 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:55:12.908 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 09:55:12.909 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 09:55:12.910 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.910 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 09:55:12.911 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 09:55:12.912 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 09:55:12.912 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:55:12.913 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.913 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:55:12.913 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.914 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.915 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 09:55:12.915 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 09:55:12.916 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.916 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 09:55:12.917 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.917 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:55:12.918 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:55:12.919 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.919 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.921 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.922 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 09:55:12.922 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.923 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.923 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:55:12.923 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 09:55:12.924 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 09:55:12.924 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 09:55:14.046 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 09:55:14.047 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 09:55:14.054 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 09:55:14.070 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 09:55:14.240 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1955bbf7: startup date [Tue Aug 28 09:55:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@601cbd8c
2018-08-28 09:55:14.277 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:55:14.800 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:55:14.813 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:55:14.819 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 09:55:14.824 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 09:55:14.837 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 09:55:14.855 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 09:55:15.058 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 09:55:15.058 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 09:55:15.149 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 09:55:15.149 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 09:55:15.299 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 09:55:15.362 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 09:55:15.362 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 09:55:15.362 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 09:55:15.363 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 09:55:15.363 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 09:55:15.363 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 09:55:15.363 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 09:55:15.703 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 09:55:15.704 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 09:55:15.709 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 09:55:15.712 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421315711 with initial instances count: 1
2018-08-28 09:55:15.791 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:55:15.793 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4f1af967
2018-08-28 09:55:15.828 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:55:15.964 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 09:55:15.965 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 09:55:15.967 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 21.199 seconds (JVM running for 22.93)
2018-08-28 09:55:16.249 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@4afb2c90, testMethod = newAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@5e7aa27e]; rollback [true]
2018-08-28 09:55:16.281 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 09:55:16.284 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : cNenTHXXyoVUrhY3BpoGTNrwhL9cEL9rVGEx4J2ySNbD8QPT4AC2
2018-08-28 09:55:16.288 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : mu5DYr1ftCrhWdiqp8aWLJ23G19zMKKA8D
2018-08-28 09:55:16.288 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 09:55:16.294 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@4afb2c90, testMethod = newAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 09:55:16.298 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@601cbd8c: startup date [Tue Aug 28 09:55:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:55:16.299 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 09:55:16.304 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 09:55:16.304 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 09:55:16.306 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 09:55:16.311 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 09:55:16.315 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 09:55:16.317 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 09:55:16.318 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 09:55:16.324 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 09:55:16.331 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1955bbf7: startup date [Tue Aug 28 09:55:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@601cbd8c
2018-08-28 09:55:16.335 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:55:16.335 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 09:55:16.336 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6060f1: startup date [Tue Aug 28 09:55:05 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@601cbd8c
2018-08-28 09:57:06.052 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 09:57:06 CST 2018]; root of context hierarchy
2018-08-28 09:57:06.178 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 09:57:06.290 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:57:06.326 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:57:06.789 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:57:06.796 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:57:11.832 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 09:57:11.832 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 09:57:06.766 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 09:57:11.991 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:57:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:57:12.700 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 09:57:12.982 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 09:57:13.388 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 09:57:13.457 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:57:13.483 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:57:13.694 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:57:13.754 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:57:13.911 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:57:13.927 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:57:14.165 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2478b629: startup date [Tue Aug 28 09:57:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:57:14.184 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:57:14.757 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 09:57:14.841 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:57:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 09:57:14.842 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 09:57:14.944 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:57:14.949 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4536a715
2018-08-28 09:57:15.942 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:57:16.333 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:57:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:57:16.476 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 09:57:16.477 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 09:57:16.477 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 09:57:16.477 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 09:57:16.478 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 09:57:16.478 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:57:16.478 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:57:16.481 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 09:57:16.481 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 09:57:16.585 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:57:16.585 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:57:16.639 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:57:17.675 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 09:57:17.861 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 09:57:19.021 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 09:57:19.023 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:57:19.023 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 09:57:19.024 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:57:19.024 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.025 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.026 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.027 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 09:57:19.027 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.028 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 09:57:19.029 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.029 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 09:57:19.030 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.033 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 09:57:19.034 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:57:19.035 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.036 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.036 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.037 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.037 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 09:57:19.037 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.039 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:57:19.039 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:57:19.040 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 09:57:19.043 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 09:57:19.043 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 09:57:19.044 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:57:19.044 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 09:57:19.045 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 09:57:20.181 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 09:57:20.181 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 09:57:20.185 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 09:57:20.202 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 09:57:20.330 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@324acaf7: startup date [Tue Aug 28 09:57:20 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:57:20.368 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:57:20.503 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:57:20.517 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:57:20.523 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 09:57:20.529 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 09:57:20.540 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 09:57:20.560 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 09:57:20.778 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 09:57:20.779 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 09:57:20.880 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 09:57:20.880 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 09:57:21.046 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 09:57:21.115 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 09:57:21.116 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 09:57:21.116 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 09:57:21.116 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 09:57:21.116 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 09:57:21.117 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 09:57:21.117 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 09:57:21.491 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 09:57:21.493 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 09:57:21.497 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 09:57:21.499 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421441499 with initial instances count: 1
2018-08-28 09:57:21.578 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@585d416a
2018-08-28 09:57:21.579 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:57:21.748 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 09:57:21.748 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 09:57:21.752 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.316 seconds (JVM running for 17.067)
2018-08-28 09:57:22.032 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@134b9d9c, testMethod = newAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7e5b449c]; rollback [true]
2018-08-28 09:57:22.064 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 09:57:22.067 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : cUMc9m9fYJY7nZ4MeqdbES7E6ZghueM3GRGyya42SkuAihmWDs11
2018-08-28 09:57:22.071 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : mqmjo8oQAq7xJnKhmLzTUttTBvq2RSopgJ
2018-08-28 09:57:22.072 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 09:57:22.080 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@134b9d9c, testMethod = newAddressTest@BitRpcUtilsTest, testException = java.lang.AssertionError, mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 09:57:22.086 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 09:57:22.087 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:57:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:57:22.088 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 09:57:22.094 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 09:57:22.096 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 09:57:22.102 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 09:57:22.104 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 09:57:22.105 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 09:57:22.109 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 09:57:22.138 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 09:57:22.143 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@324acaf7: startup date [Tue Aug 28 09:57:20 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:57:22.146 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:57:22.147 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 09:57:22.154 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2478b629: startup date [Tue Aug 28 09:57:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:58:25.532 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 09:58:25 CST 2018]; root of context hierarchy
2018-08-28 09:58:25.641 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 09:58:25.811 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:58:25.844 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:58:26.387 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:58:26.394 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 09:58:31.431 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 09:58:31.432 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 09:58:26.362 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 09:58:31.592 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:58:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:58:32.458 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 09:58:32.738 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 09:58:33.118 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 09:58:33.220 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:58:33.248 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:58:33.340 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:58:33.495 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:58:33.675 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:58:33.691 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 09:58:33.927 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@478fb7dc: startup date [Tue Aug 28 09:58:33 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:58:33.951 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:58:34.523 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 09:58:34.613 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:58:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 09:58:34.615 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 09:58:34.714 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:58:34.720 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5da57a64
2018-08-28 09:58:35.642 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 09:58:35.947 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:58:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:58:36.128 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 09:58:36.129 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 09:58:36.129 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 09:58:36.130 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 09:58:36.130 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 09:58:36.130 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:58:36.131 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 09:58:36.132 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 09:58:36.133 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 09:58:36.211 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:58:36.211 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:58:36.281 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 09:58:37.353 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 09:58:37.542 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 09:58:38.685 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.686 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 09:58:38.686 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.686 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:58:38.687 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:58:38.687 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 09:58:38.687 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.689 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 09:58:38.690 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:58:38.690 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 09:58:38.690 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 09:58:38.691 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 09:58:38.693 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 09:58:38.693 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 09:58:38.693 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.694 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 09:58:38.697 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 09:58:38.698 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 09:58:38.699 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.700 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.702 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 09:58:38.702 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.703 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.704 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 09:58:38.705 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 09:58:38.705 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.706 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.707 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:38.708 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 09:58:39.932 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 09:58:39.932 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 09:58:39.935 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 09:58:39.951 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 09:58:40.075 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@258809cf: startup date [Tue Aug 28 09:58:40 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:58:40.114 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 09:58:40.251 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:58:40.266 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:58:40.272 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 09:58:40.278 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 09:58:40.291 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 09:58:40.314 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 09:58:40.579 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 09:58:40.580 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 09:58:40.715 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 09:58:40.715 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 09:58:40.926 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 09:58:40.990 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 09:58:40.991 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 09:58:40.991 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 09:58:40.991 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 09:58:40.991 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 09:58:40.992 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 09:58:40.993 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 09:58:41.314 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 09:58:41.316 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 09:58:41.318 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 09:58:41.321 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421521321 with initial instances count: 1
2018-08-28 09:58:41.400 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 09:58:41.404 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@43bb7738
2018-08-28 09:58:41.580 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 09:58:41.580 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 09:58:41.585 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.801 seconds (JVM running for 17.564)
2018-08-28 09:58:41.856 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@2cef4321, testMethod = newAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2aef651]; rollback [true]
2018-08-28 09:58:41.890 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 09:58:41.895 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : cNA34jfyNVoq8G2mFqyNKe82dKZZxFicGwi9i4d1nPYUFSm7WzZC
2018-08-28 09:58:41.901 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : mfybRc4dMD9cgP2t2FQZpzveZitnqtuD3e
2018-08-28 09:58:41.902 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 09:58:41.909 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@2cef4321, testMethod = newAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 09:58:41.913 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 09:58:41.921 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 09:58:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 09:58:41.921 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 09:58:41.924 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 09:58:41.924 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 09:58:41.945 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 09:58:41.992 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 09:58:41.994 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 09:58:41.996 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 09:58:42.002 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 09:58:42.009 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@258809cf: startup date [Tue Aug 28 09:58:40 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 09:58:42.012 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 09:58:42.012 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 09:58:42.014 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@478fb7dc: startup date [Tue Aug 28 09:58:33 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:02:37.123 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:02:37 CST 2018]; root of context hierarchy
2018-08-28 10:02:37.228 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:02:37.368 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:02:37.400 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:02:37.869 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:02:37.877 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:02:42.911 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:02:42.911 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:02:37.846 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:02:43.070 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:02:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:02:43.787 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:02:44.047 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:02:44.431 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:02:44.508 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:02:44.538 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:02:44.631 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:02:44.751 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:02:44.922 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:02:44.936 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:02:45.164 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@634f58d2: startup date [Tue Aug 28 10:02:45 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:02:45.187 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:02:45.804 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:02:45.890 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:02:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:02:45.891 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:02:45.992 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:02:45.997 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1736c1e4
2018-08-28 10:02:46.902 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:02:47.158 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:02:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:02:47.319 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:02:47.320 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:02:47.320 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:02:47.321 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:02:47.321 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:02:47.321 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:02:47.322 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:02:47.323 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:02:47.324 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:02:47.409 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:02:47.409 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:02:47.478 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:02:48.635 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:02:48.819 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:02:49.955 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:02:49.955 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:02:49.956 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:02:49.957 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.958 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:02:49.959 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:02:49.960 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:02:49.960 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.961 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:02:49.961 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:02:49.961 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:02:49.962 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.962 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.963 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:02:49.964 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.964 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.965 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:02:49.966 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.967 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:02:49.968 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.969 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:02:49.969 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.969 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.970 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.970 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:02:49.971 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:02:49.971 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:02:49.972 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:02:49.972 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:02:51.152 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:02:51.153 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:02:51.156 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:02:51.172 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:02:51.299 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ada8552: startup date [Tue Aug 28 10:02:51 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:02:51.336 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:02:51.468 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:02:51.482 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:02:51.487 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:02:51.494 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:02:51.506 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:02:51.528 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:02:51.742 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:02:51.743 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:02:51.851 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:02:51.852 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:02:52.041 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:02:52.110 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:02:52.111 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:02:52.111 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:02:52.111 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:02:52.112 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:02:52.112 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:02:52.112 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:02:52.517 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:02:52.518 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:02:52.523 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:02:52.526 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421772526 with initial instances count: 1
2018-08-28 10:02:52.612 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@34fb6595
2018-08-28 10:02:52.625 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:02:52.786 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:02:52.787 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:02:52.789 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.344 seconds (JVM running for 17.11)
2018-08-28 10:02:53.041 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@6654e105, testMethod = checkAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@355e1080]; rollback [true]
2018-08-28 10:02:53.106 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@6654e105, testMethod = checkAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:02:53.110 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:02:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:02:53.111 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:02:53.113 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:02:53.116 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:02:53.117 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:02:53.116 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 10:02:53.133 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:02:53.141 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:02:53.143 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:02:53.144 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:02:53.145 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 10:02:53.150 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:02:53.154 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ada8552: startup date [Tue Aug 28 10:02:51 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:02:53.156 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:02:53.156 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:02:53.157 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@634f58d2: startup date [Tue Aug 28 10:02:45 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:03:22.231 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:03:22 CST 2018]; root of context hierarchy
2018-08-28 10:03:22.384 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:03:22.508 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:03:22.542 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:23.101 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:03:23.106 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:03:28.143 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:03:28.143 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:03:23.073 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:03:28.303 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:03:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:03:29.090 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:03:29.387 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:03:29.854 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:03:29.923 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:03:29.978 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:30.047 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:30.179 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:30.377 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:30.396 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:30.682 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6d5f4900: startup date [Tue Aug 28 10:03:30 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:03:30.714 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:03:31.357 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:03:31.447 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:03:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:03:31.448 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:03:31.548 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:03:31.553 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@667797f
2018-08-28 10:03:32.609 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:03:32.936 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:03:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:03:33.073 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:03:33.074 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:03:33.074 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:03:33.075 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:03:33.075 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:03:33.076 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:03:33.076 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:03:33.077 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:03:33.078 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:03:33.172 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:03:33.172 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:03:33.245 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:03:34.301 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:03:34.481 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:03:35.628 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:03:35.628 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:03:35.629 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:03:35.630 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:03:35.630 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.631 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:03:35.631 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.632 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.632 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:03:35.632 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:03:35.633 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:03:35.635 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:03:35.636 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.637 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:03:35.638 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:03:35.639 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.640 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.640 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.641 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:03:35.643 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.643 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.644 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.645 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:03:35.646 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:35.647 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:03:35.647 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:03:35.648 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:03:35.649 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:03:35.650 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:03:36.822 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:03:36.823 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:03:36.827 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:03:36.842 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:03:36.982 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@287c738d: startup date [Tue Aug 28 10:03:36 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:03:37.047 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:03:37.190 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:03:37.206 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:03:37.213 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:03:37.219 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:03:37.232 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:03:37.253 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:03:37.456 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:03:37.457 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:03:37.543 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:03:37.544 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:03:37.702 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:03:37.770 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:03:37.770 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:03:37.770 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:03:37.770 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:03:37.771 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:03:37.772 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:03:37.772 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:03:38.109 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:03:38.111 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:03:38.115 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:03:38.118 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421818117 with initial instances count: 2
2018-08-28 10:03:38.195 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:03:38.196 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@9870224
2018-08-28 10:03:38.230 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:03:38.374 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:03:38.374 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:03:38.376 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.82 seconds (JVM running for 17.589)
2018-08-28 10:03:38.645 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@74c997b1, testMethod = checkAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@75fdbd71]; rollback [true]
2018-08-28 10:03:38.682 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@74c997b1, testMethod = checkAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:03:38.685 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:03:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:03:38.687 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:03:38.687 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:03:38.689 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:03:38.689 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:03:38.694 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 200
2018-08-28 10:03:38.696 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:03:38.698 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:03:38.699 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:03:38.702 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:03:38.706 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@287c738d: startup date [Tue Aug 28 10:03:36 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:03:38.714 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:03:38.714 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:03:38.717 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6d5f4900: startup date [Tue Aug 28 10:03:30 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:03:47.786 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:03:47 CST 2018]; root of context hierarchy
2018-08-28 10:03:47.885 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:03:48.047 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:03:48.078 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:48.559 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:03:48.566 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:03:53.602 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:03:53.602 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:03:48.534 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:03:53.767 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:03:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:03:54.557 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:03:54.874 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:03:55.307 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:03:55.392 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:03:55.422 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:55.516 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:55.654 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:55.824 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:55.841 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:03:56.070 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@634f58d2: startup date [Tue Aug 28 10:03:56 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:03:56.095 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:03:56.735 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:03:56.823 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:03:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:03:56.824 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:03:56.926 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:03:56.932 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1736c1e4
2018-08-28 10:03:58.022 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:03:58.270 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:03:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:03:58.385 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:03:58.386 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:03:58.386 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:03:58.387 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:03:58.387 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:03:58.387 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:03:58.388 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:03:58.389 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:03:58.389 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:03:58.468 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:03:58.478 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:03:58.559 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:03:59.642 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:03:59.815 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:04:00.934 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:04:00.934 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.935 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:04:00.935 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:04:00.936 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.936 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:04:00.936 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:04:00.937 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.937 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.938 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:04:00.938 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.939 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.940 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:04:00.941 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:04:00.941 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.942 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.942 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:04:00.943 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:04:00.944 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:04:00.944 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.945 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:04:00.945 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:04:00.946 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:04:00.946 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.948 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:04:00.949 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:04:00.950 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:04:00.950 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:00.951 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:02.116 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:04:02.116 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:04:02.120 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:04:02.135 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:04:02.263 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f9ee245: startup date [Tue Aug 28 10:04:02 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:04:02.301 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:04:02.433 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:04:02.445 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:04:02.452 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:04:02.459 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:04:02.473 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:04:02.491 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:04:02.692 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:04:02.693 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:04:02.790 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:04:02.790 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:04:02.951 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:04:03.019 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:04:03.020 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:04:03.020 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:04:03.020 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:04:03.020 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:04:03.021 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:04:03.021 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:04:03.370 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:04:03.372 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:04:03.376 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:04:03.379 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421843379 with initial instances count: 1
2018-08-28 10:04:03.460 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:04:03.462 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4b767870
2018-08-28 10:04:03.465 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:04:03.659 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:04:03.660 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:04:03.662 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.477 seconds (JVM running for 17.259)
2018-08-28 10:04:03.891 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@39d0775c, testMethod = checkAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@22b112bb]; rollback [true]
2018-08-28 10:04:03.926 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@39d0775c, testMethod = checkAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:04:03.928 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:03:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:04:03.929 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:04:03.933 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:04:03.934 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:04:03.936 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:04:03.938 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:04:03.940 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:04:03.942 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:04:03.943 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:04:03.947 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:04:03.952 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1f9ee245: startup date [Tue Aug 28 10:04:02 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:04:03.957 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:04:03.958 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:04:03.963 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@634f58d2: startup date [Tue Aug 28 10:03:56 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:04:12.701 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:04:12 CST 2018]; root of context hierarchy
2018-08-28 10:04:12.811 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:04:12.937 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:04:12.972 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:04:13.409 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:04:13.415 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:04:18.453 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:04:18.454 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:04:13.384 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:04:18.611 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:04:18 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:04:19.368 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:04:19.673 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:04:20.066 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:04:20.150 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:04:20.174 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:04:20.259 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:04:20.394 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:04:20.559 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:04:20.575 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:04:20.822 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@570a62a5: startup date [Tue Aug 28 10:04:20 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:04:20.839 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:04:21.443 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:04:21.525 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:04:18 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:04:21.526 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:04:21.620 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:04:21.626 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@35dcd032
2018-08-28 10:04:22.516 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:04:22.830 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:04:18 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:04:22.954 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:04:22.955 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:04:22.955 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:04:22.956 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:04:22.956 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:04:22.957 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:04:22.958 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:04:22.959 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:04:22.960 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:04:23.036 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:04:23.036 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:04:23.100 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:04:24.161 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:04:24.363 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:04:25.612 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:04:25.613 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.614 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:04:25.615 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:04:25.615 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:04:25.615 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:04:25.616 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.616 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.617 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:04:25.618 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.618 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:04:25.619 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.620 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:04:25.620 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:04:25.621 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:04:25.621 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:04:25.622 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:04:25.622 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.624 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:04:25.625 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:04:25.626 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.626 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.627 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:04:25.627 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.628 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.628 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:04:25.628 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.629 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:04:25.629 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:04:26.836 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:04:26.837 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:04:26.840 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:04:26.858 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:04:26.992 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@18261b2e: startup date [Tue Aug 28 10:04:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:04:27.027 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:04:27.158 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:04:27.172 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:04:27.179 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:04:27.186 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:04:27.200 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:04:27.221 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:04:27.435 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:04:27.435 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:04:27.528 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:04:27.528 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:04:27.683 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:04:27.748 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:04:27.749 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:04:27.749 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:04:27.749 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:04:27.749 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:04:27.750 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:04:27.751 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:04:28.082 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:04:28.083 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:04:28.087 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:04:28.090 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535421868090 with initial instances count: 1
2018-08-28 10:04:28.168 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:04:28.171 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@25c33c79
2018-08-28 10:04:28.190 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:04:28.337 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:04:28.339 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:04:28.342 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.246 seconds (JVM running for 16.976)
2018-08-28 10:04:28.575 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@5f0bcadb, testMethod = checkAddressTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2d28114b]; rollback [true]
2018-08-28 10:04:28.612 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@5f0bcadb, testMethod = checkAddressTest@BitRpcUtilsTest, testException = java.lang.AssertionError, mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:04:28.622 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:04:18 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:04:28.623 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:04:28.624 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:04:28.627 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:04:28.628 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:04:28.633 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:04:28.636 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:04:28.638 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:04:28.638 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:04:28.643 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:04:28.650 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@18261b2e: startup date [Tue Aug 28 10:04:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:04:28.656 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:04:28.658 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:04:28.659 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@570a62a5: startup date [Tue Aug 28 10:04:20 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:06:50.589 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:06:50 CST 2018]; root of context hierarchy
2018-08-28 10:06:50.684 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:06:50.863 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:06:50.912 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:06:51.358 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:06:51.365 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:06:56.409 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:06:56.409 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:06:51.335 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:06:56.571 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:06:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:06:57.339 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:06:57.626 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:06:57.989 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:06:58.062 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:06:58.094 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:06:58.183 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:06:58.382 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:06:58.567 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:06:58.583 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:06:58.836 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c6c302f: startup date [Tue Aug 28 10:06:58 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:06:58.873 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:06:59.442 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:06:59.524 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:06:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:06:59.525 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:06:59.630 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:06:59.636 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@52ca0ad4
2018-08-28 10:07:00.534 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:07:00.791 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:06:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:07:00.919 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:07:00.920 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:07:00.920 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:07:00.921 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:07:00.921 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:07:00.921 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:07:00.922 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:07:00.924 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:07:00.925 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:07:01.004 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:07:01.004 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:07:01.064 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:07:02.225 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:07:02.414 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:07:03.567 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:07:03.569 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.570 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:07:03.570 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.571 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:07:03.571 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:07:03.572 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:07:03.573 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:07:03.574 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:07:03.575 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:07:03.576 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:07:03.576 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.577 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:07:03.578 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:07:03.579 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.580 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:07:03.581 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:07:03.583 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.583 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:07:03.584 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.586 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.587 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:07:03.587 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.588 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.589 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:07:03.589 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.589 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.590 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:07:03.590 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:07:04.828 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:07:04.828 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:07:04.832 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:07:04.848 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:07:04.975 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@292bca4a: startup date [Tue Aug 28 10:07:04 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:07:05.013 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:07:05.188 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:07:05.205 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:07:05.212 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:07:05.221 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:07:05.235 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:07:05.260 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:07:05.519 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:07:05.519 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:07:05.612 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:07:05.612 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:07:05.768 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:07:05.851 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:07:05.851 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:07:05.852 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:07:05.852 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:07:05.852 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:07:05.852 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:07:05.853 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:07:06.182 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:07:06.183 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:07:06.188 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:07:06.190 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535422026190 with initial instances count: 1
2018-08-28 10:07:06.269 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:07:06.272 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7efce9cd
2018-08-28 10:07:06.453 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:07:06.454 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:07:06.458 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.487 seconds (JVM running for 17.241)
2018-08-28 10:07:06.739 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@50e0541, testMethod = getBlockHeightTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@37ddb835]; rollback [true]
2018-08-28 10:07:06.855 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [BitRpcUtilsTest.java:84] - 当前区块最高块1410346
2018-08-28 10:07:06.861 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@50e0541, testMethod = getBlockHeightTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:07:06.869 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:06:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:07:06.869 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:07:06.871 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:07:06.899 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:07:06.899 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 10:07:06.916 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:07:06.981 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:07:06.982 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 10:07:06.984 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:07:06.985 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:07:06.989 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:07:06.993 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:07:07.002 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@292bca4a: startup date [Tue Aug 28 10:07:04 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:07:07.005 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:07:07.005 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:07:07.008 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c6c302f: startup date [Tue Aug 28 10:06:58 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:29:07.591 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:29:07 CST 2018]; root of context hierarchy
2018-08-28 10:29:07.729 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:29:07.823 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:29:07.859 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:29:08.309 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:29:08.315 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:29:13.355 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:29:13.356 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:29:08.286 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:29:13.523 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:29:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:29:14.250 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:29:14.528 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:29:14.902 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:29:14.973 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:29:15.001 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:29:15.162 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:29:15.222 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:29:15.385 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:29:15.398 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:29:15.658 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@492be039: startup date [Tue Aug 28 10:29:15 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:29:15.684 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:29:16.276 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:29:16.363 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:29:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:29:16.364 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:29:16.492 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:29:16.497 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@113eed88
2018-08-28 10:29:17.518 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:29:17.779 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:29:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:29:17.895 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:29:17.896 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:29:17.896 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:29:17.897 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:29:17.897 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:29:17.897 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:29:17.898 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:29:17.900 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:29:17.902 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:29:17.976 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:29:17.976 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:29:18.037 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:29:19.173 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:29:19.356 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:29:20.527 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.527 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.528 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:29:20.529 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.529 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:29:20.530 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:29:20.530 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.531 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:29:20.531 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.531 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:29:20.532 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.533 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:29:20.534 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:29:20.536 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.537 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.538 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:29:20.538 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.540 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:29:20.542 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:29:20.542 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:29:20.543 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.543 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:29:20.544 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:29:20.545 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:20.545 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:29:20.546 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:29:20.546 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:29:20.546 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:29:20.547 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:29:21.830 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:29:21.830 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:29:21.833 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:29:21.850 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:29:21.985 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@39b4121d: startup date [Tue Aug 28 10:29:21 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:29:22.022 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:29:22.159 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:29:22.176 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:29:22.183 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:29:22.191 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:29:22.208 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:29:22.232 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:29:22.457 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:29:22.457 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:29:22.554 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:29:22.555 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:29:22.728 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:29:22.793 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:29:22.793 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:29:22.794 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:29:22.794 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:29:22.794 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:29:22.795 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:29:22.795 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:29:23.182 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:29:23.183 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:29:23.188 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:29:23.190 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535423363190 with initial instances count: 1
2018-08-28 10:29:23.266 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:29:23.269 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@397057de
2018-08-28 10:29:23.630 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:29:23.630 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:29:23.632 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.657 seconds (JVM running for 17.443)
2018-08-28 10:29:23.897 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@1467dcd0, testMethod = walletpassphaseTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@38cd7531]; rollback [true]
2018-08-28 10:29:24.130 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@1467dcd0, testMethod = walletpassphaseTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:29:24.134 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:29:24.134 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:29:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:29:24.135 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:29:24.139 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:29:24.139 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:29:24.147 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:29:24.149 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:29:24.151 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:29:24.152 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:29:24.158 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:29:24.164 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@39b4121d: startup date [Tue Aug 28 10:29:21 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:29:24.167 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:29:24.167 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:29:24.168 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@492be039: startup date [Tue Aug 28 10:29:15 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:31:09.957 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:31:09 CST 2018]; root of context hierarchy
2018-08-28 10:31:10.040 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:31:10.223 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:31:10.255 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:31:10.757 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:31:10.765 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:31:20.511 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:31:20 CST 2018]; root of context hierarchy
2018-08-28 10:31:20.599 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:31:20.779 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:31:20.812 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:31:21.265 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:31:21.271 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:31:26.312 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:31:26.312 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:31:21.240 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:31:26.474 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:31:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:31:27.376 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:31:27.631 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:31:28.032 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:31:28.112 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:31:28.140 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:31:28.242 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:31:28.383 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:31:28.564 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:31:28.582 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:31:28.883 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@492be039: startup date [Tue Aug 28 10:31:28 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:31:28.910 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:31:29.631 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:31:29.713 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:31:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:31:29.714 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:31:29.812 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:31:29.818 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@113eed88
2018-08-28 10:31:31.171 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:31:31.493 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:31:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:31:31.607 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:31:31.608 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:31:31.609 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:31:31.609 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:31:31.609 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:31:31.610 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:31:31.610 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:31:31.611 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:31:31.612 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:31:31.689 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:31:31.689 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:31:31.744 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:31:32.785 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:31:32.984 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:31:34.166 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:31:34.166 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.167 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:31:34.167 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:31:34.168 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.168 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:31:34.169 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:31:34.171 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.172 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.173 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:31:34.173 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.174 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.176 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:31:34.176 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:31:34.177 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.178 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.179 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:31:34.179 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:31:34.180 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:31:34.183 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.184 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:31:34.185 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:31:34.186 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.186 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:31:34.187 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:31:34.187 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:34.188 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:31:34.190 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:31:34.192 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:31:35.429 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:31:35.430 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:31:35.433 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:31:35.451 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:31:35.587 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@146d17e6: startup date [Tue Aug 28 10:31:35 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:31:35.627 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:31:35.775 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:31:35.792 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:31:35.798 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:31:35.808 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:31:35.822 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:31:35.844 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:31:36.087 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:31:36.088 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:31:36.192 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:31:36.192 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:31:36.412 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:31:36.584 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:31:36.585 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:31:36.585 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:31:36.585 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:31:36.586 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:31:36.588 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:31:36.588 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:31:36.919 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:31:36.921 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:31:36.926 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:31:36.928 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535423496928 with initial instances count: 1
2018-08-28 10:31:37.009 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:31:37.011 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2d4d50ff
2018-08-28 10:31:37.226 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:31:37.226 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:31:37.228 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 17.362 seconds (JVM running for 18.137)
2018-08-28 10:31:37.518 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@4623c0d3, testMethod = walletpassphaseTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@22b112bb]; rollback [true]
2018-08-28 10:31:38.012 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@4623c0d3, testMethod = walletpassphaseTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:31:38.017 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:31:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:31:38.018 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:31:38.020 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:31:38.023 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:31:38.024 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:31:38.034 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:31:38.038 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:31:38.039 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:31:38.040 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:31:38.045 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:31:38.052 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@146d17e6: startup date [Tue Aug 28 10:31:35 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:31:38.055 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:31:38.055 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:31:38.056 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@492be039: startup date [Tue Aug 28 10:31:28 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:34:06.504 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:34:06 CST 2018]; root of context hierarchy
2018-08-28 10:34:06.585 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:34:06.762 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:34:06.794 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:34:07.239 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:34:07.247 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:34:12.286 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:34:12.286 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:34:07.216 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:34:12.447 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:34:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:34:13.467 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:34:13.759 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:34:14.162 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:34:14.242 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:34:14.278 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:34:14.363 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:34:14.506 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:34:14.703 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:34:14.724 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:34:15.001 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@76216830: startup date [Tue Aug 28 10:34:15 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:34:15.025 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:34:15.619 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:34:15.777 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:34:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:34:15.779 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:34:15.887 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:34:15.893 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2ae3235e
2018-08-28 10:34:16.920 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:34:17.189 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:34:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:34:17.325 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:34:17.326 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:34:17.327 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:34:17.327 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:34:17.327 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:34:17.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:34:17.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:34:17.331 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:34:17.331 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:34:17.433 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:34:17.433 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:34:17.490 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:34:18.562 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:34:18.788 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:34:20.034 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:34:20.036 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:34:20.036 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.037 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:34:20.038 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:34:20.038 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.039 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:34:20.042 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.043 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:34:20.043 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:34:20.045 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:34:20.046 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:34:20.047 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.047 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:34:20.048 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.048 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:34:20.049 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:34:20.051 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:34:20.053 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.055 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:34:20.055 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.057 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:34:20.058 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.060 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.061 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.062 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:20.065 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:34:20.065 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:34:20.066 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:34:21.237 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:34:21.237 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:34:21.241 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:34:21.262 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:34:21.396 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5008a880: startup date [Tue Aug 28 10:34:21 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:34:21.434 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:34:21.575 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:34:21.591 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:34:21.598 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:34:21.605 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:34:21.619 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:34:21.640 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:34:21.863 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:34:21.863 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:34:21.969 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:34:21.969 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:34:22.148 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:34:22.216 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:34:22.217 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:34:22.217 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:34:22.217 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:34:22.218 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:34:22.218 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:34:22.218 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:34:22.554 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:34:22.556 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:34:22.561 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:34:22.565 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535423662565 with initial instances count: 1
2018-08-28 10:34:22.645 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:34:22.647 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2326d931
2018-08-28 10:34:22.658 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:34:22.846 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:34:22.847 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:34:22.849 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.973 seconds (JVM running for 17.729)
2018-08-28 10:34:23.092 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@26753687, testMethod = getBalanceTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@3b87c881]; rollback [true]
2018-08-28 10:34:23.206 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@26753687, testMethod = getBalanceTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:34:23.210 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:34:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:34:23.211 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:34:23.218 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:34:23.220 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:34:23.221 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:34:23.225 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:34:23.233 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:34:23.235 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:34:23.236 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:34:23.241 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:34:23.246 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5008a880: startup date [Tue Aug 28 10:34:21 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:34:23.250 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:34:23.250 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:34:23.251 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@76216830: startup date [Tue Aug 28 10:34:15 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:36:00.140 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:36:00 CST 2018]; root of context hierarchy
2018-08-28 10:36:00.215 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:36:00.389 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:36:00.422 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:36:00.867 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:36:00.872 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:36:05.912 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:36:05.912 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:36:00.842 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:36:06.072 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:36:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:36:06.911 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:36:07.202 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:36:07.591 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:36:07.677 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:36:07.704 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:36:07.810 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:36:07.955 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:36:08.123 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:36:08.153 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:36:08.451 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5b02a984: startup date [Tue Aug 28 10:36:08 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:36:08.472 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:36:09.147 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:36:09.227 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:36:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:36:09.227 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:36:09.346 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:36:09.352 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4228f269
2018-08-28 10:36:10.432 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:36:10.732 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:36:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:36:10.875 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:36:10.877 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:36:10.877 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:36:10.878 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:36:10.878 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:36:10.879 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:36:10.879 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:36:10.880 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:36:10.881 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:36:10.965 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:36:10.972 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:36:11.040 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:36:12.028 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:36:12.217 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:36:13.341 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:36:13.342 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.343 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.343 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:36:13.344 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:36:13.344 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:36:13.345 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:36:13.346 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.346 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.347 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.347 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:36:13.348 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:36:13.349 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:36:13.349 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:36:13.349 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.350 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:36:13.351 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.351 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:36:13.352 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.353 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:36:13.353 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.353 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:36:13.354 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:36:13.354 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:36:13.354 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:36:13.355 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.355 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:13.355 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:36:13.356 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:36:14.597 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:36:14.598 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:36:14.602 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:36:14.622 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:36:14.799 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@42b6de7c: startup date [Tue Aug 28 10:36:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:36:14.853 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:36:15.041 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:36:15.061 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:36:15.068 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:36:15.077 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:36:15.089 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:36:15.112 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:36:15.332 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:36:15.332 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:36:15.420 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:36:15.422 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:36:15.593 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:36:15.663 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:36:15.663 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:36:15.664 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:36:15.665 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:36:15.666 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:36:15.671 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:36:15.671 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:36:16.054 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:36:16.056 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:36:16.062 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:36:16.065 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535423776065 with initial instances count: 1
2018-08-28 10:36:16.152 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:36:16.152 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@673760a3
2018-08-28 10:36:16.338 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:36:16.340 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:36:16.342 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.815 seconds (JVM running for 17.563)
2018-08-28 10:36:16.591 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@19abe8f7, testMethod = getConnectionCountTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1cb09347]; rollback [true]
2018-08-28 10:36:16.621 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:134] - 获取节点对外链接数
2018-08-28 10:36:16.711 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:137] - 获取节点对外链接数 成功
2018-08-28 10:36:16.717 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@19abe8f7, testMethod = getConnectionCountTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:36:16.720 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:36:16.721 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:36:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:36:16.722 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:36:16.724 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:36:16.725 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:36:16.731 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:36:16.733 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:36:16.735 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:36:16.737 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:36:16.742 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:36:16.749 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@42b6de7c: startup date [Tue Aug 28 10:36:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:36:16.753 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:36:16.753 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:36:16.755 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5b02a984: startup date [Tue Aug 28 10:36:08 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:39:07.510 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:39:07 CST 2018]; root of context hierarchy
2018-08-28 10:39:07.595 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:39:07.752 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:39:07.783 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:39:08.226 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:39:08.232 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:39:13.267 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:39:13.267 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:39:08.204 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:39:13.426 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:39:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:39:14.325 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:39:14.602 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:39:15.010 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:39:15.084 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:39:15.115 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:39:15.208 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:39:15.356 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:39:15.503 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:39:15.519 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:39:15.776 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2871ac91: startup date [Tue Aug 28 10:39:15 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:39:15.796 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:39:16.403 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:39:16.494 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:39:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:39:16.495 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:39:16.593 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:39:16.601 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1552da16
2018-08-28 10:39:17.533 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:39:17.845 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:39:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:39:17.965 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:39:17.966 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:39:17.967 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:39:17.967 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:39:17.967 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:39:17.968 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:39:17.968 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:39:17.971 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:39:17.972 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:39:18.053 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:39:18.053 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:39:18.118 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:39:19.321 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:39:19.524 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:39:20.668 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.669 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:39:20.670 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.670 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.671 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.672 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:39:20.672 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.673 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:39:20.674 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:39:20.675 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.676 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.677 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:39:20.677 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:39:20.678 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.678 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.678 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:39:20.679 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:39:20.679 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:39:20.680 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.680 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:39:20.681 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:39:20.682 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:39:20.682 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:39:20.683 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:39:20.684 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:39:20.685 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:39:20.686 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:39:20.686 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:20.687 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:39:21.879 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:39:21.880 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:39:21.883 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:39:21.899 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:39:22.032 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5296a12d: startup date [Tue Aug 28 10:39:22 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:39:22.076 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:39:22.230 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:39:22.245 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:39:22.251 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:39:22.257 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:39:22.273 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:39:22.294 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:39:22.532 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:39:22.533 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:39:22.629 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:39:22.630 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:39:22.794 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:39:22.865 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:39:22.865 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:39:22.865 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:39:22.866 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:39:22.866 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:39:22.866 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:39:22.868 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:39:23.198 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:39:23.199 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:39:23.202 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:39:23.204 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535423963204 with initial instances count: 1
2018-08-28 10:39:23.285 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:39:23.287 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6e104445
2018-08-28 10:39:23.456 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:39:23.457 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:39:23.458 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.569 seconds (JVM running for 17.35)
2018-08-28 10:39:23.719 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@65977161, testMethod = tradeTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4a28b6d0]; rollback [true]
2018-08-28 10:39:23.831 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@65977161, testMethod = tradeTest@BitRpcUtilsTest, testException = com.googlecode.jsonrpc4j.HttpException: {"result":null,"error":{"code":-13,"message":"Error: Please enter the wallet passphrase with walletpassphrase first."},"id":"3111833310872349479"}
, mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:39:23.842 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:39:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:39:23.843 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:39:23.845 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:39:23.848 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:39:23.849 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:39:23.894 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:39:23.899 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:39:23.900 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:39:23.902 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:39:23.911 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:39:23.932 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5296a12d: startup date [Tue Aug 28 10:39:22 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:39:23.936 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:39:23.936 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:39:23.938 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2871ac91: startup date [Tue Aug 28 10:39:15 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:40:11.519 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:40:11 CST 2018]; root of context hierarchy
2018-08-28 10:40:11.624 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:40:11.768 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:40:11.799 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:40:12.238 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:40:12.245 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:40:17.280 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:40:17.281 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:40:12.215 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:40:17.440 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:40:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:40:18.221 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:40:18.498 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:40:18.861 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:40:18.938 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:40:18.963 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:40:19.107 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:40:19.173 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:40:19.352 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:40:19.370 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:40:19.620 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@76216830: startup date [Tue Aug 28 10:40:19 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:40:19.685 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:40:20.320 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:40:20.409 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:40:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:40:20.410 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:40:20.512 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:40:20.518 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2ae3235e
2018-08-28 10:40:21.767 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:40:22.064 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:40:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:40:22.195 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:40:22.196 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:40:22.196 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:40:22.197 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:40:22.198 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:40:22.198 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:40:22.198 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:40:22.203 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:40:22.204 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:40:22.286 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:40:22.286 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:40:22.364 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:40:23.454 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:40:23.657 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:40:24.799 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:40:24.800 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:40:24.800 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.800 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:40:24.801 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.802 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.803 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.805 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.806 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.806 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:40:24.807 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:40:24.808 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:40:24.809 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:40:24.810 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.812 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:40:24.812 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.813 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:40:24.816 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:40:24.816 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:40:24.817 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:40:24.817 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:40:24.818 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.818 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:40:24.819 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:40:24.819 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.820 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:40:24.820 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:24.820 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:40:24.821 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:40:26.050 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:40:26.050 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:40:26.054 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:40:26.073 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:40:26.216 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b6c1984: startup date [Tue Aug 28 10:40:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:40:26.257 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:40:26.390 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:40:26.404 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:40:26.410 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:40:26.416 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:40:26.429 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:40:26.449 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:40:26.671 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:40:26.672 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:40:26.796 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:40:26.797 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:40:26.970 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:40:27.037 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:40:27.038 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:40:27.038 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:40:27.038 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:40:27.039 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:40:27.039 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:40:27.039 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:40:27.466 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:40:27.468 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:40:27.475 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:40:27.480 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535424027479 with initial instances count: 1
2018-08-28 10:40:27.568 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:40:27.570 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@33274d2b
2018-08-28 10:40:27.767 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:40:27.767 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:40:27.769 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.91 seconds (JVM running for 17.743)
2018-08-28 10:40:28.027 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@2a0154f7, testMethod = tradeTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@77984827]; rollback [true]
2018-08-28 10:40:28.298 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [BitRpcUtilsTest.java:144] - 根据交易hash到区块链上查找是否交易成功!交易hash: 69fe36d87489cd73808d9ed91f2e122281f41ab1267a10c9954c933ad2390da7
2018-08-28 10:40:28.303 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BitRpcUtilsTest, testInstance = com.bithaw.btc.utils.BitRpcUtilsTest@2a0154f7, testMethod = tradeTest@BitRpcUtilsTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BitRpcUtilsTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:40:28.306 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:40:28.307 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:40:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:40:28.307 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:40:28.310 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:40:28.310 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:40:28.317 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:40:28.319 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:40:28.321 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:40:28.323 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:40:28.327 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:40:28.332 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b6c1984: startup date [Tue Aug 28 10:40:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:40:28.339 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:40:28.340 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:40:28.340 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@76216830: startup date [Tue Aug 28 10:40:19 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:50:14.348 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:50:14 CST 2018]; root of context hierarchy
2018-08-28 10:50:14.438 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:50:14.628 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:50:14.659 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:50:15.120 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:50:15.127 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:50:20.163 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:50:20.164 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:50:15.097 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:50:24.578 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:50:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:50:25.448 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:50:25.739 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:50:26.107 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:50:26.187 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:50:26.221 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:50:26.311 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:50:26.441 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:50:26.609 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:50:26.625 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:50:26.865 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b088163: startup date [Tue Aug 28 10:50:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:50:26.883 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:50:27.433 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:50:27.518 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:50:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:50:27.519 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:50:27.615 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:50:27.622 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@794c5f5e
2018-08-28 10:50:28.603 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:50:28.924 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:50:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:50:29.066 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:50:29.067 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:50:29.068 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:50:29.068 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:50:29.068 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:50:29.069 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:50:29.069 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:50:29.071 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:50:29.072 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:50:29.166 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:50:29.167 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:50:29.223 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:50:30.235 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:50:30.476 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:50:31.709 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:50:31.711 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:50:31.712 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:50:31.713 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.713 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.714 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.715 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:50:31.718 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:50:31.718 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:50:31.718 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.719 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:50:31.720 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:50:31.720 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:50:31.721 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.723 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:50:31.724 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:50:31.724 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.726 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.727 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.728 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.729 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:50:31.730 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.730 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.732 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:50:31.733 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:50:31.733 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:50:31.734 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:50:31.734 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:50:31.735 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:50:32.912 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:50:32.912 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:50:32.915 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:50:32.938 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:50:33.074 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@20ed969f: startup date [Tue Aug 28 10:50:33 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:50:33.111 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:50:33.247 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:50:33.261 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:50:33.267 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:50:33.274 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:50:33.286 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:50:33.306 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:50:33.529 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:50:33.530 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:50:33.644 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:50:33.644 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:50:33.842 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:50:33.926 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:50:33.926 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:50:33.926 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:50:33.926 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:50:33.927 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:50:33.927 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:50:33.927 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:50:34.278 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:50:34.279 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:50:34.284 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:50:34.287 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535424634287 with initial instances count: 1
2018-08-28 10:50:34.376 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:50:34.378 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@172a6388
2018-08-28 10:50:34.392 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:50:34.626 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:50:34.627 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:50:34.628 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [StartupInfoLogger.java:57] - Started BtcServiceImplTest in 20.906 seconds (JVM running for 21.659)
2018-08-28 10:50:34.928 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@46f5030f, testMethod = newAddressTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7e7e34ef]; rollback [true]
2018-08-28 10:50:34.965 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:42] - BtcServiceImpl newAddress() 新建比特币账户开始
2018-08-28 10:50:34.966 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 10:50:34.971 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : cTVPjUFpqg1xRLNRoRTBddFzipY1DSQbZdwub4ma3wQAbNmM4Jb9
2018-08-28 10:50:35.049 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : mgENpHMnhqo6D1bKewFPw6oSZ4ryuwJGLd
2018-08-28 10:50:35.050 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 10:50:35.050 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:44] - BtcServiceImpl newAddress() 新建比特币账户完成
2018-08-28 10:50:35.057 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@46f5030f, testMethod = newAddressTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:50:35.060 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:50:35.060 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:50:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:50:35.062 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:50:35.064 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:50:35.065 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:50:35.070 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:50:35.073 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:50:35.075 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:50:35.076 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:50:35.079 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:50:35.086 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@20ed969f: startup date [Tue Aug 28 10:50:33 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:50:35.090 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:50:35.090 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:50:35.091 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b088163: startup date [Tue Aug 28 10:50:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:52:15.325 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:52:15 CST 2018]; root of context hierarchy
2018-08-28 10:52:15.419 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:52:15.589 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:52:15.620 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:52:16.149 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:52:16.156 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:52:21.196 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:52:21.196 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:52:16.122 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:52:21.358 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:52:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:52:22.146 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:52:22.448 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:52:22.898 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:52:22.980 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:52:23.012 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:52:23.097 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:52:23.259 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:52:23.449 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:52:23.465 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:52:23.747 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4f114b: startup date [Tue Aug 28 10:52:23 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:52:23.783 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:52:24.531 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:52:24.649 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:52:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:52:24.651 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:52:24.777 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:52:24.783 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@11abd6c
2018-08-28 10:52:25.862 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:52:26.797 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:52:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:52:27.017 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:52:27.018 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:52:27.018 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:52:27.018 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:52:27.019 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:52:27.019 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:52:27.019 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:52:27.021 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:52:27.021 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:52:27.100 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:52:27.100 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:52:27.167 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:52:28.290 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:52:28.516 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:52:29.788 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.789 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:52:29.790 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:52:29.790 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:52:29.791 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.791 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:52:29.791 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.792 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.792 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:52:29.793 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.793 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.794 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.794 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:52:29.795 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.795 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:52:29.795 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:52:29.796 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.796 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:52:29.797 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.797 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:52:29.798 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.798 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:52:29.799 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:52:29.801 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:52:29.802 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:52:29.803 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:52:29.803 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:52:29.804 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:52:29.804 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:52:31.092 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:52:31.093 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:52:31.096 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:52:31.112 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:52:31.284 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@48bcad31: startup date [Tue Aug 28 10:52:31 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:52:31.335 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:52:31.493 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:52:31.509 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:52:31.517 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:52:31.524 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:52:31.538 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:52:31.564 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:52:31.784 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:52:31.785 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:52:31.886 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:52:31.886 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:52:32.049 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:52:32.117 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:52:32.117 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:52:32.118 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:52:32.118 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:52:32.118 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:52:32.118 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:52:32.119 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:52:32.480 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:52:32.482 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:52:32.487 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:52:32.490 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535424752489 with initial instances count: 1
2018-08-28 10:52:32.577 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:52:32.579 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4b6ab9ad
2018-08-28 10:52:32.750 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:52:32.751 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:52:32.753 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [StartupInfoLogger.java:57] - Started BtcServiceImplTest in 18.052 seconds (JVM running for 18.837)
2018-08-28 10:52:32.998 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@1d07fb2, testMethod = tradeTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@9588bd8]; rollback [true]
2018-08-28 10:52:33.030 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:50] - BtcServiceImpl trade() 转账开始
2018-08-28 10:52:33.344 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:95] - BtcServiceImpl trade() 转账成功
2018-08-28 10:52:33.345 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [BtcServiceImplTest.java:54] - 交易后的hash:{"code":"0","message":"SUCCESS","txHash":"d132f38ffd158bb346862f5a7773b5ac8f23a52c87b60be8ea47cbbb0797ba3d"}
2018-08-28 10:52:33.502 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@1d07fb2, testMethod = tradeTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:52:33.505 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:52:33.505 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:52:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:52:33.507 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:52:33.509 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:52:33.510 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:52:33.510 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 10:52:33.523 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:52:33.530 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:52:33.532 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:52:33.543 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 10:52:33.544 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:52:33.549 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:52:33.555 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@48bcad31: startup date [Tue Aug 28 10:52:31 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:52:33.560 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:52:33.560 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:52:33.561 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4f114b: startup date [Tue Aug 28 10:52:23 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:54:24.992 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:54:24 CST 2018]; root of context hierarchy
2018-08-28 10:54:25.039 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:54:25.218 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:54:25.249 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:54:25.687 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:54:25.694 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:54:30.732 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:54:30.732 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:54:25.661 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:54:30.890 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:54:30 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:54:31.694 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:54:31.999 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:54:32.409 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:54:32.505 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:54:32.535 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:54:32.632 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:54:32.794 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:54:32.985 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:54:33.005 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:54:33.261 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@38732364: startup date [Tue Aug 28 10:54:33 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:54:33.315 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:54:34.013 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:54:34.097 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:54:30 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:54:34.098 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:54:34.219 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:54:34.225 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@46b5f061
2018-08-28 10:54:35.336 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:54:35.623 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:54:30 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:54:35.776 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:54:35.777 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:54:35.777 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:54:35.779 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:54:35.779 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:54:35.779 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:54:35.780 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:54:35.783 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:54:35.784 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:54:35.868 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:54:35.869 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:54:35.925 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:54:36.960 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:54:37.183 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:54:38.385 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:54:38.386 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:54:38.387 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.387 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.388 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:54:38.388 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:54:38.388 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:54:38.389 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:54:38.391 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:54:38.391 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:54:38.392 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.392 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.393 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:54:38.394 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:54:38.394 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:54:38.395 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:54:38.395 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:54:38.395 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.396 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.396 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.398 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.400 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:54:38.400 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.401 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.402 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:54:38.403 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.405 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:54:38.406 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:54:38.407 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:54:39.614 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:54:39.615 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:54:39.619 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:54:39.638 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:54:39.797 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2f1e9549: startup date [Tue Aug 28 10:54:39 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:54:39.837 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:54:39.970 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:54:39.984 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:54:39.990 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:54:39.996 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:54:40.008 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:54:40.029 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:54:40.234 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:54:40.235 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:54:40.328 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:54:40.329 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:54:40.495 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:54:40.567 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:54:40.568 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:54:40.568 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:54:40.568 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:54:40.568 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:54:40.568 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:54:40.569 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:54:40.948 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:54:40.952 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:54:40.958 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:54:40.961 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535424880961 with initial instances count: 2
2018-08-28 10:54:41.065 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@715cf3fd
2018-08-28 10:54:41.066 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:54:41.256 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:54:41.257 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:54:41.259 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [StartupInfoLogger.java:57] - Started BtcServiceImplTest in 16.916 seconds (JVM running for 17.684)
2018-08-28 10:54:41.517 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@7acb8e6b, testMethod = getTradeStatusTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@35c646b5]; rollback [true]
2018-08-28 10:54:41.550 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:101] - BtcServiceImpl getTradeStatus()
2018-08-28 10:54:42.000 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:113] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 10:54:42.006 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@7acb8e6b, testMethod = getTradeStatusTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:54:42.009 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:54:30 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:54:42.009 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:54:42.011 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:54:42.013 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:54:42.017 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:54:42.024 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 200
2018-08-28 10:54:42.031 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:54:42.033 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:54:42.036 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:54:42.041 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:54:42.048 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2f1e9549: startup date [Tue Aug 28 10:54:39 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:54:42.052 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:54:42.053 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:54:42.054 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@38732364: startup date [Tue Aug 28 10:54:33 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:57:50.872 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:57:50 CST 2018]; root of context hierarchy
2018-08-28 10:57:50.981 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:57:51.129 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:57:51.165 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:57:51.612 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:57:51.621 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:57:56.685 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:57:56.686 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:57:51.583 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:57:56.855 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:57:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:57:57.621 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:57:57.895 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:57:58.286 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:57:58.408 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:57:58.440 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:57:58.522 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:57:58.580 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:57:58.858 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:57:58.876 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:57:59.133 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef18604: startup date [Tue Aug 28 10:57:59 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:57:59.149 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:57:59.752 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:57:59.837 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:57:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:57:59.838 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:57:59.944 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:57:59.950 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2ff498b0
2018-08-28 10:58:00.904 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:58:01.175 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:57:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:58:01.360 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:58:01.361 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:58:01.361 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:58:01.362 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:58:01.362 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:58:01.362 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:58:01.363 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:58:01.365 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:58:01.365 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:58:01.446 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:58:01.447 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:58:01.510 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:58:02.631 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:58:02.823 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:58:04.160 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:58:04.161 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:58:04.161 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:58:04.162 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.162 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:58:04.163 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:58:04.163 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:58:04.164 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.164 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.165 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.166 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:58:04.166 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.167 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:58:04.168 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.168 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:58:04.169 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:58:04.170 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:58:04.173 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:58:04.173 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:58:04.173 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.174 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:58:04.174 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.175 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.175 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.176 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:58:04.177 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:58:04.177 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:58:04.178 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:04.178 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:58:05.355 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:58:05.355 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:58:05.359 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:58:05.377 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:58:05.521 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e83cf6: startup date [Tue Aug 28 10:58:05 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:58:05.563 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:58:05.730 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:58:05.746 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:58:05.752 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:58:05.760 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:58:05.773 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:58:05.795 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:58:06.030 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:58:06.031 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:58:06.126 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:58:06.127 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:58:06.300 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:58:06.374 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:58:06.374 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:58:06.375 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:58:06.375 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:58:06.376 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:58:06.376 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:58:06.377 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:58:06.544 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:58:06.545 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:58:06.548 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:58:06.551 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535425086551 with initial instances count: 1
2018-08-28 10:58:06.633 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:58:06.635 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4c3669f6
2018-08-28 10:58:06.767 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:58:06.811 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:58:06.811 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:58:06.813 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [StartupInfoLogger.java:57] - Started BtcServiceImplTest in 16.591 seconds (JVM running for 17.341)
2018-08-28 10:58:07.060 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@358caf3a, testMethod = getTradeInfoTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@6c07666f]; rollback [true]
2018-08-28 10:58:07.093 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:143] - BtcServiceImpl getTradeStatusInfo()
2018-08-28 10:58:07.183 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:145] - BtcServiceImpl getTradeStatusInfo()->bitRpcUtils.gettransaction(txHash):{amount=-1.0E-5, fee=-8.76E-6, confirmations=3, blockhash=000000000000001f618754e2ca93678a54958e3db57d97c517f5890d82a4d155, blockindex=1018, blocktime=1535424801, txid=d132f38ffd158bb346862f5a7773b5ac8f23a52c87b60be8ea47cbbb0797ba3d, walletconflicts=[], time=1535424759, timereceived=1535424759, bip125-replaceable=no, details=[{account=, address=mgd5gpprouttXnJkmcHqGYL7XV8fz2mEwB, category=send, amount=-1.0E-5, vout=1, fee=-8.76E-6, abandoned=false}], hex=02000000000101a70d39d23a934c95c9107a26b11af48122122e1fd99e8d8073cd8974d836fe6901000000171600141bfeb45f5221f6f15dc2c86847bc8c1e4335f34cfeffffff021eec10000000000017a9148c7cbb6b02ce172e00eef9fc18ec37ce0c23640387e8030000000000001976a9140c20cae77735813a332e949c675371e5becaf23a88ac02483045022100cfa8e4b9193a578767493533a7057355f422abb39ddec8463801d7a67a42f75202201e2d445b418f5ca3635adbdaceb98a68f6971b48b35d8d31957b4a8d73ff47c1012102f36467d5802fda144bbe5dbc5be0b6145b59159c8a6d40fba9ed65db877f1ddc41851500}
2018-08-28 10:58:07.345 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [BtcServiceImplTest.java:90] - 手动查看交易详细信息json字符串:{"blockhash":"000000000000001f618754e2ca93678a54958e3db57d97c517f5890d82a4d155","fees":"0.00000876","height":"1410370"},{"blockhash":"000000000000001f618754e2ca93678a54958e3db57d97c517f5890d82a4d155","fees":"0.00000876","height":"1410370"}
2018-08-28 10:58:07.351 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@358caf3a, testMethod = getTradeInfoTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:58:07.355 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:58:07.355 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:57:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:58:07.357 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:58:07.361 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:58:07.361 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:58:07.368 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:58:07.370 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:58:07.372 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:58:07.373 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:58:07.388 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:58:07.402 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e83cf6: startup date [Tue Aug 28 10:58:05 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:58:07.406 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:58:07.406 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:58:07.414 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef18604: startup date [Tue Aug 28 10:57:59 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:59:37.105 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 10:59:37 CST 2018]; root of context hierarchy
2018-08-28 10:59:37.173 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 10:59:37.356 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:59:37.387 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:59:37.855 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:59:37.861 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 10:59:42.900 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 10:59:42.901 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 10:59:37.827 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 10:59:43.064 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:59:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:59:43.841 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 10:59:44.154 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 10:59:44.552 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 10:59:44.712 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:59:44.741 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:59:44.835 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:59:44.885 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:59:45.132 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:59:45.146 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 10:59:45.393 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2322e56f: startup date [Tue Aug 28 10:59:45 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:59:45.415 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:59:45.980 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 10:59:46.144 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:59:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 10:59:46.145 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 10:59:46.260 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:59:46.266 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3513d214
2018-08-28 10:59:47.242 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 10:59:47.532 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:59:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:59:47.647 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 10:59:47.648 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 10:59:47.648 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 10:59:47.648 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 10:59:47.648 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 10:59:47.649 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:59:47.649 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 10:59:47.650 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 10:59:47.650 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 10:59:47.719 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:59:47.719 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:59:47.783 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 10:59:48.962 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 10:59:49.167 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 10:59:50.309 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 10:59:50.310 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 10:59:50.311 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.311 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:59:50.312 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.312 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 10:59:50.313 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.314 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.314 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.315 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:59:50.315 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.316 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:59:50.316 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 10:59:50.317 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 10:59:50.318 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 10:59:50.319 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.319 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.320 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 10:59:50.320 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 10:59:50.320 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.321 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.321 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.322 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 10:59:50.325 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 10:59:50.325 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 10:59:50.326 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 10:59:50.326 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 10:59:50.327 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 10:59:50.327 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 10:59:51.512 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 10:59:51.513 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 10:59:51.517 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 10:59:51.533 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 10:59:51.672 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b16cfb2: startup date [Tue Aug 28 10:59:51 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:59:51.712 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 10:59:52.087 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:59:52.102 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:59:52.107 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 10:59:52.116 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 10:59:52.129 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 10:59:52.149 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 10:59:52.354 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 10:59:52.354 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 10:59:52.446 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 10:59:52.446 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 10:59:52.626 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 10:59:52.705 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 10:59:52.706 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 10:59:52.706 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 10:59:52.706 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 10:59:52.706 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 10:59:52.707 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 10:59:52.707 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 10:59:52.866 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 10:59:52.867 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 10:59:52.870 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 10:59:52.872 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535425192872 with initial instances count: 1
2018-08-28 10:59:52.955 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:59:52.957 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7008e014
2018-08-28 10:59:53.124 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 10:59:53.139 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 10:59:53.140 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 10:59:53.141 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [StartupInfoLogger.java:57] - Started BtcServiceImplTest in 16.672 seconds (JVM running for 17.402)
2018-08-28 10:59:53.406 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@34adce96, testMethod = checkNodeTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7d28d525]; rollback [true]
2018-08-28 10:59:53.440 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:163] - 检查节点
2018-08-28 10:59:53.440 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:134] - 获取节点对外链接数
2018-08-28 10:59:53.518 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:137] - 获取节点对外链接数 成功
2018-08-28 10:59:53.519 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:169] - 检查节点完毕,节点链接正常
2018-08-28 10:59:53.525 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@34adce96, testMethod = checkNodeTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 10:59:53.538 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 10:59:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 10:59:53.539 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 10:59:53.541 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 10:59:53.557 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 10:59:53.558 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 10:59:53.566 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 10:59:53.568 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 10:59:53.570 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 10:59:53.571 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 10:59:53.577 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 10:59:53.584 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b16cfb2: startup date [Tue Aug 28 10:59:51 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 10:59:53.594 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 10:59:53.594 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 10:59:53.596 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2322e56f: startup date [Tue Aug 28 10:59:45 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:00:10.308 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 11:00:10 CST 2018]; root of context hierarchy
2018-08-28 11:00:10.368 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:00:10.588 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:00:10.620 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:00:11.143 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:00:11.150 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:00:16.190 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:00:16.190 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:00:11.121 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:00:16.579 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:00:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 11:00:17.364 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:00:17.690 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:00:18.089 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:00:18.167 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:00:18.196 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:00:18.268 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:00:18.394 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:00:18.585 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:00:18.600 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:00:18.815 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b088163: startup date [Tue Aug 28 11:00:18 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:00:18.839 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:00:19.458 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:00:19.564 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:00:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 11:00:19.566 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:00:19.658 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:00:19.664 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@794c5f5e
2018-08-28 11:00:20.750 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:00:21.052 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:00:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 11:00:21.177 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:00:21.177 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:00:21.178 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:00:21.178 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:00:21.179 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:00:21.179 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:00:21.180 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:00:21.185 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:00:21.185 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:00:21.264 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:00:21.264 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:00:21.328 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:00:22.397 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:00:22.594 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:00:23.815 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:00:23.816 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.816 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:00:23.817 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:00:23.817 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:00:23.818 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:00:23.818 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.819 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.819 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:00:23.819 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.820 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:00:23.820 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.821 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.821 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.822 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:00:23.822 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:00:23.823 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:00:23.824 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:00:23.824 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.826 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:00:23.827 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:00:23.827 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:00:23.828 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.828 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.829 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:00:23.830 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:00:23.831 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:00:23.831 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:23.831 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:00:25.159 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:00:25.160 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:00:25.165 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:00:25.181 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:00:25.316 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@307a7d0c: startup date [Tue Aug 28 11:00:25 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:00:25.356 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:00:25.512 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:00:25.530 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:00:25.537 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:00:25.545 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:00:25.560 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:00:25.581 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:00:25.800 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:00:25.801 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:00:25.895 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:00:25.896 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:00:26.057 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:00:26.126 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:00:26.126 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:00:26.126 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:00:26.127 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:00:26.127 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:00:26.127 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:00:26.127 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:00:26.471 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:00:26.473 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:00:26.478 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:00:26.482 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535425226482 with initial instances count: 1
2018-08-28 11:00:26.589 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:00:26.592 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5e5cb0bb
2018-08-28 11:00:26.782 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:00:26.783 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:00:26.785 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [StartupInfoLogger.java:57] - Started BtcServiceImplTest in 17.132 seconds (JVM running for 17.87)
2018-08-28 11:00:27.046 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@1d07fb2, testMethod = checkNodeTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@64230d44]; rollback [true]
2018-08-28 11:00:27.082 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:163] - 检查节点
2018-08-28 11:00:27.082 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:134] - 获取节点对外链接数
2018-08-28 11:00:27.163 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:137] - 获取节点对外链接数 成功
2018-08-28 11:00:27.164 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:169] - 检查节点完毕,节点链接正常
2018-08-28 11:00:27.169 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@1d07fb2, testMethod = checkNodeTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:00:27.172 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:00:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 11:00:27.173 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:00:27.180 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:00:27.181 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:00:27.181 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 11:00:27.182 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:00:27.226 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:00:27.230 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:00:27.234 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:00:27.237 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:00:27.245 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:00:27.249 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 11:00:27.253 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@307a7d0c: startup date [Tue Aug 28 11:00:25 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:00:27.256 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:00:27.257 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:00:27.258 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b088163: startup date [Tue Aug 28 11:00:18 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:10:10.921 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7b94089b: startup date [Tue Aug 28 11:10:10 CST 2018]; root of context hierarchy
2018-08-28 11:10:11.016 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:10:11.185 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:10:11.219 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$71a9dfbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:10:11.663 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:10:11.670 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:10:16.718 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:10:16.718 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:10:11.636 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:10:16.880 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7180e701: startup date [Tue Aug 28 11:10:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7b94089b
2018-08-28 11:10:17.664 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:10:17.958 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:10:18.405 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:10:18.494 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:10:18.525 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:10:18.690 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$2941ee42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:10:18.758 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$558fdcbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:10:18.916 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$87bc8300] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:10:18.933 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$71a9dfbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:10:19.189 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4f1afe8f: startup date [Tue Aug 28 11:10:19 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7180e701
2018-08-28 11:10:19.206 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:10:19.866 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:10:19.954 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@7180e701: startup date [Tue Aug 28 11:10:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7b94089b] and template loader path [classpath:/templates/]
2018-08-28 11:10:19.955 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:10:20.064 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:10:20.069 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2a6fb62f
2018-08-28 11:10:21.042 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:10:21.338 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7180e701: startup date [Tue Aug 28 11:10:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7b94089b
2018-08-28 11:10:21.466 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:10:21.466 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:10:21.467 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:10:21.467 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:10:21.467 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:10:21.468 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:10:21.468 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:10:21.472 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:10:21.472 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:10:21.548 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:10:21.548 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:10:21.616 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:10:22.781 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:10:22.969 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:10:24.205 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:10:24.205 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:10:24.206 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.207 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:10:24.208 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:10:24.208 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.208 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.209 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.210 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:10:24.210 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:10:24.211 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:10:24.211 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.212 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:10:24.213 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:10:24.213 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:10:24.213 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.214 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:10:24.215 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.216 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:10:24.216 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.217 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:10:24.217 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.218 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:10:24.221 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:10:24.222 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:10:24.222 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:10:24.223 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.224 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:24.225 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:10:25.480 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:10:25.481 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:10:25.484 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:10:25.503 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:10:25.641 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4314a5ec: startup date [Tue Aug 28 11:10:25 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7180e701
2018-08-28 11:10:25.677 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:10:25.819 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:10:25.837 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:10:25.843 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:10:25.851 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:10:25.864 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:10:25.887 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:10:26.112 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:10:26.112 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:10:26.207 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:10:26.208 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:10:26.360 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:10:26.426 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:10:26.426 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:10:26.426 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:10:26.427 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:10:26.427 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:10:26.427 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:10:26.427 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:10:26.748 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:10:26.750 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:10:26.755 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:10:26.758 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535425826758 with initial instances count: 1
2018-08-28 11:10:26.844 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:10:26.847 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4e8ca849
2018-08-28 11:10:26.855 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:10:27.068 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:10:27.070 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:10:27.072 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 16.79 seconds (JVM running for 17.537)
2018-08-28 11:10:27.382 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@341b80b2 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@6a271c2b, testMethod = newAddressTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@55a1c291 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@2353b3e6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@c46bcd4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@36b4cef0, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@262b2c86], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7ecf001f]; rollback [true]
2018-08-28 11:10:27.419 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 11:10:27.419 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 11:10:27.446 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 27 ms
2018-08-28 11:10:27.473 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=null
2018-08-28 11:10:27.553 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@341b80b2 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@6a271c2b, testMethod = newAddressTest@BtcWalletControllerApiTest, testException = java.lang.AssertionError, mergedContextConfiguration = [WebMergedContextConfiguration@55a1c291 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@2353b3e6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@c46bcd4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@36b4cef0, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@262b2c86], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:10:27.576 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@7180e701: startup date [Tue Aug 28 11:10:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7b94089b
2018-08-28 11:10:27.577 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:10:27.578 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:10:27.580 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:10:27.580 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:10:27.626 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:10:27.627 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:10:27.629 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:10:27.629 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:10:27.633 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:10:27.639 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4314a5ec: startup date [Tue Aug 28 11:10:25 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7180e701
2018-08-28 11:10:27.643 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:10:27.643 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:10:27.646 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4f1afe8f: startup date [Tue Aug 28 11:10:19 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7180e701
2018-08-28 11:11:15.842 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0: startup date [Tue Aug 28 11:11:15 CST 2018]; root of context hierarchy
2018-08-28 11:11:15.948 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:11:16.104 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:11:16.136 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:11:16.592 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:11:16.601 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:11:21.640 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:11:21.640 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:11:16.567 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:11:21.802 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:11:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:11:22.532 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:11:22.852 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:11:23.274 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:11:23.424 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:11:23.451 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:11:23.529 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$f616eb91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:11:23.592 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2264da0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:11:23.827 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5491804f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:11:23.844 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:11:24.091 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c18516: startup date [Tue Aug 28 11:11:24 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:11:24.106 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:11:24.654 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:11:24.770 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:11:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0] and template loader path [classpath:/templates/]
2018-08-28 11:11:24.771 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:11:24.884 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:11:24.891 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3356ff58
2018-08-28 11:11:25.817 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:11:26.115 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:11:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:11:26.248 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:11:26.248 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:11:26.249 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:11:26.250 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:11:26.250 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:11:26.250 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:11:26.251 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:11:26.254 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:11:26.255 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:11:26.332 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:11:26.332 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:11:26.394 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:11:27.526 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:11:27.718 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:11:28.855 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:11:28.855 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:11:28.855 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.856 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:11:28.856 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:11:28.856 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:11:28.857 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:11:28.857 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.858 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:11:28.858 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.859 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:11:28.859 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.859 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:11:28.860 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.860 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:11:28.861 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:11:28.861 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.862 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.863 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:11:28.864 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.864 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:11:28.864 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.865 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:11:28.865 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:11:28.865 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.866 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:11:28.866 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:11:28.867 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:28.867 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:11:30.056 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:11:30.057 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:11:30.062 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:11:30.105 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:11:30.234 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@63794bf7: startup date [Tue Aug 28 11:11:30 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:11:30.271 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:11:30.411 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:11:30.426 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:11:30.433 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:11:30.440 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:11:30.453 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:11:30.477 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:11:30.693 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:11:30.693 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:11:30.782 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:11:30.783 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:11:30.949 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:11:31.015 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:11:31.015 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:11:31.016 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:11:31.016 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:11:31.016 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:11:31.016 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:11:31.017 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:11:31.381 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:11:31.382 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:11:31.388 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:11:31.391 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535425891391 with initial instances count: 1
2018-08-28 11:11:31.469 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4ac50cbc
2018-08-28 11:11:31.470 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:11:31.664 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:11:31.665 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:11:31.667 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 16.436 seconds (JVM running for 17.179)
2018-08-28 11:11:31.909 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@3d2e1d18, testMethod = newAddressTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@25777ab6]; rollback [true]
2018-08-28 11:11:31.978 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 11:11:31.978 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 11:11:32.000 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 21 ms
2018-08-28 11:11:32.029 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:11:32.030 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:11:32.040 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:40] - /btc/newAddress接口调用
2018-08-28 11:11:32.041 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:42] - BtcServiceImpl newAddress() 新建比特币账户开始
2018-08-28 11:11:32.041 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 11:11:32.044 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : cRvqaX4WPhGapipMWufiWcHcwmPkYBEgVEfveyH3CxAyTk1RKsoX
2018-08-28 11:11:32.048 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : mpsYYQb9ec6y8chyGJTfJuWHrPpQW4ZcYm
2018-08-28 11:11:32.049 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 11:11:32.049 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:44] - BtcServiceImpl newAddress() 新建比特币账户完成
2018-08-28 11:11:32.055 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/newAddress
2018-08-28 11:11:32.070 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@3d2e1d18, testMethod = newAddressTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:11:32.079 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:11:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:11:32.079 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:11:32.087 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:11:32.095 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:11:32.095 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:11:32.138 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:11:32.140 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:11:32.141 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:11:32.142 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:11:32.147 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:11:32.157 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@63794bf7: startup date [Tue Aug 28 11:11:30 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:11:32.159 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:11:32.159 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:11:32.160 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c18516: startup date [Tue Aug 28 11:11:24 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:15:22.240 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0: startup date [Tue Aug 28 11:15:22 CST 2018]; root of context hierarchy
2018-08-28 11:15:22.334 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:15:22.507 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:15:22.539 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:15:23.002 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:15:23.008 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:15:28.048 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:15:28.048 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:15:22.977 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:15:28.205 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:15:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:15:28.950 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:15:29.274 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:15:29.673 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:15:29.757 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:15:29.788 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:15:29.884 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$f616eb91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:15:30.019 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2264da0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:15:30.185 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5491804f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:15:30.203 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:15:30.482 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@492521c4: startup date [Tue Aug 28 11:15:30 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:15:30.504 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:15:31.071 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:15:31.157 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:15:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0] and template loader path [classpath:/templates/]
2018-08-28 11:15:31.157 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:15:31.332 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:15:31.337 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@65e4cb84
2018-08-28 11:15:32.644 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:15:32.888 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:15:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:15:33.014 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:15:33.015 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:15:33.016 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:15:33.017 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:15:33.017 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:15:33.018 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:15:33.018 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:15:33.020 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:15:33.021 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:15:33.109 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:15:33.110 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:15:33.175 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:15:34.306 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:15:34.498 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:15:35.662 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.663 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:15:35.663 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.663 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:15:35.664 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.664 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:15:35.665 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.665 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.666 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:15:35.666 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:15:35.666 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.668 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:15:35.668 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:15:35.668 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.669 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.669 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:15:35.670 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.670 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:15:35.670 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:15:35.671 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.671 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:15:35.672 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:15:35.672 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:15:35.673 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.674 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:15:35.675 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:15:35.676 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:15:35.676 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:15:35.677 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:15:36.946 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:15:36.947 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:15:36.951 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:15:36.967 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:15:37.102 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@138f2cd4: startup date [Tue Aug 28 11:15:37 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:15:37.139 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:15:37.280 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:15:37.295 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:15:37.301 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:15:37.307 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:15:37.324 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:15:37.345 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:15:37.594 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:15:37.595 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:15:37.727 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:15:37.732 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:15:37.910 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:15:37.977 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:15:37.977 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:15:37.978 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:15:37.978 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:15:37.979 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:15:37.979 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:15:37.979 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:15:38.319 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:15:38.322 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:15:38.325 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:15:38.328 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535426138328 with initial instances count: 1
2018-08-28 11:15:38.424 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3c9ef29b
2018-08-28 11:15:38.424 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:15:38.614 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:15:38.614 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:15:38.616 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 16.99 seconds (JVM running for 17.728)
2018-08-28 11:15:38.855 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@402d443d, testMethod = tradeTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@5cc088a8]; rollback [true]
2018-08-28 11:15:38.889 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 11:15:38.889 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 11:15:38.918 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 29 ms
2018-08-28 11:15:38.945 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:15:38.946 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:15:38.958 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:54] - /btc/trade接口调用
2018-08-28 11:15:38.959 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:59] - BtcServiceImpl trade() 转账开始
2018-08-28 11:15:39.271 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:104] - BtcServiceImpl trade() 转账成功
2018-08-28 11:15:39.271 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:57] - /btc/trade接口调用:调用完成
2018-08-28 11:15:39.310 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/trade
2018-08-28 11:15:39.327 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@402d443d, testMethod = tradeTest@BtcWalletControllerApiTest, testException = java.lang.AssertionError, mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:15:39.336 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:15:28 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:15:39.337 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:15:39.341 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:15:39.341 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:15:39.344 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:15:39.354 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:15:39.357 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:15:39.360 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:15:39.364 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:15:39.371 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:15:39.377 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@138f2cd4: startup date [Tue Aug 28 11:15:37 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:15:39.380 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:15:39.380 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:15:39.382 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@492521c4: startup date [Tue Aug 28 11:15:30 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:19:52.421 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0: startup date [Tue Aug 28 11:19:52 CST 2018]; root of context hierarchy
2018-08-28 11:19:52.532 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:19:52.710 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:19:52.748 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:19:53.245 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:19:53.251 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:19:58.289 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:19:58.289 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:19:53.220 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:19:58.447 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:19:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:19:59.284 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:19:59.539 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:19:59.940 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:20:00.014 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:20:00.043 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:20:00.136 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$f616eb91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:20:00.282 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2264da0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:20:00.438 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5491804f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:20:00.453 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:20:00.706 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@443a06ad: startup date [Tue Aug 28 11:20:00 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:20:00.725 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:20:01.318 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:20:01.403 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:19:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0] and template loader path [classpath:/templates/]
2018-08-28 11:20:01.404 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:20:01.505 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:20:01.511 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7b44bfb8
2018-08-28 11:20:02.465 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:20:02.731 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:19:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:20:02.852 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:20:02.853 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:20:02.853 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:20:02.854 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:20:02.855 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:20:02.855 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:20:02.856 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:20:02.857 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:20:02.858 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:20:02.927 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:20:02.928 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:20:02.980 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:20:04.167 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:20:04.367 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:20:05.544 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.545 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:20:05.546 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.547 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:20:05.548 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:20:05.548 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.548 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:20:05.549 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:20:05.549 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.550 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.550 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.551 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:20:05.552 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.552 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:20:05.552 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:20:05.553 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.554 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:20:05.554 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.555 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:20:05.556 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:20:05.556 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.557 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:20:05.558 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:20:05.558 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:20:05.559 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.560 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:20:05.561 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:20:05.561 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:20:05.562 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:20:06.805 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:20:06.805 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:20:06.808 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:20:06.827 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:20:06.955 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@45ade413: startup date [Tue Aug 28 11:20:06 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:20:06.991 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:20:07.153 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:20:07.169 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:20:07.176 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:20:07.182 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:20:07.197 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:20:07.217 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:20:07.434 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:20:07.435 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:20:07.529 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:20:07.530 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:20:07.691 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:20:07.760 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:20:07.760 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:20:07.761 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:20:07.761 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:20:07.761 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:20:07.762 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:20:07.762 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:20:08.207 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:20:08.209 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:20:08.214 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:20:08.218 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535426408218 with initial instances count: 1
2018-08-28 11:20:08.301 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@75a967ef
2018-08-28 11:20:08.301 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:20:08.489 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:20:08.490 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:20:08.493 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 16.698 seconds (JVM running for 17.549)
2018-08-28 11:20:08.739 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@4df5b562, testMethod = tradeTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@28fdce67]; rollback [true]
2018-08-28 11:20:08.769 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 11:20:08.770 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 11:20:08.800 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 30 ms
2018-08-28 11:20:08.825 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:20:08.827 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:20:08.840 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:62] - /btc/trade接口调用
2018-08-28 11:20:08.841 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:59] - BtcServiceImpl trade() 转账开始
2018-08-28 11:20:09.189 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:104] - BtcServiceImpl trade() 转账成功
2018-08-28 11:20:09.190 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:65] - /btc/trade接口调用:调用完成
2018-08-28 11:20:09.226 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/trade
2018-08-28 11:20:09.295 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@4df5b562, testMethod = tradeTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:20:09.305 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:19:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:20:09.307 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:20:09.307 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:20:09.324 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:20:09.325 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:20:09.334 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:20:09.339 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:20:09.342 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:20:09.353 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:20:09.357 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:20:09.362 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@45ade413: startup date [Tue Aug 28 11:20:06 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:20:09.365 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:20:09.365 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:20:09.367 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@443a06ad: startup date [Tue Aug 28 11:20:00 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:27:02.595 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0: startup date [Tue Aug 28 11:27:02 CST 2018]; root of context hierarchy
2018-08-28 11:27:02.721 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:27:02.880 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:27:02.912 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:27:03.369 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:27:03.377 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:27:08.413 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:27:08.413 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:27:03.344 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:27:08.573 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:27:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:27:09.353 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:27:09.636 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:27:10.078 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:27:10.145 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:27:10.179 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:27:10.279 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$f616eb91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:27:10.429 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2264da0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:27:10.649 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5491804f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:27:10.668 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:27:10.906 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c18516: startup date [Tue Aug 28 11:27:10 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:27:10.927 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:27:11.490 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:27:11.589 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:27:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0] and template loader path [classpath:/templates/]
2018-08-28 11:27:11.590 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:27:11.743 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:27:11.751 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3356ff58
2018-08-28 11:27:12.869 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:27:13.201 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:27:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:27:13.325 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:27:13.326 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:27:13.327 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:27:13.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:27:13.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:27:13.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:27:13.329 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:27:13.330 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:27:13.331 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:27:13.407 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:27:13.407 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:27:13.472 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:27:14.531 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:27:14.737 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:27:16.102 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.103 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:27:16.103 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:27:16.104 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:27:16.105 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:27:16.105 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:27:16.106 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:27:16.107 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.107 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.108 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:27:16.108 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.109 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:27:16.109 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:27:16.110 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:27:16.111 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:27:16.112 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.112 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.113 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.114 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:27:16.115 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:27:16.115 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.116 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:27:16.116 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:27:16.117 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.119 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:27:16.120 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.121 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.121 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:27:16.122 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:27:17.403 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:27:17.403 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:27:17.409 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:27:17.430 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:27:17.596 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2d8280d9: startup date [Tue Aug 28 11:27:17 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:27:17.634 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:27:17.786 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:27:17.801 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:27:17.808 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:27:17.815 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:27:17.827 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:27:17.848 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:27:18.095 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:27:18.096 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:27:18.202 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:27:18.203 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:27:18.376 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:27:18.446 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:27:18.447 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:27:18.447 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:27:18.447 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:27:18.448 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:27:18.448 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:27:18.448 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:27:18.771 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:27:18.772 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:27:18.777 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:27:18.780 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535426838780 with initial instances count: 1
2018-08-28 11:27:18.873 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@62dca2a8
2018-08-28 11:27:18.873 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:27:19.140 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:27:19.145 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:27:19.148 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 17.191 seconds (JVM running for 17.954)
2018-08-28 11:27:19.468 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@63f9c2cd, testMethod = getTradeStatusTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@3dd2a70d]; rollback [true]
2018-08-28 11:27:19.501 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 11:27:19.501 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 11:27:19.592 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 91 ms
2018-08-28 11:27:19.621 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:27:19.622 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:27:19.637 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:82] - /btc/getTradeStatus接口调用 txhash993a91c6e0c4ec2eccadc7381cb89dbaec65018b325729878491c78657afd695
2018-08-28 11:27:19.640 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 11:27:19.826 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 11:27:19.826 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:89] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 11:27:19.832 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 11:27:19.849 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@63f9c2cd, testMethod = getTradeStatusTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:27:19.864 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:27:19.868 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:27:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:27:19.868 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:27:19.871 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:27:19.871 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:27:19.880 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:27:19.884 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:27:19.886 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:27:19.887 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:27:19.892 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:27:19.899 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2d8280d9: startup date [Tue Aug 28 11:27:17 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:27:19.902 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:27:19.902 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:27:19.905 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c18516: startup date [Tue Aug 28 11:27:10 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:29:18.708 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0: startup date [Tue Aug 28 11:29:18 CST 2018]; root of context hierarchy
2018-08-28 11:29:18.788 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:29:18.985 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:29:19.016 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:29:19.487 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:29:19.499 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:29:24.544 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:29:24.544 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:29:19.462 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:29:24.704 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:29:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:29:25.529 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:29:25.850 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:29:26.296 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:29:26.429 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:29:26.464 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:29:26.560 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$f616eb91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:29:26.736 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2264da0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:29:26.938 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5491804f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:29:26.953 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:29:27.208 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@24134cbc: startup date [Tue Aug 28 11:29:27 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:29:27.224 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:29:27.848 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:29:27.943 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:29:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0] and template loader path [classpath:/templates/]
2018-08-28 11:29:27.944 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:29:28.047 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:29:28.053 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@54be6213
2018-08-28 11:29:29.032 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:29:29.288 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:29:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:29:29.448 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:29:29.449 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:29:29.450 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:29:29.450 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:29:29.451 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:29:29.451 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:29:29.452 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:29:29.455 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:29:29.455 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:29:29.538 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:29:29.538 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:29:29.642 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:29:30.815 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:29:31.030 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:29:32.202 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:29:32.203 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:29:32.204 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:29:32.206 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:29:32.209 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:29:32.209 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.210 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:29:32.211 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:29:32.212 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.212 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.213 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:29:32.214 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:29:32.215 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.216 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:29:32.217 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.218 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.219 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:29:32.219 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:29:32.221 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.222 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:29:32.223 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.224 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.224 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:29:32.227 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:29:32.228 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:29:32.229 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.230 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.232 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:29:32.232 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:29:33.567 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:29:33.567 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:29:33.570 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:29:33.586 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:29:33.712 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@65b85cc3: startup date [Tue Aug 28 11:29:33 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:29:33.755 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:29:33.907 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:29:33.926 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:29:33.932 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:29:33.942 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:29:33.955 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:29:33.977 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:29:34.193 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:29:34.194 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:29:34.303 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:29:34.304 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:29:34.490 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:29:34.566 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:29:34.566 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:29:34.567 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:29:34.567 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:29:34.567 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:29:34.567 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:29:34.568 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:29:35.047 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:29:35.048 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:29:35.052 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:29:35.055 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535426975054 with initial instances count: 1
2018-08-28 11:29:35.141 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2288f641
2018-08-28 11:29:35.145 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:29:35.382 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:29:35.383 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:29:35.385 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 17.288 seconds (JVM running for 18.051)
2018-08-28 11:29:35.651 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@1cfa5e46, testMethod = getTradeInfoTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@37d12d0e]; rollback [true]
2018-08-28 11:29:35.686 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 11:29:35.686 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 11:29:35.711 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 25 ms
2018-08-28 11:29:35.736 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:29:35.737 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:29:35.749 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:113] - /btc/getTradeStatusInfo接口调用
2018-08-28 11:29:35.754 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:143] - BtcServiceImpl getTradeStatusInfo()
2018-08-28 11:29:35.846 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:145] - BtcServiceImpl getTradeStatusInfo()->bitRpcUtils.gettransaction(txHash):{amount=0.0, fee=-8.77E-6, confirmations=0, trusted=true, txid=993a91c6e0c4ec2eccadc7381cb89dbaec65018b325729878491c78657afd695, walletconflicts=[], time=1535426414, timereceived=1535426414, bip125-replaceable=no, details=[{account=, address=mxk8mZzffsyzezhT3ALwUBL2MAX5B4N3mK, category=send, amount=-2.0E-5, label=, vout=0, fee=-8.77E-6, abandoned=false}, {account=, address=mxk8mZzffsyzezhT3ALwUBL2MAX5B4N3mK, category=receive, amount=2.0E-5, label=, vout=0}], hex=02000000000101ac1d404bba7549c1dd20f8d2dfa988f9ceb96a81273a96fafa4c09d7003ba9880100000017160014062bd5d798ca6ccd49012de26e269bbdf5e000f5feffffff02d0070000000000001976a914bcf84a179ef395301eb848631660cd6028def9e388ac4a2568000000000017a914362760c1aa65401d36ede6778229165e87386e3d8702473044022024af8e63cf212bb7cff2e25be23002d000774270c56b48600cc4346f1ed7d96c022040c103929a1b3689a479f37ccbcff247f91cf57d5aa507ab42eed0431c50cb9d0121022696cf940aad298781969ec778f5a22d9ad5a5951169c9e14ad2b20fe4b3cd1f46851500}
2018-08-28 11:29:36.308 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatusInfo
2018-08-28 11:29:36.320 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [BtcWalletControllerApiTest.java:156] - 手动查看json字符串判断正误,json字符串:
2018-08-28 11:29:36.340 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@1cfa5e46, testMethod = getTradeInfoTest@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:29:36.344 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:29:36.346 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:29:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:29:36.347 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:29:36.350 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:29:36.351 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:29:36.362 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:29:36.366 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:29:36.367 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:29:36.369 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:29:36.377 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:29:36.385 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@65b85cc3: startup date [Tue Aug 28 11:29:33 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:29:36.387 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:29:36.387 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:29:36.388 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@24134cbc: startup date [Tue Aug 28 11:29:27 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:32:06.134 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 11:32:06 CST 2018]; root of context hierarchy
2018-08-28 11:32:06.245 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:32:06.365 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:32:06.400 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:32:06.854 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:32:06.866 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:32:11.907 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:32:11.908 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:32:06.831 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:32:12.070 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:32:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 11:32:12.880 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:32:13.179 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:32:13.601 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:32:13.676 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:32:13.704 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:32:13.799 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:32:13.935 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:32:14.108 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:32:14.124 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:32:14.399 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@65da01f4: startup date [Tue Aug 28 11:32:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:32:14.424 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:32:14.998 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:32:15.080 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:32:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 11:32:15.081 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:32:15.181 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:32:15.186 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@48a46b0f
2018-08-28 11:32:16.098 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:32:16.375 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:32:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 11:32:16.507 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:32:16.508 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:32:16.509 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:32:16.509 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:32:16.509 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:32:16.510 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:32:16.510 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:32:16.513 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:32:16.514 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:32:16.613 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:32:16.613 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:32:16.676 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:32:17.723 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:32:17.925 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:32:19.151 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:32:19.152 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.153 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:32:19.154 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:32:19.155 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:32:19.155 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.156 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.158 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.158 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.159 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:32:19.159 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.160 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.161 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:32:19.161 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.161 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:32:19.162 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:32:19.162 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:32:19.163 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:32:19.163 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:32:19.163 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.165 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:32:19.165 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:32:19.166 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:32:19.167 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.167 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:32:19.168 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:19.170 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:32:19.170 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:32:19.171 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:32:20.356 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:32:20.356 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:32:20.359 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:32:20.379 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:32:20.511 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@f8bb9fd: startup date [Tue Aug 28 11:32:20 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:32:20.551 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:32:20.686 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:32:20.701 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:32:20.707 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:32:20.714 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:32:20.727 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:32:20.747 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:32:20.953 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:32:20.953 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:32:21.054 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:32:21.055 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:32:21.222 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:32:21.295 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:32:21.296 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:32:21.296 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:32:21.296 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:32:21.296 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:32:21.296 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:32:21.297 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:32:21.710 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:32:21.711 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:32:21.716 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:32:21.719 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535427141719 with initial instances count: 1
2018-08-28 11:32:21.804 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:32:21.807 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@47120d44
2018-08-28 11:32:21.987 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:32:21.988 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:32:21.990 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [StartupInfoLogger.java:57] - Started BtcServiceImplTest in 16.489 seconds (JVM running for 17.241)
2018-08-28 11:32:22.257 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@2910c3ae, testMethod = getTradeInfoTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2620f935]; rollback [true]
2018-08-28 11:32:22.292 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:143] - BtcServiceImpl getTradeStatusInfo()
2018-08-28 11:32:22.377 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:145] - BtcServiceImpl getTradeStatusInfo()->bitRpcUtils.gettransaction(txHash):{amount=0.0, fee=-8.77E-6, confirmations=0, trusted=true, txid=993a91c6e0c4ec2eccadc7381cb89dbaec65018b325729878491c78657afd695, walletconflicts=[], time=1535426414, timereceived=1535426414, bip125-replaceable=no, details=[{account=, address=mxk8mZzffsyzezhT3ALwUBL2MAX5B4N3mK, category=send, amount=-2.0E-5, label=, vout=0, fee=-8.77E-6, abandoned=false}, {account=, address=mxk8mZzffsyzezhT3ALwUBL2MAX5B4N3mK, category=receive, amount=2.0E-5, label=, vout=0}], hex=02000000000101ac1d404bba7549c1dd20f8d2dfa988f9ceb96a81273a96fafa4c09d7003ba9880100000017160014062bd5d798ca6ccd49012de26e269bbdf5e000f5feffffff02d0070000000000001976a914bcf84a179ef395301eb848631660cd6028def9e388ac4a2568000000000017a914362760c1aa65401d36ede6778229165e87386e3d8702473044022024af8e63cf212bb7cff2e25be23002d000774270c56b48600cc4346f1ed7d96c022040c103929a1b3689a479f37ccbcff247f91cf57d5aa507ab42eed0431c50cb9d0121022696cf940aad298781969ec778f5a22d9ad5a5951169c9e14ad2b20fe4b3cd1f46851500}
2018-08-28 11:32:22.423 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@2910c3ae, testMethod = getTradeInfoTest@BtcServiceImplTest, testException = com.googlecode.jsonrpc4j.HttpException: {"result":null,"error":{"code":-1,"message":"JSON value is not a string as expected"},"id":"-596285420082916335"}
, mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:32:22.431 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:32:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 11:32:22.431 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:32:22.433 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:32:22.434 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:32:22.434 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:32:22.441 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:32:22.444 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:32:22.446 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:32:22.451 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:32:22.458 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:32:22.464 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@f8bb9fd: startup date [Tue Aug 28 11:32:20 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:32:22.469 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:32:22.470 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:32:22.471 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@65da01f4: startup date [Tue Aug 28 11:32:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:33:00.332 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22: startup date [Tue Aug 28 11:33:00 CST 2018]; root of context hierarchy
2018-08-28 11:33:00.430 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:33:00.602 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:33:00.639 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:33:01.141 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:33:01.148 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:33:06.182 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:33:06.183 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:33:01.118 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:33:06.343 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:33:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 11:33:07.102 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:33:07.368 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:33:07.767 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:33:07.846 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:33:07.874 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:33:07.974 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$90e15ad8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:33:08.109 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd2f4955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:33:08.271 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ef5bef96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:33:08.286 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9494c52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:33:08.507 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@15605d83: startup date [Tue Aug 28 11:33:08 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:33:08.523 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:33:09.159 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:33:09.244 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:33:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22] and template loader path [classpath:/templates/]
2018-08-28 11:33:09.245 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:33:09.345 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:33:09.351 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4afd65fd
2018-08-28 11:33:10.382 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:33:10.661 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:33:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 11:33:10.785 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:33:10.786 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:33:10.787 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:33:10.787 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:33:10.787 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:33:10.788 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:33:10.788 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:33:10.791 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:33:10.792 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:33:10.871 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:33:10.872 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:33:10.937 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:33:12.163 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:33:12.357 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:33:13.551 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:33:13.552 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.552 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.553 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.554 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:33:13.554 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:33:13.556 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:33:13.557 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:33:13.557 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.557 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.558 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.559 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.561 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:33:13.562 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:33:13.562 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:33:13.563 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.564 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:33:13.565 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.566 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:33:13.567 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.567 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:33:13.567 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.569 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:33:13.570 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:33:13.570 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:33:13.572 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:33:13.573 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:33:13.574 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:33:13.575 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:33:14.746 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:33:14.746 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:33:14.750 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:33:14.767 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:33:14.960 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@22537971: startup date [Tue Aug 28 11:33:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:33:14.999 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:33:15.146 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:33:15.161 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:33:15.168 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:33:15.174 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:33:15.189 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:33:15.211 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:33:15.431 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:33:15.432 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:33:15.537 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:33:15.537 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:33:15.700 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:33:15.774 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:33:15.774 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:33:15.775 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:33:15.775 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:33:15.775 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:33:15.775 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:33:15.776 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:33:16.141 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:33:16.143 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:33:16.147 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:33:16.151 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535427196151 with initial instances count: 1
2018-08-28 11:33:16.232 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@f1f0da1
2018-08-28 11:33:16.233 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:33:16.410 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:33:16.410 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:33:16.412 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [StartupInfoLogger.java:57] - Started BtcServiceImplTest in 16.748 seconds (JVM running for 17.536)
2018-08-28 11:33:16.678 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@482652f7, testMethod = getTradeInfoTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@20307cb9]; rollback [true]
2018-08-28 11:33:16.719 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:143] - BtcServiceImpl getTradeStatusInfo()
2018-08-28 11:33:16.798 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:145] - BtcServiceImpl getTradeStatusInfo()->bitRpcUtils.gettransaction(txHash):{amount=0.0, fee=-0.00430376, confirmations=25560, blockhash=0000000000000021c3fa83b5ebe82d2425cf32467239296b8202ef7483f27805, blockindex=2641, blocktime=1534858744, txid=12286a3162b8536cc593b0d3dc0d8c84d1e3c5f54d5c1123b95da43fbf9b814b, walletconflicts=[], time=1534855912, timereceived=1534855912, bip125-replaceable=no, details=[{account=, address=moYKxABmKjQtiju2KAdK8XrsbQ1dMmzzxu, category=send, amount=-1.0, label=, vout=0, fee=-0.00430376, abandoned=false}, {account=, address=mxk8mZzffsyzezhT3ALwUBL2MAX5B4N3mK, category=send, amount=-1.0, label=, vout=1, fee=-0.00430376, abandoned=false}, {account=, address=moYKxABmKjQtiju2KAdK8XrsbQ1dMmzzxu, category=receive, amount=1.0, label=, vout=0}, {account=, address=mxk8mZzffsyzezhT3ALwUBL2MAX5B4N3mK, category=receive, amount=1.0, label=, vout=1}], hex=0200000001d1bacd3f1066c23d8e8625383b4c5e0fd3dd30d5d304e9ca907071bc14a6cae8000000006a4730440220551c41738ddeea40466f0a7a402fea632c7f47d0704e6e9e0e444885e4d7d36b02202e1779dcc2d43d92500da70575cfd3597b1a8675942f1ed328c23547de99dd39012103bd8508e8e9c9e930b40dd40c7c5e9269ef4772d1f3173df06cb82e5f5482c388feffffff0300e1f505000000001976a9145803802590f0bfa1fe56a18bc95c3c56fa296bb688ac00e1f505000000001976a914bcf84a179ef395301eb848631660cd6028def9e388ac10152b020000000017a914d818dd6ee7e799d9b6b99b7d60509d242efed07e8769211500}
2018-08-28 11:33:17.031 [main] INFO  com.bithaw.btc.service.BtcServiceImplTest [BtcServiceImplTest.java:90] - 手动查看交易详细信息json字符串:{"blockhash":"0000000000000021c3fa83b5ebe82d2425cf32467239296b8202ef7483f27805","fees":"0.00430376","height":"1384816"},{"blockhash":"0000000000000021c3fa83b5ebe82d2425cf32467239296b8202ef7483f27805","fees":"0.00430376","height":"1384816"}
2018-08-28 11:33:17.039 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@534df152 testClass = BtcServiceImplTest, testInstance = com.bithaw.btc.service.BtcServiceImplTest@482652f7, testMethod = getTradeInfoTest@BtcServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@52e677af testClass = BtcServiceImplTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3cb1ffe6, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d50efb8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@307f6b8c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@12cdcf4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:33:17.043 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5: startup date [Tue Aug 28 11:33:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fde5d22
2018-08-28 11:33:17.043 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:33:17.049 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:33:17.050 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:33:17.052 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:33:17.056 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:33:17.058 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:33:17.060 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:33:17.067 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:33:17.072 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:33:17.077 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@22537971: startup date [Tue Aug 28 11:33:14 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:33:17.085 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:33:17.085 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:33:17.087 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@15605d83: startup date [Tue Aug 28 11:33:08 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@e93f3d5
2018-08-28 11:34:50.083 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0: startup date [Tue Aug 28 11:34:50 CST 2018]; root of context hierarchy
2018-08-28 11:34:50.222 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:34:50.350 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:34:50.402 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:34:50.903 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:34:50.911 [main] INFO  org.apache.kafka.clients.producer.ProducerConfig [AbstractConfig.java:180] - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	block.on.buffer.full = false
	bootstrap.servers = [106.15.95.180:9092]
	buffer.memory = 33554432
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	interceptor.classes = null
	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.fetch.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 0
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	timeout.ms = 30000
	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer

2018-08-28 11:34:55.947 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:83] - Kafka version : 0.10.1.1
2018-08-28 11:34:55.947 [main] INFO  org.apache.kafka.common.utils.AppInfoParser [AppInfoParser.java:84] - Kafka commitId : f10ef2720b03b247
2018-08-28 11:34:50.878 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:34:56.109 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:34:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:34:56.924 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:34:57.208 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:34:57.606 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=7eaae9ad-e015-3176-8c26-460aeecfb421
2018-08-28 11:34:57.691 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:34:57.722 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:34:57.810 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$f616eb91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:34:57.998 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2264da0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:34:58.181 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5491804f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:34:58.201 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e7edd0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:34:58.541 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@65da01f4: startup date [Tue Aug 28 11:34:58 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:34:58.731 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:34:59.581 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:34:59.659 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:34:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0] and template loader path [classpath:/templates/]
2018-08-28 11:34:59.660 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:34:59.739 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:34:59.745 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@48a46b0f
2018-08-28 11:35:00.661 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:35:01.083 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:34:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:35:01.211 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:35:01.212 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:35:01.212 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:35:01.213 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:35:01.213 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:35:01.214 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:35:01.214 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:35:01.216 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:35:01.216 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:35:01.308 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:35:01.309 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:35:01.384 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:35:02.503 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
2018-08-28 11:35:02.700 [main] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:930] - {dataSource-1} inited
2018-08-28 11:35:03.982 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:03.983 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:35:03.983 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:35:03.984 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:35:03.984 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:35:03.985 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:35:03.985 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:03.985 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:03.986 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:35:03.987 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:03.987 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:35:03.988 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:35:03.989 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:03.989 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:03.990 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:03.991 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:35:03.991 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:35:03.992 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:35:03.993 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:35:03.993 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:03.994 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:35:03.996 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:35:03.997 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:35:03.998 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:03.999 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:35:03.999 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:04.000 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:04.000 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:35:04.001 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:35:05.248 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:35:05.248 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:35:05.252 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:35:05.269 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:35:05.401 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7a68bd65: startup date [Tue Aug 28 11:35:05 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:35:05.443 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:35:05.587 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:35:05.603 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:35:05.608 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:35:05.614 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:35:05.631 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:35:05.651 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:35:05.868 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:35:05.868 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:35:05.981 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:35:05.981 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:35:06.158 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:35:06.229 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:35:06.230 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:35:06.230 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:35:06.231 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:35:06.231 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:35:06.231 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:35:06.231 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:35:06.624 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:35:06.626 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:35:06.630 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:35:06.633 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535427306633 with initial instances count: 1
2018-08-28 11:35:06.733 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@309fad0a
2018-08-28 11:35:06.742 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:35:06.956 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:35:06.957 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:35:06.959 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 17.492 seconds (JVM running for 18.236)
2018-08-28 11:35:07.236 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:101] - Began transaction (1) for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@7b0a864e, testMethod = checkNode@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@3dd2a70d]; rollback [true]
2018-08-28 11:35:07.274 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 11:35:07.274 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 11:35:07.317 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 42 ms
2018-08-28 11:35:07.354 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:35:07.354 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:35:07.380 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:128] - 检查节点链接接口调用
2018-08-28 11:35:07.380 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:163] - 检查节点
2018-08-28 11:35:07.381 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:134] - 获取节点对外链接数
2018-08-28 11:35:07.456 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:137] - 获取节点对外链接数 成功
2018-08-28 11:35:07.457 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:169] - 检查节点完毕,节点链接正常
2018-08-28 11:35:07.457 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:130] - 检查节点链接接口调用,节点链接正常
2018-08-28 11:35:07.533 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:136] - 检查节点链接接口调用完毕
2018-08-28 11:35:07.539 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/checkNode
2018-08-28 11:35:07.554 [main] INFO  org.springframework.test.context.transaction.TransactionContext [TransactionContext.java:136] - Rolled back transaction for test context [DefaultTestContext@1b083826 testClass = BtcWalletControllerApiTest, testInstance = com.bithaw.btc.controller.api.BtcWalletControllerApiTest@7b0a864e, testMethod = checkNode@BtcWalletControllerApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@105fece7 testClass = BtcWalletControllerApiTest, locations = '{}', classes = '{class com.bithaw.btc.BithawBtcApplication, class com.bithaw.btc.BithawBtcApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@3d921e20, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a1d6a08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@436e852b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1e7c7811], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2018-08-28 11:35:07.557 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:35:07.562 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@d0ec63: startup date [Tue Aug 28 11:34:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561868a0
2018-08-28 11:35:07.563 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:35:07.566 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:35:07.567 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:35:07.573 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:35:07.575 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:35:07.577 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:35:07.578 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:35:07.583 [Thread-7] INFO  com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java:1825] - {dataSource-1} closed
2018-08-28 11:35:07.588 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7a68bd65: startup date [Tue Aug 28 11:35:05 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:35:07.597 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:35:07.598 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:35:07.599 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@65da01f4: startup date [Tue Aug 28 11:34:58 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@d0ec63
2018-08-28 11:48:08.989 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51: startup date [Tue Aug 28 11:48:08 CST 2018]; root of context hierarchy
2018-08-28 11:48:09.172 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:48:09.215 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e49f7b54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:48:09.224 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:48:09.661 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: dev
2018-08-28 11:48:09.664 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@726386ed: startup date [Tue Aug 28 11:48:09 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51
2018-08-28 11:48:10.302 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:48:10.522 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:48:10.848 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 11:48:10.925 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:48:10.957 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:48:11.065 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$9c3789da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:48:11.147 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fab21e98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:48:11.317 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e49f7b54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:48:16.608 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@14168e1: startup date [Tue Aug 28 11:48:16 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@726386ed
2018-08-28 11:48:16.630 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:48:17.192 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:48:17.307 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@726386ed: startup date [Tue Aug 28 11:48:09 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51] and template loader path [classpath:/templates/]
2018-08-28 11:48:17.308 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:48:17.411 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:48:17.416 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@14d8e132
2018-08-28 11:48:18.334 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:48:18.566 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@726386ed: startup date [Tue Aug 28 11:48:09 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51
2018-08-28 11:48:18.687 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:48:18.688 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:48:18.688 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:48:18.688 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:48:18.688 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:48:18.689 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:48:18.689 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:48:18.691 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:48:18.691 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:48:18.766 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:48:18.768 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:48:18.851 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:48:19.760 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.760 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:48:19.761 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:48:19.761 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.762 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.763 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:48:19.764 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:48:19.765 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:48:19.765 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:48:19.766 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:48:19.766 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:48:19.767 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:48:19.768 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:48:19.769 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:48:19.769 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:48:19.769 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.770 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.770 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.772 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:48:19.773 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.774 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:48:19.775 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.775 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.777 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:48:19.778 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.779 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:48:19.779 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:19.780 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:48:19.780 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:48:20.690 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:48:20.690 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:48:20.693 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:48:20.707 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:48:20.855 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2fe680b4: startup date [Tue Aug 28 11:48:20 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@726386ed
2018-08-28 11:48:20.921 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:48:21.067 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:48:21.083 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:48:21.108 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:48:21.115 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:48:21.133 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:48:21.152 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:48:21.398 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:48:21.398 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:48:21.486 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:48:21.486 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:48:21.673 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:48:21.751 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:48:21.751 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:48:21.751 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:48:21.752 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:48:21.752 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:48:21.753 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:48:21.753 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:48:26.843 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:48:26.847 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:48:26.850 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535428106850 with initial instances count: 0
2018-08-28 11:48:26.923 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5f061f81
2018-08-28 11:48:27.024 [main] INFO  org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-08-28 11:48:27.072 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@726386ed: startup date [Tue Aug 28 11:48:09 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51
2018-08-28 11:48:27.074 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:48:27.076 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:48:27.076 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:48:27.077 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 11:48:32.089 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:48:32.091 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:48:32.093 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:48:32.105 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2fe680b4: startup date [Tue Aug 28 11:48:20 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@726386ed
2018-08-28 11:48:32.111 [main] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:48:32.113 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@14168e1: startup date [Tue Aug 28 11:48:16 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@726386ed
2018-08-28 11:48:32.255 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:50:13.844 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51: startup date [Tue Aug 28 11:50:13 CST 2018]; root of context hierarchy
2018-08-28 11:50:14.037 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:50:14.099 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:50:14.132 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e49f7b54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:14.546 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 11:50:14.551 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@344344fa: startup date [Tue Aug 28 11:50:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51
2018-08-28 11:50:15.261 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:50:15.483 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:50:15.747 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 11:50:15.803 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:50:15.829 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:15.901 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$9c3789da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:15.950 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fab21e98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:16.090 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e49f7b54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:21.378 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ec99035: startup date [Tue Aug 28 11:50:21 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@344344fa
2018-08-28 11:50:21.402 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:50:21.908 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:50:22.014 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@344344fa: startup date [Tue Aug 28 11:50:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51] and template loader path [classpath:/templates/]
2018-08-28 11:50:22.015 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:50:22.119 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:50:22.125 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6fbf5db2
2018-08-28 11:50:23.061 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:50:23.316 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@344344fa: startup date [Tue Aug 28 11:50:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51
2018-08-28 11:50:23.475 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:50:23.476 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:50:23.476 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:50:23.477 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:50:23.477 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:50:23.478 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:50:23.478 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:50:23.479 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:50:23.482 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:50:23.561 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:50:23.561 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:50:23.626 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:50:24.608 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:50:24.609 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.609 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:50:24.610 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:50:24.610 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.611 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:50:24.612 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:50:24.612 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:50:24.613 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.614 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.615 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.615 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.617 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:50:24.624 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:50:24.624 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.626 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:50:24.626 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:50:24.627 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.627 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:50:24.628 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:50:24.628 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:50:24.628 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:50:24.629 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:50:24.629 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:50:24.630 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:50:24.630 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.631 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.631 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:24.632 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:25.559 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:50:25.559 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:50:25.563 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:50:25.588 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:50:25.739 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6462de2: startup date [Tue Aug 28 11:50:25 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@344344fa
2018-08-28 11:50:25.792 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:50:25.947 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:50:25.961 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:50:25.987 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:50:25.994 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:50:26.012 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:50:26.034 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:50:26.256 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:50:26.257 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:50:26.343 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:50:26.344 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:50:26.493 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:50:26.555 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:50:26.556 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:50:26.556 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:50:26.556 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:50:26.557 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:50:26.557 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:50:26.557 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:50:26.725 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:50:26.727 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:50:26.731 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:50:26.734 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535428226734 with initial instances count: 1
2018-08-28 11:50:26.823 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:50:26.824 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@73d58ddd
2018-08-28 11:50:26.994 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:50:26.994 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:50:26.996 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 13.615 seconds (JVM running for 14.327)
2018-08-28 11:50:27.008 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:50:27.095 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@344344fa: startup date [Tue Aug 28 11:50:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@16612a51
2018-08-28 11:50:27.098 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:50:27.102 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:50:27.102 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:50:27.104 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:50:27.111 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:50:27.113 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:50:27.114 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:50:27.115 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:50:27.120 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6462de2: startup date [Tue Aug 28 11:50:25 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@344344fa
2018-08-28 11:50:27.124 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:50:27.124 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:50:27.129 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ec99035: startup date [Tue Aug 28 11:50:21 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@344344fa
2018-08-28 11:50:46.765 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be: startup date [Tue Aug 28 11:50:46 CST 2018]; root of context hierarchy
2018-08-28 11:50:46.984 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:50:47.010 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:50:47.080 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed1923d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:47.492 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 11:50:47.495 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@14bb2297: startup date [Tue Aug 28 11:50:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 11:50:48.066 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:50:48.274 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:50:48.540 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 11:50:48.596 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:50:48.625 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:48.691 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$a4b1325e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:48.739 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$32bc71c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:48.883 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed1923d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:50:54.200 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ec99035: startup date [Tue Aug 28 11:50:54 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297
2018-08-28 11:50:54.223 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:50:54.767 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:50:54.895 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@14bb2297: startup date [Tue Aug 28 11:50:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be] and template loader path [classpath:/templates/]
2018-08-28 11:50:54.896 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:50:54.989 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:50:54.994 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6fbf5db2
2018-08-28 11:50:55.923 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:50:56.186 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297: startup date [Tue Aug 28 11:50:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 11:50:56.326 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:50:56.326 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:50:56.327 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:50:56.327 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:50:56.327 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:50:56.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:50:56.328 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:50:56.329 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:50:56.330 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:50:56.444 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:50:56.444 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:50:56.502 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:50:57.546 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.547 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:50:57.548 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:50:57.549 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:50:57.549 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:50:57.550 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.550 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.551 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:50:57.552 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.553 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:50:57.554 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:50:57.554 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:50:57.563 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.564 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.566 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:50:57.567 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.570 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:50:57.571 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:50:57.572 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:50:57.572 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:50:57.573 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:50:57.574 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:50:57.574 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.575 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.575 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:50:57.575 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.576 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:57.576 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:50:57.577 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:50:58.446 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:50:58.446 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:50:58.449 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:50:58.468 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:50:58.671 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4bfae68a: startup date [Tue Aug 28 11:50:58 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297
2018-08-28 11:50:58.710 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:50:58.864 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:50:58.897 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:50:58.920 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:50:58.926 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:50:58.946 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:50:58.966 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:50:59.208 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:50:59.209 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:50:59.296 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:50:59.298 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:50:59.455 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:50:59.519 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:50:59.520 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:50:59.520 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:50:59.520 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:50:59.520 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:50:59.521 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:50:59.523 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:50:59.676 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:50:59.677 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:50:59.679 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:50:59.682 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535428259682 with initial instances count: 1
2018-08-28 11:50:59.757 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:50:59.759 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7ba12c2f
2018-08-28 11:50:59.931 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:50:59.935 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:50:59.936 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:50:59.937 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 13.629 seconds (JVM running for 14.369)
2018-08-28 11:50:59.995 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 11:50:59.995 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 11:51:00.019 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 24 ms
2018-08-28 11:51:00.042 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:51:00.043 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:51:00.051 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:44] - /btc/newAddress接口调用
2018-08-28 11:51:00.052 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:42] - BtcServiceImpl newAddress() 新建比特币账户开始
2018-08-28 11:51:00.053 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 11:51:00.057 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : KzZsfMDWefWF52YBocbHZgNWg4b3seqgweGBcmSHwCW23T1qfYj7
2018-08-28 11:51:00.063 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : 1Q3sRKNZpZsuHPKUmyPo92k1Es4qxNQuLN
2018-08-28 11:51:00.063 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 11:51:00.063 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:44] - BtcServiceImpl newAddress() 新建比特币账户完成
2018-08-28 11:51:00.068 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/newAddress
2018-08-28 11:51:00.079 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [BtcWalletControllerApiTest.java:77] - 注册的地址为KzZsfMDWefWF52YBocbHZgNWg4b3seqgweGBcmSHwCW23T1qfYj7|1Q3sRKNZpZsuHPKUmyPo92k1Es4qxNQuLN
2018-08-28 11:51:00.085 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@14bb2297: startup date [Tue Aug 28 11:50:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 11:51:00.087 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:51:00.088 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:51:00.090 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:51:00.091 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:51:00.091 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 11:51:00.111 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:51:00.129 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 11:51:00.132 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:51:00.133 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:51:00.134 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:51:00.139 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4bfae68a: startup date [Tue Aug 28 11:50:58 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297
2018-08-28 11:51:00.143 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:51:00.144 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:51:00.147 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ec99035: startup date [Tue Aug 28 11:50:54 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297
2018-08-28 11:54:18.907 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2f01783a: startup date [Tue Aug 28 11:54:18 CST 2018]; root of context hierarchy
2018-08-28 11:54:19.109 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:54:19.127 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:54:19.221 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1948161a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:54:19.660 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 11:54:19.663 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5bd1ceca: startup date [Tue Aug 28 11:54:19 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2f01783a
2018-08-28 11:54:20.264 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:54:20.472 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:54:20.777 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 11:54:20.838 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:54:20.865 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:54:20.933 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$d0e024a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:54:20.984 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2f5ab95e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:54:21.125 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1948161a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:54:26.348 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a00b15d: startup date [Tue Aug 28 11:54:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5bd1ceca
2018-08-28 11:54:26.371 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:54:26.940 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:54:27.048 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@5bd1ceca: startup date [Tue Aug 28 11:54:19 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2f01783a] and template loader path [classpath:/templates/]
2018-08-28 11:54:27.050 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:54:27.155 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:54:27.161 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@70d4f672
2018-08-28 11:54:28.181 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:54:28.433 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5bd1ceca: startup date [Tue Aug 28 11:54:19 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2f01783a
2018-08-28 11:54:28.588 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:54:28.589 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:54:28.589 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:54:28.589 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:54:28.590 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:54:28.590 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:54:28.590 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:54:28.592 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:54:28.592 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:54:28.666 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:54:28.668 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:54:28.736 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:54:29.730 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.731 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:54:29.732 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.732 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:54:29.733 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.733 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.734 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:54:29.735 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.736 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.736 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:54:29.737 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:54:29.738 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:54:29.739 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:54:29.739 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.740 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:54:29.743 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.744 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:54:29.745 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:54:29.745 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:54:29.745 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:54:29.746 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.747 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.748 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:54:29.750 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:29.751 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:54:29.753 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:54:29.753 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:54:29.754 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:54:29.755 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:54:30.633 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:54:30.633 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:54:30.636 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:54:30.657 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:54:30.820 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2cef5b01: startup date [Tue Aug 28 11:54:30 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5bd1ceca
2018-08-28 11:54:30.862 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:54:30.998 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:54:31.012 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:54:31.037 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:54:31.043 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:54:31.054 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:54:31.073 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:54:31.325 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:54:31.326 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:54:31.482 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:54:31.484 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:54:31.640 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:54:31.707 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:54:31.707 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:54:31.708 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:54:31.708 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:54:31.708 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:54:31.708 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:54:31.709 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:54:31.870 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:54:31.872 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:54:31.874 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:54:31.877 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535428471877 with initial instances count: 1
2018-08-28 11:54:31.954 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:54:31.955 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6c87cbf1
2018-08-28 11:54:32.050 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:54:32.161 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:54:32.161 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:54:32.164 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 13.719 seconds (JVM running for 14.448)
2018-08-28 11:54:32.238 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@5bd1ceca: startup date [Tue Aug 28 11:54:19 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2f01783a
2018-08-28 11:54:32.239 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:54:32.241 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:54:32.244 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:54:32.244 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:54:32.268 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:54:32.270 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:54:32.272 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:54:32.272 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:54:32.279 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2cef5b01: startup date [Tue Aug 28 11:54:30 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5bd1ceca
2018-08-28 11:54:32.280 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:54:32.280 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:54:32.287 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a00b15d: startup date [Tue Aug 28 11:54:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@5bd1ceca
2018-08-28 11:54:53.922 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34: startup date [Tue Aug 28 11:54:53 CST 2018]; root of context hierarchy
2018-08-28 11:54:54.133 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:54:54.173 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:54:54.175 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:54:54.676 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 11:54:54.679 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@649f2009: startup date [Tue Aug 28 11:54:54 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 11:54:55.286 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:54:55.496 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:54:55.767 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 11:54:55.821 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:54:55.848 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:54:55.914 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$38c07412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:54:55.969 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$973b08d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:54:56.106 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:55:01.344 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1150d471: startup date [Tue Aug 28 11:55:01 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@649f2009
2018-08-28 11:55:01.364 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:55:01.865 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:55:01.969 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@649f2009: startup date [Tue Aug 28 11:54:54 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34] and template loader path [classpath:/templates/]
2018-08-28 11:55:01.970 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:55:02.057 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:55:02.063 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@27898e13
2018-08-28 11:55:02.986 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:55:03.268 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@649f2009: startup date [Tue Aug 28 11:54:54 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 11:55:03.383 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:55:03.384 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:55:03.384 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:55:03.384 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:55:03.384 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:55:03.385 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:55:03.385 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:55:03.386 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:55:03.387 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:55:03.459 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:55:03.460 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:55:03.521 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:55:04.475 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:55:04.476 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:55:04.477 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.478 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:55:04.478 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.479 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.479 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.480 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:55:04.481 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:55:04.481 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:55:04.482 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:55:04.482 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.483 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:55:04.484 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:55:04.484 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.485 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.487 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:55:04.488 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.490 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:55:04.491 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:55:04.491 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.492 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.494 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:55:04.496 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:55:04.497 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:04.498 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:55:04.498 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:55:04.499 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:55:04.500 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:55:05.580 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:55:05.581 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:55:05.584 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:55:05.602 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:55:05.799 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1825c801: startup date [Tue Aug 28 11:55:05 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@649f2009
2018-08-28 11:55:05.860 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:55:06.062 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:55:06.083 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:55:06.106 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:55:06.112 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:55:06.138 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:55:06.165 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:55:06.455 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:55:06.456 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:55:06.540 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:55:06.540 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:55:06.716 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:55:06.781 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:55:06.782 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:55:06.782 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:55:06.782 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:55:06.783 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:55:06.783 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:55:06.783 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:55:06.939 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:55:06.940 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:55:06.944 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:55:06.947 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535428506947 with initial instances count: 1
2018-08-28 11:55:07.023 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:55:07.026 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@71bfa3d2
2018-08-28 11:55:07.122 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:55:07.186 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:55:07.186 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:55:07.187 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 13.705 seconds (JVM running for 14.461)
2018-08-28 11:55:07.251 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@649f2009: startup date [Tue Aug 28 11:54:54 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 11:55:07.254 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:55:07.256 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:55:07.257 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:55:07.259 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:55:07.308 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:55:07.311 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:55:07.312 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:55:07.313 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:55:07.321 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1825c801: startup date [Tue Aug 28 11:55:05 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@649f2009
2018-08-28 11:55:07.323 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:55:07.324 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:55:07.326 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1150d471: startup date [Tue Aug 28 11:55:01 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@649f2009
2018-08-28 11:56:19.478 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be: startup date [Tue Aug 28 11:56:19 CST 2018]; root of context hierarchy
2018-08-28 11:56:19.667 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:56:19.746 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:56:19.781 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed1923d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:56:20.196 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 11:56:20.199 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@14bb2297: startup date [Tue Aug 28 11:56:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 11:56:20.775 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:56:21.003 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:56:21.274 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 11:56:21.330 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:56:21.355 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:56:21.422 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$a4b1325e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:56:21.474 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$32bc71c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:56:21.608 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed1923d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:56:26.903 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e225820: startup date [Tue Aug 28 11:56:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297
2018-08-28 11:56:26.941 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:56:27.515 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:56:27.608 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@14bb2297: startup date [Tue Aug 28 11:56:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be] and template loader path [classpath:/templates/]
2018-08-28 11:56:27.610 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:56:27.706 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:56:27.712 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4a1a412e
2018-08-28 11:56:28.666 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:56:28.943 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297: startup date [Tue Aug 28 11:56:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 11:56:29.066 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:56:29.067 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:56:29.067 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:56:29.067 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:56:29.067 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:56:29.068 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:56:29.069 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:56:29.071 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:56:29.072 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:56:29.147 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:56:29.148 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:56:29.209 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:56:30.217 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.218 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:56:30.218 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.219 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:56:30.219 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.220 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.220 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:56:30.220 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:56:30.221 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:56:30.221 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.222 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:56:30.222 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:56:30.222 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:56:30.223 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.223 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:56:30.224 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.224 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:56:30.225 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:56:30.226 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.226 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.226 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.227 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.227 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:56:30.228 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:56:30.228 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:56:30.229 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:56:30.230 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:56:30.230 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:56:30.230 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:56:31.150 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:56:31.152 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:56:31.155 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:56:31.177 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:56:31.317 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@33240c4e: startup date [Tue Aug 28 11:56:31 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297
2018-08-28 11:56:31.375 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:56:31.524 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:56:31.544 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:56:31.569 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:56:31.577 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:56:31.589 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:56:31.614 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:56:31.900 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:56:31.901 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:56:32.039 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:56:32.040 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:56:32.235 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:56:32.301 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:56:32.301 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:56:32.301 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:56:32.302 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:56:32.302 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:56:32.302 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:56:32.302 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:56:32.503 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:56:32.504 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:56:32.508 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:56:32.510 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535428592510 with initial instances count: 1
2018-08-28 11:56:32.587 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:56:32.591 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@406e607c
2018-08-28 11:56:32.751 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:56:32.751 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:56:32.755 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 13.766 seconds (JVM running for 14.49)
2018-08-28 11:56:32.810 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 11:56:32.811 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 11:56:32.834 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 23 ms
2018-08-28 11:56:32.860 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:56:32.861 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 11:56:32.872 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:62] - /btc/trade接口调用
2018-08-28 11:56:32.873 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:59] - BtcServiceImpl trade() 转账开始
2018-08-28 11:56:53.925 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:78] - BtcServiceImpl trade() 钱包解锁失败
2018-08-28 11:56:53.925 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:65] - /btc/trade接口调用:调用完成
2018-08-28 11:56:53.983 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/trade
2018-08-28 11:56:54.025 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:56:54.026 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@14bb2297: startup date [Tue Aug 28 11:56:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 11:56:54.027 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:56:54.029 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:56:54.030 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:56:54.030 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 11:56:54.041 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:56:54.044 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:56:54.046 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:56:54.047 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:56:54.062 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 11:56:54.068 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@33240c4e: startup date [Tue Aug 28 11:56:31 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297
2018-08-28 11:56:54.077 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:56:54.078 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:56:54.079 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e225820: startup date [Tue Aug 28 11:56:26 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@14bb2297
2018-08-28 11:59:25.496 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34: startup date [Tue Aug 28 11:59:25 CST 2018]; root of context hierarchy
2018-08-28 11:59:25.702 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:59:25.715 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 11:59:25.771 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:59:26.181 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 11:59:26.186 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@fac80: startup date [Tue Aug 28 11:59:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 11:59:26.745 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 11:59:26.956 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 11:59:27.259 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 11:59:27.314 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:59:27.343 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:59:27.408 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$38c07412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:59:27.460 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$973b08d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:59:27.600 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 11:59:32.913 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c952a33: startup date [Tue Aug 28 11:59:32 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@fac80
2018-08-28 11:59:32.929 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:59:33.482 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 11:59:33.593 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@fac80: startup date [Tue Aug 28 11:59:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34] and template loader path [classpath:/templates/]
2018-08-28 11:59:33.595 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 11:59:33.696 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:59:33.701 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@51e8d066
2018-08-28 11:59:34.567 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 11:59:34.937 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@fac80: startup date [Tue Aug 28 11:59:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 11:59:35.100 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 11:59:35.101 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 11:59:35.102 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 11:59:35.102 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 11:59:35.102 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 11:59:35.103 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:59:35.103 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 11:59:35.104 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 11:59:35.104 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 11:59:35.185 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:59:35.186 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:59:35.240 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 11:59:36.200 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.201 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:59:36.201 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:59:36.203 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.204 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 11:59:36.205 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 11:59:36.206 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 11:59:36.206 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 11:59:36.209 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 11:59:36.209 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:59:36.209 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.210 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 11:59:36.213 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 11:59:36.213 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.213 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.215 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.216 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 11:59:36.218 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 11:59:36.219 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.220 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.220 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.221 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 11:59:36.221 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 11:59:36.222 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 11:59:36.224 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.225 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 11:59:36.226 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:36.227 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 11:59:36.227 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 11:59:37.235 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 11:59:37.235 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 11:59:37.238 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 11:59:37.254 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 11:59:37.431 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1825c801: startup date [Tue Aug 28 11:59:37 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@fac80
2018-08-28 11:59:37.480 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 11:59:37.657 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:59:37.669 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:59:37.693 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 11:59:37.698 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 11:59:37.710 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 11:59:37.728 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 11:59:37.988 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 11:59:37.988 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 11:59:38.078 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 11:59:38.079 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 11:59:38.248 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 11:59:38.332 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 11:59:38.333 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 11:59:38.333 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 11:59:38.333 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 11:59:38.333 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 11:59:38.334 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 11:59:38.335 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 11:59:38.506 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 11:59:38.508 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 11:59:38.512 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 11:59:38.514 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535428778514 with initial instances count: 1
2018-08-28 11:59:38.601 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:59:38.603 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@71bfa3d2
2018-08-28 11:59:38.702 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 11:59:38.803 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 11:59:38.803 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 11:59:38.806 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 13.784 seconds (JVM running for 14.516)
2018-08-28 11:59:59.878 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@fac80: startup date [Tue Aug 28 11:59:26 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 11:59:59.878 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 11:59:59.879 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 11:59:59.887 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 11:59:59.887 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 11:59:59.888 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 11:59:59.899 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 11:59:59.904 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 11:59:59.906 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 11:59:59.907 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 11:59:59.920 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1825c801: startup date [Tue Aug 28 11:59:37 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@fac80
2018-08-28 11:59:59.923 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 11:59:59.924 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 11:59:59.926 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c952a33: startup date [Tue Aug 28 11:59:32 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@fac80
2018-08-28 11:59:59.934 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 13:26:32.082 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34: startup date [Tue Aug 28 13:26:32 CST 2018]; root of context hierarchy
2018-08-28 13:26:32.275 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 13:26:32.349 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:26:32.384 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:26:32.809 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 13:26:32.812 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:26:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:26:33.440 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 13:26:33.650 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 13:26:33.919 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 13:26:33.975 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:26:34.002 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:26:34.070 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$38c07412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:26:34.123 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$973b08d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:26:34.312 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:26:39.683 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@70029d2d: startup date [Tue Aug 28 13:26:39 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:26:39.703 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:26:40.221 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 13:26:40.334 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:26:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34] and template loader path [classpath:/templates/]
2018-08-28 13:26:40.337 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 13:26:40.437 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:26:40.443 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5333f08f
2018-08-28 13:26:41.538 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:26:41.806 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:26:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:26:41.933 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 13:26:41.934 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 13:26:41.934 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 13:26:41.934 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 13:26:41.935 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 13:26:41.935 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:26:41.936 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:26:41.938 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 13:26:41.940 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 13:26:42.015 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:26:42.015 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:26:42.099 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:26:43.847 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 13:26:43.848 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:26:43.849 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.850 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.850 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 13:26:43.851 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.851 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.852 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 13:26:43.853 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.854 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 13:26:43.858 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 13:26:43.859 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 13:26:43.866 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.867 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.869 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.872 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 13:26:43.874 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 13:26:43.875 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.876 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:26:43.877 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 13:26:43.878 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.879 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 13:26:43.879 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 13:26:43.881 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 13:26:43.883 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:26:43.884 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.884 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:26:43.885 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:26:43.891 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:26:44.811 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 13:26:44.812 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 13:26:44.815 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 13:26:44.832 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 13:26:44.973 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@38dc85da: startup date [Tue Aug 28 13:26:44 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:26:45.014 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:26:45.302 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:26:45.315 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:26:45.348 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 13:26:45.356 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 13:26:45.368 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 13:26:45.387 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 13:26:45.717 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 13:26:45.718 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 13:26:45.816 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 13:26:45.816 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 13:26:46.152 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 13:26:46.394 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 13:26:46.394 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 13:26:46.394 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 13:26:46.395 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 13:26:46.395 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 13:26:46.395 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 13:26:46.396 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 13:26:46.568 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 13:26:46.570 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 13:26:46.574 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 13:26:46.578 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535434006578 with initial instances count: 1
2018-08-28 13:26:46.840 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5dc93e71
2018-08-28 13:26:46.855 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:26:47.198 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 13:26:47.198 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 13:26:47.200 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 15.588 seconds (JVM running for 16.314)
2018-08-28 13:27:07.598 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34: startup date [Tue Aug 28 13:27:07 CST 2018]; root of context hierarchy
2018-08-28 13:27:07.808 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 13:27:07.887 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:27:07.930 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:27:08.345 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 13:27:08.349 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:27:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:27:08.914 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 13:27:09.139 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 13:27:09.463 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 13:27:09.563 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:27:09.604 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:27:09.713 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$38c07412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:27:09.788 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$973b08d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:27:09.952 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:27:15.223 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1150d471: startup date [Tue Aug 28 13:27:15 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:27:15.260 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:27:15.809 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 13:27:15.908 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:27:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34] and template loader path [classpath:/templates/]
2018-08-28 13:27:15.910 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 13:27:16.128 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:27:16.135 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@27898e13
2018-08-28 13:27:17.048 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:27:17.302 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:27:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:27:17.420 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 13:27:17.421 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 13:27:17.422 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 13:27:17.422 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 13:27:17.422 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 13:27:17.423 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:27:17.424 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:27:17.427 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 13:27:17.427 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 13:27:17.510 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:27:17.511 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:27:17.578 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:27:18.553 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.554 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:27:18.554 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 13:27:18.555 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 13:27:18.555 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.556 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 13:27:18.557 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:27:18.557 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.558 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.559 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.559 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 13:27:18.560 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 13:27:18.566 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 13:27:18.567 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.567 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 13:27:18.568 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 13:27:18.570 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.572 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.573 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.573 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:27:18.574 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 13:27:18.575 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:27:18.576 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.580 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 13:27:18.581 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:18.582 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 13:27:18.583 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 13:27:18.583 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:27:18.584 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:27:19.509 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 13:27:19.510 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 13:27:19.512 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 13:27:19.531 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 13:27:19.724 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@29702e1: startup date [Tue Aug 28 13:27:19 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:27:19.762 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:27:19.909 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:27:19.924 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:27:19.947 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 13:27:19.952 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 13:27:19.968 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 13:27:19.990 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 13:27:20.266 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 13:27:20.267 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 13:27:20.380 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 13:27:20.381 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 13:27:20.566 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 13:27:20.655 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 13:27:20.656 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 13:27:20.656 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 13:27:20.656 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 13:27:20.656 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 13:27:20.656 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 13:27:20.657 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 13:27:20.818 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 13:27:20.820 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 13:27:20.822 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 13:27:20.825 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535434040825 with initial instances count: 1
2018-08-28 13:27:20.906 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:27:20.908 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@cbae612
2018-08-28 13:27:20.956 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:27:21.086 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 13:27:21.086 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 13:27:21.087 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 13.944 seconds (JVM running for 14.669)
2018-08-28 13:27:42.171 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 13:27:42.194 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:27:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:27:42.196 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 13:27:42.198 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 13:27:42.199 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 13:27:42.199 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 13:27:42.206 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 13:27:42.209 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 13:27:42.211 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 13:27:42.212 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 13:27:42.230 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@29702e1: startup date [Tue Aug 28 13:27:19 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:27:42.233 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 13:27:42.233 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:27:42.234 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 13:27:42.238 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1150d471: startup date [Tue Aug 28 13:27:15 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:30:44.870 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34: startup date [Tue Aug 28 13:30:44 CST 2018]; root of context hierarchy
2018-08-28 13:30:45.064 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 13:30:45.084 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:30:45.163 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:30:45.570 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 13:30:45.573 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:30:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:30:46.222 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 13:30:46.568 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 13:30:47.179 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 13:30:47.273 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:30:47.311 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:30:47.456 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$38c07412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:30:47.527 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$973b08d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:30:47.772 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:30:53.411 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ac4c3f7: startup date [Tue Aug 28 13:30:53 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:30:53.428 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:30:53.978 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 13:30:54.068 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:30:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34] and template loader path [classpath:/templates/]
2018-08-28 13:30:54.070 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 13:30:54.161 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:30:54.166 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2484dbb7
2018-08-28 13:30:55.063 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:30:55.336 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:30:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:30:55.596 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 13:30:55.597 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 13:30:55.597 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 13:30:55.597 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 13:30:55.598 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 13:30:55.598 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:30:55.598 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:30:55.601 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 13:30:55.602 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 13:30:55.680 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:30:55.681 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:30:55.745 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:30:56.649 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 13:30:56.651 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 13:30:56.651 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.652 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:30:56.652 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 13:30:56.652 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 13:30:56.653 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 13:30:56.653 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.655 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:30:56.655 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:30:56.656 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:30:56.657 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 13:30:56.658 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.666 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.667 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 13:30:56.667 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.668 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.669 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 13:30:56.670 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.670 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 13:30:56.672 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.673 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 13:30:56.673 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.675 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 13:30:56.677 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:30:56.678 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.678 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 13:30:56.679 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:56.679 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:30:57.628 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 13:30:57.628 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 13:30:57.631 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 13:30:57.650 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 13:30:57.802 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@69cc3791: startup date [Tue Aug 28 13:30:57 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:30:57.872 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:30:58.027 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:30:58.043 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:30:58.066 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 13:30:58.072 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 13:30:58.084 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 13:30:58.106 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 13:30:58.384 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 13:30:58.385 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 13:30:58.527 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 13:30:58.529 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 13:30:58.731 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 13:30:58.813 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 13:30:58.814 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 13:30:58.814 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 13:30:58.814 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 13:30:58.814 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 13:30:58.815 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 13:30:58.815 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 13:30:59.012 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 13:30:59.014 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 13:30:59.017 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 13:30:59.019 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535434259019 with initial instances count: 1
2018-08-28 13:30:59.085 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3f34db0b
2018-08-28 13:30:59.171 [main] INFO  org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-08-28 13:30:59.181 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@15bcf458: startup date [Tue Aug 28 13:30:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:30:59.182 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 13:30:59.184 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 13:30:59.184 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 13:30:59.191 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 13:30:59.194 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 13:30:59.198 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 13:30:59.199 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 13:30:59.204 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@69cc3791: startup date [Tue Aug 28 13:30:57 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:30:59.206 [main] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:30:59.207 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ac4c3f7: startup date [Tue Aug 28 13:30:53 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@15bcf458
2018-08-28 13:30:59.297 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 13:36:46.025 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34: startup date [Tue Aug 28 13:36:46 CST 2018]; root of context hierarchy
2018-08-28 13:36:46.276 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 13:36:46.287 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:36:46.354 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:36:46.799 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 13:36:46.803 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7c18432b: startup date [Tue Aug 28 13:36:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:36:47.369 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 13:36:47.588 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 13:36:47.857 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 13:36:47.917 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:36:47.943 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:36:48.010 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$38c07412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:36:48.063 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$973b08d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:36:48.204 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:36:53.458 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@500051c5: startup date [Tue Aug 28 13:36:53 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7c18432b
2018-08-28 13:36:53.474 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:36:54.017 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 13:36:54.114 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@7c18432b: startup date [Tue Aug 28 13:36:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34] and template loader path [classpath:/templates/]
2018-08-28 13:36:54.115 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 13:36:54.216 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:36:54.222 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@194012a2
2018-08-28 13:36:55.115 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:36:55.422 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7c18432b: startup date [Tue Aug 28 13:36:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:36:55.540 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 13:36:55.541 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 13:36:55.541 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 13:36:55.541 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 13:36:55.541 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 13:36:55.542 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:36:55.542 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:36:55.543 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 13:36:55.544 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 13:36:55.615 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:36:55.615 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:36:55.673 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:36:56.705 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:36:56.705 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.706 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.706 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:36:56.707 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 13:36:56.707 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.708 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 13:36:56.708 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.709 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 13:36:56.709 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.709 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 13:36:56.709 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 13:36:56.710 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.717 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.718 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 13:36:56.718 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:36:56.719 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.719 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 13:36:56.720 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 13:36:56.723 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:36:56.723 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.724 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.724 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 13:36:56.724 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:56.725 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:36:56.725 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 13:36:56.725 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 13:36:56.726 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 13:36:56.726 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:36:57.714 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 13:36:57.714 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 13:36:57.717 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 13:36:57.776 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 13:36:57.927 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a8c8819: startup date [Tue Aug 28 13:36:57 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7c18432b
2018-08-28 13:36:57.972 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:36:58.215 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:36:58.232 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:36:58.350 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 13:36:58.374 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 13:36:58.395 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 13:36:58.428 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 13:36:58.722 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 13:36:58.723 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 13:36:58.825 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 13:36:58.826 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 13:36:58.982 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 13:36:59.099 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 13:36:59.099 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 13:36:59.100 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 13:36:59.100 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 13:36:59.100 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 13:36:59.100 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 13:36:59.100 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 13:36:59.252 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 13:36:59.253 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 13:36:59.257 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 13:36:59.261 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535434619259 with initial instances count: 1
2018-08-28 13:36:59.345 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:36:59.351 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5299684f
2018-08-28 13:36:59.386 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:37:00.484 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 13:37:00.484 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 13:37:00.486 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 14.965 seconds (JVM running for 15.757)
2018-08-28 13:37:21.601 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@7c18432b: startup date [Tue Aug 28 13:36:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:37:21.603 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 13:37:21.603 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 13:37:21.634 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 13:37:21.635 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 13:37:21.636 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 13:37:21.664 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 13:37:21.674 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 13:37:21.686 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 13:37:21.689 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 13:37:21.693 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 13:37:21.706 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a8c8819: startup date [Tue Aug 28 13:36:57 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7c18432b
2018-08-28 13:37:21.755 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:37:21.755 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 13:37:21.770 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@500051c5: startup date [Tue Aug 28 13:36:53 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7c18432b
2018-08-28 13:40:25.276 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2ad48653: startup date [Tue Aug 28 13:40:25 CST 2018]; root of context hierarchy
2018-08-28 13:40:25.495 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:40:25.532 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 13:40:25.534 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7f7a8515] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:40:25.990 [main] INFO  com.bithaw.btc.feign.SysCoinfigClientTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 13:40:25.993 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7646731d: startup date [Tue Aug 28 13:40:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ad48653
2018-08-28 13:40:26.572 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 13:40:26.800 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 13:40:27.180 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 13:40:27.233 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:40:27.263 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:40:27.333 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$3712939b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:40:27.388 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$958d2859] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:40:27.545 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7f7a8515] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:40:32.839 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d7a64ca: startup date [Tue Aug 28 13:40:32 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7646731d
2018-08-28 13:40:32.858 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:40:33.416 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 13:40:33.527 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@7646731d: startup date [Tue Aug 28 13:40:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ad48653] and template loader path [classpath:/templates/]
2018-08-28 13:40:33.529 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 13:40:33.653 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:40:33.659 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2c48cede
2018-08-28 13:40:34.606 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:40:34.902 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7646731d: startup date [Tue Aug 28 13:40:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ad48653
2018-08-28 13:40:35.073 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 13:40:35.074 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 13:40:35.074 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 13:40:35.074 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 13:40:35.074 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 13:40:35.075 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:40:35.076 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:40:35.079 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 13:40:35.079 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 13:40:35.160 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:40:35.161 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:40:35.220 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:40:36.243 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 13:40:36.245 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 13:40:36.245 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 13:40:36.246 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:40:36.246 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 13:40:36.246 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:40:36.247 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 13:40:36.247 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 13:40:36.250 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 13:40:36.250 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:40:36.251 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.251 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.252 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.253 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:40:36.253 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.254 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 13:40:36.256 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.258 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.258 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.262 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:40:36.262 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.263 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 13:40:36.263 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 13:40:36.265 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 13:40:36.266 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.267 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.268 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 13:40:36.269 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:36.269 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:40:37.823 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 13:40:37.824 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 13:40:37.831 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 13:40:37.860 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 13:40:38.029 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5d33aaa6: startup date [Tue Aug 28 13:40:38 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7646731d
2018-08-28 13:40:38.093 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:40:38.359 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:40:38.377 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:40:38.417 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 13:40:38.428 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 13:40:38.443 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 13:40:38.469 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 13:40:38.768 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 13:40:38.769 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 13:40:38.879 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 13:40:38.880 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 13:40:39.039 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 13:40:39.140 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 13:40:39.140 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 13:40:39.140 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 13:40:39.141 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 13:40:39.141 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 13:40:39.141 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 13:40:39.141 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 13:40:39.405 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 13:40:39.406 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 13:40:39.409 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 13:40:39.413 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535434839412 with initial instances count: 1
2018-08-28 13:40:39.511 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4cebf9fc
2018-08-28 13:40:39.513 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:40:39.710 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 13:40:39.711 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 13:40:39.713 [main] INFO  com.bithaw.btc.feign.SysCoinfigClientTest [StartupInfoLogger.java:57] - Started SysCoinfigClientTest in 14.977 seconds (JVM running for 15.944)
2018-08-28 13:40:39.998 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 13:40:40.002 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@7646731d: startup date [Tue Aug 28 13:40:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2ad48653
2018-08-28 13:40:40.006 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 13:40:40.012 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 13:40:40.013 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 13:40:40.020 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 13:40:40.040 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 13:40:40.048 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 13:40:40.057 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 13:40:40.062 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 13:40:40.063 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 13:40:40.073 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5d33aaa6: startup date [Tue Aug 28 13:40:38 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7646731d
2018-08-28 13:40:40.078 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:40:40.078 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 13:40:40.082 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d7a64ca: startup date [Tue Aug 28 13:40:32 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@7646731d
2018-08-28 13:41:33.991 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34: startup date [Tue Aug 28 13:41:33 CST 2018]; root of context hierarchy
2018-08-28 13:41:34.254 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:41:34.311 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:41:34.415 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 13:41:34.855 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 13:41:34.858 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6b9267b: startup date [Tue Aug 28 13:41:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:41:35.503 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 13:41:35.768 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 13:41:36.086 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 13:41:36.172 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:41:36.201 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:41:36.267 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$38c07412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:41:36.322 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$973b08d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:41:36.467 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:41:41.849 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1150d471: startup date [Tue Aug 28 13:41:41 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@6b9267b
2018-08-28 13:41:41.887 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:41:42.438 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 13:41:42.566 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@6b9267b: startup date [Tue Aug 28 13:41:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34] and template loader path [classpath:/templates/]
2018-08-28 13:41:42.568 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 13:41:42.664 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:41:42.670 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@27898e13
2018-08-28 13:41:43.711 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:41:44.009 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6b9267b: startup date [Tue Aug 28 13:41:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:41:44.176 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 13:41:44.176 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 13:41:44.177 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 13:41:44.177 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 13:41:44.178 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 13:41:44.178 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:41:44.178 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:41:44.180 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 13:41:44.181 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 13:41:44.266 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:41:44.266 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:41:44.330 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:41:46.494 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 13:41:46.495 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 13:41:46.497 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.498 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:41:46.499 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.500 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.501 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.502 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:41:46.504 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:41:46.504 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 13:41:46.505 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 13:41:46.505 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.506 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 13:41:46.507 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 13:41:46.507 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.508 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.509 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 13:41:46.509 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.510 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 13:41:46.511 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:41:46.511 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.512 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.513 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:41:46.513 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 13:41:46.514 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:46.514 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 13:41:46.515 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 13:41:46.515 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 13:41:46.516 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:41:48.505 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 13:41:48.506 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 13:41:48.513 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 13:41:48.534 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 13:41:48.674 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5773bec8: startup date [Tue Aug 28 13:41:48 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@6b9267b
2018-08-28 13:41:48.744 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:41:48.930 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:41:48.946 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:41:48.982 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 13:41:48.988 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 13:41:49.002 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 13:41:49.024 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 13:41:49.443 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 13:41:49.444 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 13:41:49.555 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 13:41:49.556 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 13:41:49.719 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 13:41:49.828 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 13:41:49.829 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 13:41:49.829 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 13:41:49.829 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 13:41:49.830 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 13:41:49.830 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 13:41:49.830 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 13:41:50.040 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 13:41:50.042 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 13:41:50.045 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 13:41:50.048 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535434910047 with initial instances count: 2
2018-08-28 13:41:50.136 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:41:50.138 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@276a8b88
2018-08-28 13:41:50.318 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 13:41:50.318 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 13:41:50.321 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 16.904 seconds (JVM running for 17.894)
2018-08-28 13:41:50.897 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@6b9267b: startup date [Tue Aug 28 13:41:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 13:41:50.899 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 13:41:50.900 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 13:41:50.903 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 13:41:50.903 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 13:41:50.914 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 200
2018-08-28 13:41:50.918 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 13:41:50.920 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 13:41:50.921 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 13:41:50.929 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5773bec8: startup date [Tue Aug 28 13:41:48 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@6b9267b
2018-08-28 13:41:50.933 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:41:50.933 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 13:41:50.934 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1150d471: startup date [Tue Aug 28 13:41:41 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@6b9267b
2018-08-28 13:42:45.319 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be: startup date [Tue Aug 28 13:42:45 CST 2018]; root of context hierarchy
2018-08-28 13:42:45.538 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:42:45.575 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 13:42:45.578 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed1923d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:42:46.043 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 13:42:46.045 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@62da83ed: startup date [Tue Aug 28 13:42:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 13:42:46.660 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 13:42:46.895 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 13:42:47.176 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 13:42:47.231 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:42:47.269 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:42:47.342 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$a4b1325e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:42:47.393 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$32bc71c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:42:47.526 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed1923d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:42:52.799 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@33bb3f86: startup date [Tue Aug 28 13:42:52 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed
2018-08-28 13:42:52.819 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:42:53.362 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 13:42:53.476 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@62da83ed: startup date [Tue Aug 28 13:42:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be] and template loader path [classpath:/templates/]
2018-08-28 13:42:53.477 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 13:42:53.602 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:42:53.610 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5a30722c
2018-08-28 13:42:54.617 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:42:54.970 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed: startup date [Tue Aug 28 13:42:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 13:42:55.396 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 13:42:55.397 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 13:42:55.397 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 13:42:55.398 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 13:42:55.398 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 13:42:55.399 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:42:55.400 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:42:55.403 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 13:42:55.404 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 13:42:55.487 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:42:55.488 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:42:55.543 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:42:56.670 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.671 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.672 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 13:42:56.672 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.673 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 13:42:56.674 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 13:42:56.674 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 13:42:56.674 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 13:42:56.675 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.676 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 13:42:56.676 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.677 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.681 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:42:56.683 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.685 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 13:42:56.686 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:42:56.687 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.688 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:42:56.688 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 13:42:56.690 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.692 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 13:42:56.693 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.694 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:42:56.696 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 13:42:56.697 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 13:42:56.698 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 13:42:56.698 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:42:56.699 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:56.700 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:42:57.568 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 13:42:57.569 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 13:42:57.572 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 13:42:57.585 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 13:42:58.083 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@17882b34: startup date [Tue Aug 28 13:42:58 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed
2018-08-28 13:42:58.168 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:42:58.578 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:42:58.593 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:42:58.635 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 13:42:58.644 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 13:42:58.663 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 13:42:58.692 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 13:42:59.040 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 13:42:59.041 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 13:42:59.211 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 13:42:59.211 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 13:42:59.537 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 13:42:59.651 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 13:42:59.651 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 13:42:59.651 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 13:42:59.652 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 13:42:59.652 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 13:42:59.652 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 13:42:59.652 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 13:42:59.845 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 13:42:59.846 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 13:42:59.849 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 13:42:59.874 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535434979851 with initial instances count: 1
2018-08-28 13:43:00.020 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@570b0136
2018-08-28 13:43:00.081 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:43:00.526 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 13:43:00.529 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 13:43:00.534 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 15.738 seconds (JVM running for 16.726)
2018-08-28 13:43:00.813 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 13:43:00.814 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 13:43:00.847 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 33 ms
2018-08-28 13:43:00.885 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 13:43:00.885 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 13:43:00.897 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:62] - /btc/trade接口调用
2018-08-28 13:43:00.897 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:59] - BtcServiceImpl trade() 转账开始
2018-08-28 13:43:01.300 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:104] - BtcServiceImpl trade() 转账成功
2018-08-28 13:43:01.301 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:65] - /btc/trade接口调用:调用完成
2018-08-28 13:43:01.357 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/trade
2018-08-28 13:43:01.397 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@62da83ed: startup date [Tue Aug 28 13:42:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 13:43:01.398 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 13:43:01.397 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 13:43:01.400 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 13:43:01.401 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 13:43:01.409 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 13:43:01.412 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 13:43:01.415 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 13:43:01.416 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 13:43:01.424 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@17882b34: startup date [Tue Aug 28 13:42:58 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed
2018-08-28 13:43:01.427 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:43:01.428 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 13:43:01.432 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@33bb3f86: startup date [Tue Aug 28 13:42:52 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed
2018-08-28 13:43:22.339 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be: startup date [Tue Aug 28 13:43:22 CST 2018]; root of context hierarchy
2018-08-28 13:43:22.591 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:43:22.611 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 13:43:22.666 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed1923d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:43:23.144 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 13:43:23.147 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@62da83ed: startup date [Tue Aug 28 13:43:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 13:43:23.756 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 13:43:24.014 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 13:43:24.316 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 13:43:24.370 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:43:24.398 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:43:24.463 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$a4b1325e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:43:24.520 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$32bc71c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:43:24.656 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed1923d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:43:29.904 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@721d8ab5: startup date [Tue Aug 28 13:43:29 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed
2018-08-28 13:43:29.925 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:43:30.478 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 13:43:30.584 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@62da83ed: startup date [Tue Aug 28 13:43:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be] and template loader path [classpath:/templates/]
2018-08-28 13:43:30.586 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 13:43:30.708 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:43:30.715 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@74a820bf
2018-08-28 13:43:31.614 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:43:31.912 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed: startup date [Tue Aug 28 13:43:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 13:43:32.038 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 13:43:32.039 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 13:43:32.040 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 13:43:32.040 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 13:43:32.040 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 13:43:32.041 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:43:32.041 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:43:32.042 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 13:43:32.044 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 13:43:32.122 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:43:32.123 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:43:32.184 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:43:33.259 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 13:43:33.261 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:43:33.262 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.263 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.264 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 13:43:33.264 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.265 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:43:33.265 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 13:43:33.266 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 13:43:33.267 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 13:43:33.267 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 13:43:33.268 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 13:43:33.270 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 13:43:33.270 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:43:33.271 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.272 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 13:43:33.274 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.277 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 13:43:33.278 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.281 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 13:43:33.282 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.284 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.285 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.286 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:43:33.288 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 13:43:33.288 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.289 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:43:33.289 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:33.290 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:43:34.248 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 13:43:34.249 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 13:43:34.251 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 13:43:34.271 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 13:43:34.422 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6318a5d2: startup date [Tue Aug 28 13:43:34 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed
2018-08-28 13:43:34.474 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:43:34.629 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:43:34.641 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:43:34.663 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 13:43:34.668 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 13:43:34.695 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 13:43:34.731 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 13:43:35.128 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 13:43:35.129 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 13:43:35.215 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 13:43:35.216 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 13:43:35.365 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 13:43:35.426 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 13:43:35.427 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 13:43:35.427 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 13:43:35.427 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 13:43:35.428 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 13:43:35.428 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 13:43:35.429 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 13:43:35.589 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 13:43:35.591 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 13:43:35.594 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 13:43:35.596 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535435015596 with initial instances count: 1
2018-08-28 13:43:35.676 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:43:35.678 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4386090
2018-08-28 13:43:35.860 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 13:43:35.860 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 13:43:35.862 [main] INFO  com.bithaw.btc.controller.api.BtcWalletControllerApiTest [StartupInfoLogger.java:57] - Started BtcWalletControllerApiTest in 14.02 seconds (JVM running for 15.079)
2018-08-28 13:43:35.929 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext [MockServletContext.java:440] - Initializing Spring FrameworkServlet ''
2018-08-28 13:43:35.931 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet '': initialization started
2018-08-28 13:43:35.957 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet '': initialization completed in 26 ms
2018-08-28 13:43:35.984 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 13:43:35.984 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 13:43:35.998 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhashad21161ac9ac657309e365c577ce7475d69722101090dc9b0f9745e02386e025
2018-08-28 13:43:36.000 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 13:43:36.354 [main] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 13:43:36.355 [main] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 13:43:36.360 [main] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 13:43:36.376 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@62da83ed: startup date [Tue Aug 28 13:43:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7d7758be
2018-08-28 13:43:36.377 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 13:43:36.379 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 13:43:36.380 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 13:43:36.381 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 13:43:36.415 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 13:43:36.418 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 13:43:36.419 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 13:43:36.420 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 13:43:36.427 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6318a5d2: startup date [Tue Aug 28 13:43:34 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed
2018-08-28 13:43:36.431 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:43:36.431 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 13:43:36.434 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@721d8ab5: startup date [Tue Aug 28 13:43:29 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@62da83ed
2018-08-28 13:48:10.793 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5: startup date [Tue Aug 28 13:48:10 CST 2018]; root of context hierarchy
2018-08-28 13:48:11.053 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:48:11.113 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$795689bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:48:11.120 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 13:48:11.722 [main] INFO  com.bithaw.btc.BithawBtcApplication [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 13:48:11.748 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c5536: startup date [Tue Aug 28 13:48:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 13:48:12.468 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 13:48:12.739 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 13:48:13.095 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=47930208-68b5-3e38-bc7f-06af3db29a43
2018-08-28 13:48:13.117 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:48:13.156 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:48:13.239 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$30ee9841] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:48:13.336 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$8f692cff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:48:13.506 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$795689bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 13:48:14.089 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:89] - Tomcat initialized with port(s): 3016 (http)
2018-08-28 13:48:14.100 [main] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:179] - Starting service [Tomcat]
2018-08-28 13:48:14.101 [main] INFO  org.apache.catalina.core.StandardEngine [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.16
2018-08-28 13:48:14.276 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2018-08-28 13:48:14.276 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 2528 ms
2018-08-28 13:48:14.742 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-08-28 13:48:14.743 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2018-08-28 13:48:14.747 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'metricsFilter' to: [/*]
2018-08-28 13:48:14.747 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-28 13:48:14.748 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-28 13:48:14.748 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-28 13:48:14.748 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2018-08-28 13:48:14.748 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-08-28 13:48:14.748 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-08-28 13:48:14.873 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c96403e: startup date [Tue Aug 28 13:48:14 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c5536
2018-08-28 13:48:14.894 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:48:15.475 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 13:48:15.561 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c5536: startup date [Tue Aug 28 13:48:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5] and template loader path [classpath:/templates/]
2018-08-28 13:48:15.563 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 13:48:15.627 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:48:15.635 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@32b95de
2018-08-28 13:48:16.314 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 13:48:16.604 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c5536: startup date [Tue Aug 28 13:48:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 13:48:16.761 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 13:48:16.762 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 13:48:16.763 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 13:48:16.763 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 13:48:16.763 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 13:48:16.764 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:48:16.764 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 13:48:16.766 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 13:48:16.767 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 13:48:16.882 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:48:16.882 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:48:16.995 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 13:48:18.444 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 13:48:18.445 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 13:48:18.448 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.449 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.450 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.450 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:48:18.451 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.454 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 13:48:18.455 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 13:48:18.455 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.456 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.457 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 13:48:18.457 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:48:18.458 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.459 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.460 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 13:48:18.462 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 13:48:18.463 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 13:48:18.463 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.464 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:48:18.465 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 13:48:18.467 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 13:48:18.467 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 13:48:18.468 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.468 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 13:48:18.469 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 13:48:18.470 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 13:48:18.471 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:18.471 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 13:48:19.363 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 13:48:19.374 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-08-28 13:48:19.376 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-08-28 13:48:19.377 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-08-28 13:48:19.377 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-08-28 13:48:19.378 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-08-28 13:48:19.378 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-08-28 13:48:19.383 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-08-28 13:48:19.400 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-08-28 13:48:19.411 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-08-28 13:48:19.417 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-08-28 13:48:19.430 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=576c5536,type=ConfigurationPropertiesRebinder]
2018-08-28 13:48:19.434 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-08-28 13:48:19.435 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 13:48:19.677 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 13:48:19.687 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 13:48:19.743 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 13:48:20.052 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 13:48:20.053 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 13:48:20.167 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 13:48:20.168 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 13:48:20.403 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 13:48:20.484 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 13:48:20.484 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 13:48:20.484 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 13:48:20.484 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 13:48:20.484 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 13:48:20.484 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 13:48:20.485 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 13:48:20.748 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 13:48:20.750 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 13:48:20.753 [main] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 13:48:20.758 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535435300756 with initial instances count: 1
2018-08-28 13:48:20.826 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:40] - Registering application btc-service with eureka with status UP
2018-08-28 13:48:20.827 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1279] - Saw local status change event StatusChangeEvent [timestamp=1535435300827, current=UP, previous=STARTING]
2018-08-28 13:48:20.831 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016: registering service...
2018-08-28 13:48:20.832 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-08-28 13:48:20.842 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-08-28 13:48:20.853 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-08-28 13:48:20.855 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-08-28 13:48:20.857 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-08-28 13:48:20.859 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-08-28 13:48:20.863 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-08-28 13:48:20.865 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-08-28 13:48:20.867 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-08-28 13:48:20.877 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-08-28 13:48:20.880 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-08-28 13:48:20.883 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-08-28 13:48:20.885 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-08-28 13:48:20.888 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2018-08-28 13:48:20.899 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-08-28 13:48:20.899 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - registration status: 204
2018-08-28 13:48:20.900 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 13:48:20.905 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 13:48:20.926 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-3016"]
2018-08-28 13:48:20.938 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Starting ProtocolHandler ["http-nio-3016"]
2018-08-28 13:48:20.958 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2018-08-28 13:48:20.982 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:201] - Tomcat started on port(s): 3016 (http)
2018-08-28 13:48:20.983 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [EurekaAutoServiceRegistration.java:117] - Updating port to 3016
2018-08-28 13:48:20.985 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 13:48:21.134 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@f1701d1: startup date [Tue Aug 28 13:48:21 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c5536
2018-08-28 13:48:21.172 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 13:48:21.384 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:48:21.404 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:48:21.494 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 13:48:21.504 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 13:48:21.532 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:48:21.535 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@529a7ad
2018-08-28 13:48:22.785 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 13:48:22.815 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 13:48:22.815 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 13:48:22.816 [main] INFO  com.bithaw.btc.BithawBtcApplication [StartupInfoLogger.java:57] - Started BithawBtcApplication in 12.566 seconds (JVM running for 18.238)
2018-08-28 13:53:11.618 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [SpringApplicationAdminMXBeanRegistrar.java:125] - Application shutdown requested.
2018-08-28 13:53:11.619 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c5536: startup date [Tue Aug 28 13:48:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 13:53:11.620 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 13:53:11.621 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 13:53:11.622 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 13:53:11.629 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - deregister  status: 200
2018-08-28 13:53:11.634 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 13:53:11.638 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 13:53:11.640 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 13:53:11.643 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 13:53:11.643 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 13:53:11.643 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 13:53:11.644 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 13:53:11.656 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@f1701d1: startup date [Tue Aug 28 13:48:21 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c5536
2018-08-28 13:53:11.661 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 13:53:11.662 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c96403e: startup date [Tue Aug 28 13:48:14 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@576c5536
2018-08-28 13:53:11.665 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-3016"]
2018-08-28 13:53:11.767 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:179] - Stopping service [Tomcat]
2018-08-28 13:53:11.790 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Stopping ProtocolHandler ["http-nio-3016"]
2018-08-28 13:53:11.797 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Destroying ProtocolHandler ["http-nio-3016"]
2018-08-28 13:53:11.798 [Thread-11] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 14:05:16.892 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5: startup date [Tue Aug 28 14:05:16 CST 2018]; root of context hierarchy
2018-08-28 14:05:17.202 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:05:17.226 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 14:05:17.264 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28c1a0ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:05:17.766 [main] INFO  com.bithaw.btc.BithawBtcApplication [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 14:05:17.785 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@889d9e8: startup date [Tue Aug 28 14:05:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:05:18.462 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 14:05:18.710 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 14:05:19.098 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=47930208-68b5-3e38-bc7f-06af3db29a43
2018-08-28 14:05:19.135 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:05:19.169 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:05:19.268 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$e059af75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:05:19.372 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3ed44433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:05:19.530 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28c1a0ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:05:20.139 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:89] - Tomcat initialized with port(s): 3016 (http)
2018-08-28 14:05:20.153 [main] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:179] - Starting service [Tomcat]
2018-08-28 14:05:20.154 [main] INFO  org.apache.catalina.core.StandardEngine [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.16
2018-08-28 14:05:20.330 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2018-08-28 14:05:20.330 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 2545 ms
2018-08-28 14:05:20.821 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-08-28 14:05:20.823 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2018-08-28 14:05:20.827 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'metricsFilter' to: [/*]
2018-08-28 14:05:20.827 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-28 14:05:20.827 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-28 14:05:20.827 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-28 14:05:20.827 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2018-08-28 14:05:20.828 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-08-28 14:05:20.828 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-08-28 14:05:20.971 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1934339: startup date [Tue Aug 28 14:05:20 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@889d9e8
2018-08-28 14:05:20.988 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:05:21.543 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 14:05:21.634 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@889d9e8: startup date [Tue Aug 28 14:05:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5] and template loader path [classpath:/templates/]
2018-08-28 14:05:21.636 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 14:05:21.700 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:05:21.709 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2d38db6f
2018-08-28 14:05:22.422 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:05:22.722 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@889d9e8: startup date [Tue Aug 28 14:05:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:05:22.876 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 14:05:22.877 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 14:05:22.877 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 14:05:22.878 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 14:05:22.878 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 14:05:22.879 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:05:22.879 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:05:22.881 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 14:05:22.881 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 14:05:22.997 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:05:22.997 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:05:23.079 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:05:24.382 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 14:05:24.383 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:05:24.383 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.384 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 14:05:24.385 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 14:05:24.386 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.386 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 14:05:24.387 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 14:05:24.387 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.388 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:05:24.388 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 14:05:24.389 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.390 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 14:05:24.391 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.391 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.393 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 14:05:24.393 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:05:24.394 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:05:24.394 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 14:05:24.396 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 14:05:24.397 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 14:05:24.398 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.398 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:05:24.399 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.399 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.400 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 14:05:24.400 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.400 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:24.402 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:05:25.386 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:05:25.399 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-08-28 14:05:25.401 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-08-28 14:05:25.402 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-08-28 14:05:25.402 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-08-28 14:05:25.403 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-08-28 14:05:25.404 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-08-28 14:05:25.407 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-08-28 14:05:25.420 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-08-28 14:05:25.432 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-08-28 14:05:25.438 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-08-28 14:05:25.452 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=889d9e8,type=ConfigurationPropertiesRebinder]
2018-08-28 14:05:25.457 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-08-28 14:05:25.458 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:05:25.743 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 14:05:25.754 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 14:05:25.809 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 14:05:26.186 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 14:05:26.186 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 14:05:26.316 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 14:05:26.316 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 14:05:26.529 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:05:26.614 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 14:05:26.614 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 14:05:26.614 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 14:05:26.615 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 14:05:26.615 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 14:05:26.615 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 14:05:26.615 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 14:05:26.800 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 14:05:26.803 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 14:05:26.808 [main] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 14:05:26.811 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535436326811 with initial instances count: 1
2018-08-28 14:05:26.880 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:40] - Registering application btc-service with eureka with status UP
2018-08-28 14:05:26.882 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1279] - Saw local status change event StatusChangeEvent [timestamp=1535436326882, current=UP, previous=STARTING]
2018-08-28 14:05:26.885 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-08-28 14:05:26.891 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016: registering service...
2018-08-28 14:05:26.894 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-08-28 14:05:26.904 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-08-28 14:05:26.909 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-08-28 14:05:26.915 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-08-28 14:05:26.918 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-08-28 14:05:26.921 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-08-28 14:05:26.924 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-08-28 14:05:26.928 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-08-28 14:05:26.934 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-08-28 14:05:26.936 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-08-28 14:05:26.938 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-08-28 14:05:26.940 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-08-28 14:05:26.943 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2018-08-28 14:05:26.949 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-08-28 14:05:26.950 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 14:05:26.955 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 14:05:26.960 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - registration status: 204
2018-08-28 14:05:27.018 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-3016"]
2018-08-28 14:05:27.031 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Starting ProtocolHandler ["http-nio-3016"]
2018-08-28 14:05:27.049 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2018-08-28 14:05:27.075 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:201] - Tomcat started on port(s): 3016 (http)
2018-08-28 14:05:27.076 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [EurekaAutoServiceRegistration.java:117] - Updating port to 3016
2018-08-28 14:05:27.078 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 14:05:27.234 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@55170abe: startup date [Tue Aug 28 14:05:27 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@889d9e8
2018-08-28 14:05:27.274 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:05:27.426 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:05:27.442 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:05:27.482 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 14:05:27.491 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 14:05:27.518 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:05:27.520 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2bce237
2018-08-28 14:05:28.094 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 14:05:28.094 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 14:05:28.096 [main] INFO  com.bithaw.btc.BithawBtcApplication [StartupInfoLogger.java:57] - Started BithawBtcApplication in 11.86 seconds (JVM running for 17.761)
2018-08-28 14:05:28.499 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:05:44.569 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [SpringApplicationAdminMXBeanRegistrar.java:125] - Application shutdown requested.
2018-08-28 14:05:44.570 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@889d9e8: startup date [Tue Aug 28 14:05:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:05:44.570 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 14:05:44.571 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 14:05:44.571 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 14:05:44.578 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - deregister  status: 200
2018-08-28 14:05:44.582 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 14:05:44.584 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 14:05:44.585 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 14:05:44.587 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:05:44.588 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:05:44.588 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:05:44.589 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:05:44.601 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@55170abe: startup date [Tue Aug 28 14:05:27 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@889d9e8
2018-08-28 14:05:44.611 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:05:44.612 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1934339: startup date [Tue Aug 28 14:05:20 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@889d9e8
2018-08-28 14:05:44.616 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-3016"]
2018-08-28 14:10:11.502 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5: startup date [Tue Aug 28 14:10:11 CST 2018]; root of context hierarchy
2018-08-28 14:10:11.676 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 14:10:12.346 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:10:12.399 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6af8a981] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:10:13.036 [main] INFO  com.bithaw.btc.BithawBtcApplication [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 14:10:13.060 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4992613f: startup date [Tue Aug 28 14:10:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:10:13.696 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 14:10:13.952 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 14:10:14.331 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=47930208-68b5-3e38-bc7f-06af3db29a43
2018-08-28 14:10:14.405 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:10:14.482 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:10:14.590 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$2290b807] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:10:14.665 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$810b4cc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:10:14.818 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6af8a981] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:10:15.275 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:89] - Tomcat initialized with port(s): 3016 (http)
2018-08-28 14:10:15.289 [main] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:179] - Starting service [Tomcat]
2018-08-28 14:10:15.290 [main] INFO  org.apache.catalina.core.StandardEngine [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.16
2018-08-28 14:10:15.471 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2018-08-28 14:10:15.471 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 2411 ms
2018-08-28 14:10:16.029 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-08-28 14:10:16.030 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2018-08-28 14:10:16.036 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'metricsFilter' to: [/*]
2018-08-28 14:10:16.036 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-28 14:10:16.036 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-28 14:10:16.036 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-28 14:10:16.037 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2018-08-28 14:10:16.037 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-08-28 14:10:16.037 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-08-28 14:10:16.146 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@69eb544f: startup date [Tue Aug 28 14:10:16 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4992613f
2018-08-28 14:10:16.166 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:10:16.697 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 14:10:16.782 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4992613f: startup date [Tue Aug 28 14:10:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5] and template loader path [classpath:/templates/]
2018-08-28 14:10:16.783 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 14:10:16.844 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:10:16.880 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@69069866
2018-08-28 14:10:17.641 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:10:17.900 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4992613f: startup date [Tue Aug 28 14:10:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:10:18.044 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 14:10:18.045 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 14:10:18.046 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 14:10:18.046 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 14:10:18.046 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 14:10:18.047 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:10:18.047 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:10:18.049 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 14:10:18.049 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 14:10:18.152 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:10:18.153 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:10:18.234 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:10:19.475 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:10:19.475 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:10:19.475 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:10:19.478 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 14:10:19.479 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:10:19.480 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.481 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 14:10:19.482 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 14:10:19.483 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.483 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.484 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 14:10:19.485 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 14:10:19.487 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 14:10:19.488 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 14:10:19.488 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.489 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 14:10:19.489 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.490 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 14:10:19.490 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.491 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 14:10:19.492 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:10:19.492 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 14:10:19.493 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.494 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.495 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 14:10:19.496 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.496 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.496 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:19.497 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:10:20.446 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:10:20.455 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-08-28 14:10:20.457 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-08-28 14:10:20.458 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-08-28 14:10:20.458 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-08-28 14:10:20.459 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-08-28 14:10:20.461 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-08-28 14:10:20.463 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-08-28 14:10:20.474 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-08-28 14:10:20.485 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-08-28 14:10:20.492 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-08-28 14:10:20.507 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4992613f,type=ConfigurationPropertiesRebinder]
2018-08-28 14:10:20.513 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-08-28 14:10:20.515 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:10:20.792 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 14:10:20.801 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 14:10:20.853 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 14:10:21.189 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 14:10:21.190 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 14:10:21.321 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 14:10:21.321 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 14:10:21.584 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:10:21.658 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 14:10:21.659 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 14:10:21.659 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 14:10:21.659 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 14:10:21.659 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 14:10:21.659 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 14:10:21.659 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 14:10:21.802 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 14:10:21.804 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 14:10:21.808 [main] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 14:10:21.811 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535436621811 with initial instances count: 0
2018-08-28 14:10:21.918 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:40] - Registering application btc-service with eureka with status UP
2018-08-28 14:10:21.919 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1279] - Saw local status change event StatusChangeEvent [timestamp=1535436621919, current=UP, previous=STARTING]
2018-08-28 14:10:21.921 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016: registering service...
2018-08-28 14:10:21.926 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-08-28 14:10:21.936 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-08-28 14:10:21.947 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-08-28 14:10:21.949 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-08-28 14:10:21.951 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-08-28 14:10:21.953 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-08-28 14:10:21.955 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-08-28 14:10:21.962 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-08-28 14:10:21.965 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-08-28 14:10:21.975 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-08-28 14:10:21.979 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-08-28 14:10:21.984 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - registration status: 204
2018-08-28 14:10:21.988 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-08-28 14:10:21.990 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-08-28 14:10:21.994 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2018-08-28 14:10:21.999 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-08-28 14:10:22.001 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 14:10:22.004 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 14:10:22.026 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-3016"]
2018-08-28 14:10:22.038 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Starting ProtocolHandler ["http-nio-3016"]
2018-08-28 14:10:22.049 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2018-08-28 14:10:22.072 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:201] - Tomcat started on port(s): 3016 (http)
2018-08-28 14:10:22.075 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [EurekaAutoServiceRegistration.java:117] - Updating port to 3016
2018-08-28 14:10:22.078 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 14:10:22.223 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c262a86: startup date [Tue Aug 28 14:10:22 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4992613f
2018-08-28 14:10:22.259 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:10:22.400 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:10:22.419 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:10:22.446 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 14:10:22.453 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 14:10:22.456 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4ce07348
2018-08-28 14:10:22.584 [main] INFO  org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-08-28 14:10:22.596 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4992613f: startup date [Tue Aug 28 14:10:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:10:22.596 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 14:10:22.597 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 14:10:22.598 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 14:10:22.610 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - deregister  status: 200
2018-08-28 14:10:22.612 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 14:10:22.614 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 14:10:22.614 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 14:10:22.615 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:10:22.615 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:10:22.616 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:10:22.616 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:10:22.621 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c262a86: startup date [Tue Aug 28 14:10:22 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4992613f
2018-08-28 14:10:22.633 [main] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:10:22.642 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@69eb544f: startup date [Tue Aug 28 14:10:16 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4992613f
2018-08-28 14:10:26.299 [Thread-11] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 14:11:33.449 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5: startup date [Tue Aug 28 14:11:33 CST 2018]; root of context hierarchy
2018-08-28 14:11:33.688 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 14:11:33.696 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:11:33.811 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3676cffb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:11:34.255 [main] INFO  com.bithaw.btc.BithawBtcApplication [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 14:11:34.303 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c1c5936: startup date [Tue Aug 28 14:11:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:11:35.064 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 14:11:35.338 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 14:11:35.755 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=47930208-68b5-3e38-bc7f-06af3db29a43
2018-08-28 14:11:35.798 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:11:35.834 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:11:35.966 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$ee0ede81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:11:36.054 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$4c89733f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:11:36.233 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3676cffb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:11:36.788 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:89] - Tomcat initialized with port(s): 3016 (http)
2018-08-28 14:11:36.798 [main] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:179] - Starting service [Tomcat]
2018-08-28 14:11:36.799 [main] INFO  org.apache.catalina.core.StandardEngine [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.16
2018-08-28 14:11:36.992 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2018-08-28 14:11:36.992 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 2689 ms
2018-08-28 14:11:37.485 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-08-28 14:11:37.486 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2018-08-28 14:11:37.490 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'metricsFilter' to: [/*]
2018-08-28 14:11:37.491 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-28 14:11:37.491 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-28 14:11:37.491 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-28 14:11:37.491 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2018-08-28 14:11:37.492 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-08-28 14:11:37.492 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-08-28 14:11:37.604 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a5b7d7e: startup date [Tue Aug 28 14:11:37 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c1c5936
2018-08-28 14:11:37.643 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:11:38.174 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 14:11:38.253 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c1c5936: startup date [Tue Aug 28 14:11:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5] and template loader path [classpath:/templates/]
2018-08-28 14:11:38.254 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 14:11:38.314 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:11:38.321 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7bda01da
2018-08-28 14:11:39.013 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:11:39.289 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c1c5936: startup date [Tue Aug 28 14:11:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:11:39.430 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 14:11:39.431 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 14:11:39.431 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 14:11:39.432 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 14:11:39.432 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 14:11:39.432 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:11:39.433 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:11:39.434 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 14:11:39.435 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 14:11:39.537 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:11:39.537 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:11:39.619 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:11:40.827 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:11:40.828 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 14:11:40.828 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:11:40.829 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 14:11:40.829 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 14:11:40.830 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 14:11:40.830 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.831 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.832 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 14:11:40.833 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 14:11:40.833 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.833 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 14:11:40.835 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 14:11:40.836 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:11:40.836 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.838 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:11:40.838 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.840 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 14:11:40.841 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 14:11:40.842 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:11:40.842 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.844 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.845 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.846 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.849 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 14:11:40.850 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.850 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:40.851 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 14:11:40.851 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:11:41.853 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:11:41.861 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-08-28 14:11:41.864 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-08-28 14:11:41.865 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-08-28 14:11:41.865 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-08-28 14:11:41.866 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-08-28 14:11:41.866 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-08-28 14:11:41.869 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-08-28 14:11:41.881 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-08-28 14:11:41.894 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-08-28 14:11:41.900 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-08-28 14:11:41.913 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c1c5936,type=ConfigurationPropertiesRebinder]
2018-08-28 14:11:41.917 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-08-28 14:11:41.918 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:11:42.194 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 14:11:42.203 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 14:11:42.249 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 14:11:42.521 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 14:11:42.522 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 14:11:42.621 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 14:11:42.621 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 14:11:42.839 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:11:42.924 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 14:11:42.925 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 14:11:42.925 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 14:11:42.925 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 14:11:42.925 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 14:11:42.926 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 14:11:42.926 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 14:11:43.106 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 14:11:43.108 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 14:11:43.111 [main] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 14:11:43.114 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535436703113 with initial instances count: 1
2018-08-28 14:11:43.179 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:40] - Registering application btc-service with eureka with status UP
2018-08-28 14:11:43.180 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1279] - Saw local status change event StatusChangeEvent [timestamp=1535436703180, current=UP, previous=STARTING]
2018-08-28 14:11:43.183 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016: registering service...
2018-08-28 14:11:43.186 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-08-28 14:11:43.195 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-08-28 14:11:43.203 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-08-28 14:11:43.205 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-08-28 14:11:43.211 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-08-28 14:11:43.213 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-08-28 14:11:43.219 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-08-28 14:11:43.221 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-08-28 14:11:43.223 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-08-28 14:11:43.228 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-08-28 14:11:43.235 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-08-28 14:11:43.243 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-08-28 14:11:43.249 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-08-28 14:11:43.251 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - registration status: 204
2018-08-28 14:11:43.253 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2018-08-28 14:11:43.258 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-08-28 14:11:43.260 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 14:11:43.264 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 14:11:43.282 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-3016"]
2018-08-28 14:11:43.299 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Starting ProtocolHandler ["http-nio-3016"]
2018-08-28 14:11:43.308 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2018-08-28 14:11:43.328 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:201] - Tomcat started on port(s): 3016 (http)
2018-08-28 14:11:43.329 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [EurekaAutoServiceRegistration.java:117] - Updating port to 3016
2018-08-28 14:11:43.332 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 14:11:43.478 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@54141e7c: startup date [Tue Aug 28 14:11:43 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c1c5936
2018-08-28 14:11:43.514 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:11:43.653 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:11:43.670 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:11:43.698 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 14:11:43.705 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 14:11:43.728 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:11:43.731 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@518ec805
2018-08-28 14:11:44.478 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 14:11:44.478 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 14:11:44.479 [main] INFO  com.bithaw.btc.BithawBtcApplication [StartupInfoLogger.java:57] - Started BithawBtcApplication in 11.587 seconds (JVM running for 17.207)
2018-08-28 14:11:44.707 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:16:42.953 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:19:51.973 [http-nio-3016-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-28 14:19:51.974 [http-nio-3016-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2018-08-28 14:19:52.009 [http-nio-3016-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2018-08-28 14:19:52.029 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:19:52.029 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:19:52.036 [http-nio-3016-exec-1] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:44] - /btc/newAddress接口调用
2018-08-28 14:19:52.037 [http-nio-3016-exec-1] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:42] - BtcServiceImpl newAddress() 新建比特币账户开始
2018-08-28 14:19:52.037 [http-nio-3016-exec-1] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:72] - 开始新建账户
2018-08-28 14:19:52.041 [http-nio-3016-exec-1] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:75] - privateKeyWiF : KyHDQQSpamRospCmEMDABZZoUuEccEyi3ApzFLBv2e2eEv2G8SEC
2018-08-28 14:19:52.064 [http-nio-3016-exec-1] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:77] - Public Address : 1FCa1GWVGEU8unrkyXhHoxwjnHXAF7cHBQ
2018-08-28 14:19:52.065 [http-nio-3016-exec-1] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:78] - 新建账户结束
2018-08-28 14:19:52.065 [http-nio-3016-exec-1] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:44] - BtcServiceImpl newAddress() 新建比特币账户完成
2018-08-28 14:19:52.079 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/newAddress
2018-08-28 14:20:44.071 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34: startup date [Tue Aug 28 14:20:44 CST 2018]; root of context hierarchy
2018-08-28 14:20:44.298 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:20:44.322 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 14:20:44.337 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:20:44.804 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 14:20:44.807 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@70e29e14: startup date [Tue Aug 28 14:20:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 14:20:45.469 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 14:20:45.679 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 14:20:46.001 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=32189f01-6493-3c22-81bc-e90e413a8a5d
2018-08-28 14:20:46.066 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:20:46.093 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:20:46.162 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$38c07412] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:20:46.218 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$973b08d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:20:46.363 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:20:52.221 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@65629ac6: startup date [Tue Aug 28 14:20:52 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@70e29e14
2018-08-28 14:20:52.258 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:20:53.087 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 14:20:53.207 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@70e29e14: startup date [Tue Aug 28 14:20:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34] and template loader path [classpath:/templates/]
2018-08-28 14:20:53.209 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 14:20:53.696 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:20:53.704 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3009eed7
2018-08-28 14:20:58.066 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:21:00.384 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@70e29e14: startup date [Tue Aug 28 14:20:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 14:21:00.509 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 14:21:00.510 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 14:21:00.510 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 14:21:00.510 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 14:21:00.511 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 14:21:00.512 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:21:00.512 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:21:00.513 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 14:21:00.514 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 14:21:00.586 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:21:00.587 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:21:00.908 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:21:03.069 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.070 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:21:03.070 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 14:21:03.071 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 14:21:03.071 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.071 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.072 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.072 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.074 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 14:21:03.075 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.075 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:21:03.076 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:21:03.076 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 14:21:03.077 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 14:21:03.078 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.079 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.084 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 14:21:03.084 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:21:03.085 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.086 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 14:21:03.087 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.091 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 14:21:03.092 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.093 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 14:21:03.093 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 14:21:03.094 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 14:21:03.094 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:21:03.095 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 14:21:03.095 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:21:04.604 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 14:21:04.605 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 14:21:04.610 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 14:21:04.643 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 14:21:04.820 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b8f63db: startup date [Tue Aug 28 14:21:04 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@70e29e14
2018-08-28 14:21:04.905 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:21:05.159 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:21:05.182 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:21:05.232 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 14:21:05.248 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 14:21:05.269 [hystrix-trade-service-1] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 14:21:05.549 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 14:21:05.936 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 14:21:05.937 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 14:21:06.061 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 14:21:06.062 [hystrix-trade-service-1] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 14:21:06.241 [hystrix-trade-service-1] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:21:06.312 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 14:21:06.312 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 14:21:06.312 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 14:21:06.312 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 14:21:06.313 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 14:21:06.315 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 14:21:06.315 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 14:21:06.509 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 14:21:06.511 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 14:21:06.513 [hystrix-trade-service-1] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 14:21:06.515 [hystrix-trade-service-1] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535437266515 with initial instances count: 3
2018-08-28 14:21:06.598 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:21:06.599 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3a6dffb1
2018-08-28 14:21:07.691 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 14:21:07.692 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 14:21:07.696 [main] INFO  com.bithaw.btc.utils.BitRpcUtilsTest [StartupInfoLogger.java:57] - Started BitRpcUtilsTest in 24.083 seconds (JVM running for 24.839)
2018-08-28 14:21:07.797 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@70e29e14: startup date [Tue Aug 28 14:20:44 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb4dd34
2018-08-28 14:21:07.799 [Thread-10] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 14:21:07.800 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 14:21:07.804 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 14:21:07.804 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 14:21:07.805 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1: registering service...
2018-08-28 14:21:07.832 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - deregister  status: 404
2018-08-28 14:21:07.841 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 14:21:07.845 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 14:21:07.847 [Thread-7] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 14:21:07.854 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:-1 - registration status: 204
2018-08-28 14:21:07.862 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b8f63db: startup date [Tue Aug 28 14:21:04 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@70e29e14
2018-08-28 14:21:07.863 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:21:07.864 [Thread-7] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
2018-08-28 14:21:07.865 [Thread-7] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@65629ac6: startup date [Tue Aug 28 14:20:52 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@70e29e14
2018-08-28 14:21:42.980 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:26:43.006 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:27:48.955 [http-nio-3016-exec-3] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:27:48.955 [http-nio-3016-exec-3] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:27:48.964 [http-nio-3016-exec-3] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:62] - /btc/trade接口调用
2018-08-28 14:27:48.964 [http-nio-3016-exec-3] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:59] - BtcServiceImpl trade() 转账开始
2018-08-28 14:27:49.534 [http-nio-3016-exec-3] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:104] - BtcServiceImpl trade() 转账成功
2018-08-28 14:27:49.535 [http-nio-3016-exec-3] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:65] - /btc/trade接口调用:调用完成
2018-08-28 14:27:49.595 [http-nio-3016-exec-3] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/trade
2018-08-28 14:28:00.106 [http-nio-3016-exec-4] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:28:00.107 [http-nio-3016-exec-4] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:28:00.107 [http-nio-3016-exec-4] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:28:00.109 [http-nio-3016-exec-4] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:28:00.235 [http-nio-3016-exec-4] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:28:00.235 [http-nio-3016-exec-4] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:28:00.236 [http-nio-3016-exec-4] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:28:30.019 [http-nio-3016-exec-9] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:28:30.019 [http-nio-3016-exec-9] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:28:30.020 [http-nio-3016-exec-9] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:28:30.020 [http-nio-3016-exec-9] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:28:30.576 [http-nio-3016-exec-9] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:28:30.577 [http-nio-3016-exec-9] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:28:30.578 [http-nio-3016-exec-9] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:29:00.178 [http-nio-3016-exec-6] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:29:00.179 [http-nio-3016-exec-6] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:29:00.179 [http-nio-3016-exec-6] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:29:00.179 [http-nio-3016-exec-6] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:29:00.791 [http-nio-3016-exec-6] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:29:00.792 [http-nio-3016-exec-6] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:29:00.792 [http-nio-3016-exec-6] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:29:30.100 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:29:30.100 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:29:30.101 [http-nio-3016-exec-1] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:29:30.101 [http-nio-3016-exec-1] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:29:31.035 [http-nio-3016-exec-1] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:29:31.035 [http-nio-3016-exec-1] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:29:31.036 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:30:00.088 [http-nio-3016-exec-3] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:30:00.088 [http-nio-3016-exec-3] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:30:00.089 [http-nio-3016-exec-3] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:30:00.089 [http-nio-3016-exec-3] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:30:00.231 [http-nio-3016-exec-5] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:30:00.231 [http-nio-3016-exec-5] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:30:00.231 [http-nio-3016-exec-5] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:133] - 检查节点链接接口调用
2018-08-28 14:30:00.232 [http-nio-3016-exec-5] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:163] - 检查节点
2018-08-28 14:30:00.232 [http-nio-3016-exec-5] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:134] - 获取节点对外链接数
2018-08-28 14:30:00.560 [http-nio-3016-exec-5] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:137] - 获取节点对外链接数 成功
2018-08-28 14:30:00.560 [http-nio-3016-exec-5] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:169] - 检查节点完毕,节点链接正常
2018-08-28 14:30:00.560 [http-nio-3016-exec-5] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:135] - 检查节点链接接口调用,节点链接正常
2018-08-28 14:30:00.584 [http-nio-3016-exec-5] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:141] - 检查节点链接接口调用完毕
2018-08-28 14:30:00.585 [http-nio-3016-exec-5] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/checkNode
2018-08-28 14:30:01.034 [http-nio-3016-exec-3] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:30:01.035 [http-nio-3016-exec-3] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:30:01.036 [http-nio-3016-exec-3] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:30:30.069 [http-nio-3016-exec-9] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:30:30.069 [http-nio-3016-exec-9] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:30:30.070 [http-nio-3016-exec-9] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:30:30.070 [http-nio-3016-exec-9] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:30:30.541 [http-nio-3016-exec-9] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:30:30.542 [http-nio-3016-exec-9] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:30:30.543 [http-nio-3016-exec-9] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:31:00.077 [http-nio-3016-exec-6] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:31:00.078 [http-nio-3016-exec-6] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:31:00.078 [http-nio-3016-exec-6] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:31:00.078 [http-nio-3016-exec-6] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:31:00.547 [http-nio-3016-exec-6] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:31:00.548 [http-nio-3016-exec-6] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:31:00.549 [http-nio-3016-exec-6] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:31:30.064 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:31:30.064 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:31:30.065 [http-nio-3016-exec-1] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:31:30.065 [http-nio-3016-exec-1] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:31:30.606 [http-nio-3016-exec-1] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:31:30.607 [http-nio-3016-exec-1] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:31:30.608 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:31:43.033 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:32:00.239 [http-nio-3016-exec-5] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:32:00.239 [http-nio-3016-exec-5] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:32:00.239 [http-nio-3016-exec-5] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:32:00.240 [http-nio-3016-exec-5] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:32:00.818 [http-nio-3016-exec-5] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:32:00.819 [http-nio-3016-exec-5] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:32:00.820 [http-nio-3016-exec-5] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:32:30.024 [http-nio-3016-exec-4] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:32:30.024 [http-nio-3016-exec-4] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:32:30.024 [http-nio-3016-exec-4] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:32:30.025 [http-nio-3016-exec-4] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:32:31.526 [http-nio-3016-exec-4] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:32:31.527 [http-nio-3016-exec-4] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:32:31.528 [http-nio-3016-exec-4] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:33:00.050 [http-nio-3016-exec-9] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:33:00.050 [http-nio-3016-exec-9] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:33:00.050 [http-nio-3016-exec-9] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:33:00.050 [http-nio-3016-exec-9] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:33:00.453 [http-nio-3016-exec-9] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:33:00.454 [http-nio-3016-exec-9] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:33:00.488 [http-nio-3016-exec-9] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:33:30.118 [http-nio-3016-exec-6] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:33:30.119 [http-nio-3016-exec-6] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:33:30.119 [http-nio-3016-exec-6] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:33:30.120 [http-nio-3016-exec-6] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:33:31.098 [http-nio-3016-exec-6] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:33:31.098 [http-nio-3016-exec-6] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:33:31.100 [http-nio-3016-exec-6] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:33:37.360 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [SpringApplicationAdminMXBeanRegistrar.java:125] - Application shutdown requested.
2018-08-28 14:33:37.361 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c1c5936: startup date [Tue Aug 28 14:11:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:33:37.364 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 14:33:37.364 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016: registering service...
2018-08-28 14:33:37.365 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 14:33:37.365 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 14:33:37.369 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - registration status: 204
2018-08-28 14:33:37.373 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - deregister  status: 200
2018-08-28 14:33:37.376 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 14:33:37.378 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 14:33:37.381 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 14:33:37.382 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:33:37.382 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:33:37.383 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:33:37.383 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:33:37.394 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@54141e7c: startup date [Tue Aug 28 14:11:43 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c1c5936
2018-08-28 14:33:37.398 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:33:37.401 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a5b7d7e: startup date [Tue Aug 28 14:11:37 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c1c5936
2018-08-28 14:33:37.405 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-3016"]
2018-08-28 14:33:37.464 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:179] - Stopping service [Tomcat]
2018-08-28 14:33:37.467 [localhost-startStop-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2018-08-28 14:33:37.476 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Stopping ProtocolHandler ["http-nio-3016"]
2018-08-28 14:33:37.481 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Destroying ProtocolHandler ["http-nio-3016"]
2018-08-28 14:33:37.483 [Thread-11] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 14:35:35.742 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5: startup date [Tue Aug 28 14:35:35 CST 2018]; root of context hierarchy
2018-08-28 14:35:36.192 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 14:35:36.901 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:35:37.642 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ba3675a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:35:40.552 [main] INFO  com.bithaw.btc.BithawBtcApplication [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 14:35:40.600 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f193686: startup date [Tue Aug 28 14:35:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:35:41.805 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 14:35:42.361 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 14:35:43.003 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=47930208-68b5-3e38-bc7f-06af3db29a43
2018-08-28 14:35:43.027 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:35:43.076 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:35:43.213 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$71ce842b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:35:43.327 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$d04918e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:35:43.570 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ba3675a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:35:44.797 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:89] - Tomcat initialized with port(s): 3016 (http)
2018-08-28 14:35:44.811 [main] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:179] - Starting service [Tomcat]
2018-08-28 14:35:44.811 [main] INFO  org.apache.catalina.core.StandardEngine [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.16
2018-08-28 14:35:45.037 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2018-08-28 14:35:45.038 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 4438 ms
2018-08-28 14:35:45.524 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-08-28 14:35:45.526 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2018-08-28 14:35:45.531 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'metricsFilter' to: [/*]
2018-08-28 14:35:45.531 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-28 14:35:45.531 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-28 14:35:45.531 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-28 14:35:45.532 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2018-08-28 14:35:45.532 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-08-28 14:35:45.532 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-08-28 14:35:45.685 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@117b2cc6: startup date [Tue Aug 28 14:35:45 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f193686
2018-08-28 14:35:45.702 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:35:46.188 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 14:35:46.267 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f193686: startup date [Tue Aug 28 14:35:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5] and template loader path [classpath:/templates/]
2018-08-28 14:35:46.268 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 14:35:46.331 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:35:46.338 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@48106381
2018-08-28 14:35:47.061 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:35:47.329 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f193686: startup date [Tue Aug 28 14:35:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:35:47.473 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 14:35:47.474 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 14:35:47.474 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 14:35:47.474 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 14:35:47.474 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 14:35:47.475 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:35:47.475 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:35:47.477 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 14:35:47.478 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 14:35:47.578 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:35:47.579 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:35:47.662 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:35:49.035 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 14:35:49.035 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.036 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 14:35:49.037 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.038 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 14:35:49.038 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.039 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 14:35:49.039 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 14:35:49.039 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.040 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.041 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 14:35:49.041 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 14:35:49.042 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:35:49.042 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 14:35:49.042 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:35:49.043 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:35:49.045 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 14:35:49.046 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:35:49.046 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.047 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.047 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.048 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.048 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.049 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 14:35:49.049 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.050 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:35:49.050 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:35:49.052 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 14:35:49.054 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 14:35:50.102 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:35:50.109 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-08-28 14:35:50.111 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-08-28 14:35:50.113 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-08-28 14:35:50.113 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-08-28 14:35:50.114 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-08-28 14:35:50.115 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-08-28 14:35:50.117 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-08-28 14:35:50.130 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-08-28 14:35:50.143 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-08-28 14:35:50.152 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-08-28 14:35:50.166 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1f193686,type=ConfigurationPropertiesRebinder]
2018-08-28 14:35:50.171 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-08-28 14:35:50.173 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:35:50.451 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 14:35:50.461 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 14:35:50.513 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 14:35:50.858 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 14:35:50.858 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 14:35:50.957 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 14:35:50.957 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 14:35:51.183 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:35:51.260 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 14:35:51.261 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 14:35:51.262 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 14:35:51.262 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 14:35:51.262 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 14:35:51.262 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 14:35:51.262 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 14:35:51.405 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 14:35:51.407 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 14:35:51.412 [main] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 14:35:51.417 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535438151417 with initial instances count: 0
2018-08-28 14:35:51.482 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:40] - Registering application btc-service with eureka with status UP
2018-08-28 14:35:51.484 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1279] - Saw local status change event StatusChangeEvent [timestamp=1535438151484, current=UP, previous=STARTING]
2018-08-28 14:35:51.488 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016: registering service...
2018-08-28 14:35:51.491 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-08-28 14:35:51.500 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-08-28 14:35:51.507 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-08-28 14:35:51.516 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-08-28 14:35:51.521 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-08-28 14:35:51.528 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-08-28 14:35:51.533 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-08-28 14:35:51.539 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-08-28 14:35:51.542 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-08-28 14:35:51.551 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-08-28 14:35:51.553 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-08-28 14:35:51.560 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-08-28 14:35:51.560 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - registration status: 204
2018-08-28 14:35:51.562 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-08-28 14:35:51.567 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2018-08-28 14:35:51.578 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-08-28 14:35:51.579 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 14:35:51.583 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 14:35:51.606 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-3016"]
2018-08-28 14:35:51.618 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Starting ProtocolHandler ["http-nio-3016"]
2018-08-28 14:35:51.628 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2018-08-28 14:35:51.653 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:201] - Tomcat started on port(s): 3016 (http)
2018-08-28 14:35:51.654 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [EurekaAutoServiceRegistration.java:117] - Updating port to 3016
2018-08-28 14:35:51.658 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 14:35:51.816 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7fee060b: startup date [Tue Aug 28 14:35:51 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f193686
2018-08-28 14:35:51.854 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:35:51.998 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:35:52.015 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:35:52.043 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 14:35:52.051 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 14:35:52.056 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@28e49578
2018-08-28 14:35:52.183 [main] INFO  org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-08-28 14:35:52.229 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f193686: startup date [Tue Aug 28 14:35:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:35:52.231 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 14:35:52.232 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 14:35:52.234 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 14:35:52.244 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - deregister  status: 200
2018-08-28 14:35:52.248 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 14:35:52.250 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 14:35:52.250 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 14:35:52.251 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:35:52.252 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:35:52.252 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:35:52.252 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:35:52.259 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7fee060b: startup date [Tue Aug 28 14:35:51 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f193686
2018-08-28 14:35:52.263 [main] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:35:52.268 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@117b2cc6: startup date [Tue Aug 28 14:35:45 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f193686
2018-08-28 14:35:54.432 [Thread-11] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
2018-08-28 14:36:13.354 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5: startup date [Tue Aug 28 14:36:13 CST 2018]; root of context hierarchy
2018-08-28 14:36:13.599 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.5.Final
2018-08-28 14:36:13.686 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:36:13.806 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e3ce3a04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:36:14.305 [main] INFO  com.bithaw.btc.BithawBtcApplication [SpringApplication.java:597] - The following profiles are active: local
2018-08-28 14:36:14.325 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac8cf9b: startup date [Tue Aug 28 14:36:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:36:15.017 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'myRpcInterceptor' with a different definition: replacing [Generic bean: class [com.bithaw.btc.interceptor.MyRpcInterceptor]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\ww\workSpace\gitWorkSpace\bithaw-platform\bithaw-btc\target\classes\com\bithaw\btc\interceptor\MyRpcInterceptor.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=myInterceptorConfig; factoryMethodName=myRpcInterceptor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/bithaw/btc/config/MyInterceptorConfig.class]]
2018-08-28 14:36:15.305 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-28 14:36:15.698 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:263] - BeanFactory id=47930208-68b5-3e38-bc7f-06af3db29a43
2018-08-28 14:36:15.730 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:36:15.770 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'com.bithaw.btc.feign.SysCoinfigClient' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:36:15.894 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$9b66488a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:36:15.973 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f9e0dd48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:36:16.143 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:325] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e3ce3a04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-28 14:36:16.685 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:89] - Tomcat initialized with port(s): 3016 (http)
2018-08-28 14:36:16.698 [main] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:179] - Starting service [Tomcat]
2018-08-28 14:36:16.703 [main] INFO  org.apache.catalina.core.StandardEngine [DirectJDKLog.java:179] - Starting Servlet Engine: Apache Tomcat/8.5.16
2018-08-28 14:36:16.872 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Initializing Spring embedded WebApplicationContext
2018-08-28 14:36:16.872 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 2547 ms
2018-08-28 14:36:17.391 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-08-28 14:36:17.393 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2018-08-28 14:36:17.397 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'metricsFilter' to: [/*]
2018-08-28 14:36:17.398 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-28 14:36:17.398 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-28 14:36:17.398 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-28 14:36:17.398 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2018-08-28 14:36:17.398 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-08-28 14:36:17.398 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-08-28 14:36:17.514 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@49cb5030: startup date [Tue Aug 28 14:36:17 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac8cf9b
2018-08-28 14:36:17.536 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:36:18.088 [main] INFO  com.bithaw.btc.interceptor.MyRpcInterceptor [MyRpcInterceptor.java:19] - --------------------------------------------
2018-08-28 14:36:18.168 [main] INFO  org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java:61] - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac8cf9b: startup date [Tue Aug 28 14:36:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5] and template loader path [classpath:/templates/]
2018-08-28 14:36:18.169 [main] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-28 14:36:18.240 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:36:18.252 [main] INFO  com.netflix.config.DynamicPropertyFactory [DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2e85e3f1
2018-08-28 14:36:18.958 [main] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-28 14:36:19.248 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac8cf9b: startup date [Tue Aug 28 14:36:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:36:19.391 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/checkNode],methods=[POST]}" onto public void com.bithaw.btc.comtroller.api.BtcWalletControllerApi.checkNode()
2018-08-28 14:36:19.392 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/newAddress],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.newAddress()
2018-08-28 14:36:19.393 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/trade],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.trade(java.lang.String,java.lang.String)
2018-08-28 14:36:19.393 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatusInfo],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeInfo(java.lang.String)
2018-08-28 14:36:19.393 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/btc/getTradeStatus],methods=[POST]}" onto public java.lang.String com.bithaw.btc.comtroller.api.BtcWalletControllerApi.getTradeStatus(java.lang.String)
2018-08-28 14:36:19.394 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:36:19.394 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-08-28 14:36:19.397 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-28 14:36:19.398 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-28 14:36:19.494 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:36:19.495 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:36:19.572 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-28 14:36:20.852 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-08-28 14:36:20.852 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-08-28 14:36:20.854 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-08-28 14:36:20.856 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-08-28 14:36:20.857 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:36:20.857 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.859 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.859 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.860 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.861 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:36:20.862 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-08-28 14:36:20.863 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:36:20.866 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-08-28 14:36:20.867 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.868 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-08-28 14:36:20.870 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-08-28 14:36:20.870 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-08-28 14:36:20.871 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.873 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.874 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-08-28 14:36:20.876 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.880 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/shutdown || /shutdown.json],methods=[POST],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.ShutdownMvcEndpoint.invoke()
2018-08-28 14:36:20.880 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.881 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.883 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-08-28 14:36:20.884 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:20.886 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-08-28 14:36:20.887 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-08-28 14:36:20.888 [main] INFO  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-08-28 14:36:21.891 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:36:21.900 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-08-28 14:36:21.902 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-08-28 14:36:21.904 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-08-28 14:36:21.906 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-08-28 14:36:21.908 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-08-28 14:36:21.910 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-08-28 14:36:21.914 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-08-28 14:36:21.927 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-08-28 14:36:21.941 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-08-28 14:36:21.952 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-08-28 14:36:21.966 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3ac8cf9b,type=ConfigurationPropertiesRebinder]
2018-08-28 14:36:21.970 [main] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-08-28 14:36:21.973 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-08-28 14:36:22.151 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-08-28 14:36:22.160 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:70] - Setting initial instance status as: STARTING
2018-08-28 14:36:22.208 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:344] - Initializing Eureka in region us-east-1
2018-08-28 14:36:22.463 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-08-28 14:36:22.464 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-08-28 14:36:22.565 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-08-28 14:36:22.566 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-08-28 14:36:22.782 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:36:22.863 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:920] - Disable delta property : false
2018-08-28 14:36:22.863 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:921] - Single vip registry refresh property : null
2018-08-28 14:36:22.863 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:922] - Force full registry fetch : false
2018-08-28 14:36:22.863 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:923] - Application is null : false
2018-08-28 14:36:22.864 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:924] - Registered Applications size is zero : true
2018-08-28 14:36:22.864 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:926] - Application version is -1: true
2018-08-28 14:36:22.864 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1009] - Getting all instance registry info from the eureka server
2018-08-28 14:36:23.052 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - The response status is 200
2018-08-28 14:36:23.053 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1244] - Starting heartbeat executor: renew interval is: 30
2018-08-28 14:36:23.056 [main] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-28 14:36:23.062 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:425] - Discovery Client initialized at timestamp 1535438183062 with initial instances count: 1
2018-08-28 14:36:23.127 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:40] - Registering application btc-service with eureka with status UP
2018-08-28 14:36:23.128 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1279] - Saw local status change event StatusChangeEvent [timestamp=1535438183128, current=UP, previous=STARTING]
2018-08-28 14:36:23.130 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016: registering service...
2018-08-28 14:36:23.140 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-08-28 14:36:23.149 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-08-28 14:36:23.163 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - registration status: 204
2018-08-28 14:36:23.166 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-08-28 14:36:23.169 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-08-28 14:36:23.171 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-08-28 14:36:23.174 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-08-28 14:36:23.177 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-08-28 14:36:23.179 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-08-28 14:36:23.184 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-08-28 14:36:23.192 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-08-28 14:36:23.195 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-08-28 14:36:23.198 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-08-28 14:36:23.200 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-08-28 14:36:23.207 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'shutdownEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=shutdownEndpoint]
2018-08-28 14:36:23.211 [main] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-08-28 14:36:23.213 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 2147483647
2018-08-28 14:36:23.218 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [HystrixCircuitBreakerConfiguration.java:138] - Starting poller
2018-08-28 14:36:23.238 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Initializing ProtocolHandler ["http-nio-3016"]
2018-08-28 14:36:23.251 [main] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Starting ProtocolHandler ["http-nio-3016"]
2018-08-28 14:36:23.260 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool [DirectJDKLog.java:179] - Using a shared selector for servlet write/read
2018-08-28 14:36:23.283 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:201] - Tomcat started on port(s): 3016 (http)
2018-08-28 14:36:23.284 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [EurekaAutoServiceRegistration.java:117] - Updating port to 3016
2018-08-28 14:36:23.287 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:26] - 初始化BitPrcUtils
2018-08-28 14:36:23.432 [hystrix-trade-service-1] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@66780d95: startup date [Tue Aug 28 14:36:23 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac8cf9b
2018-08-28 14:36:23.470 [hystrix-trade-service-1] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-28 14:36:23.613 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:36:23.630 [hystrix-trade-service-1] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:36:23.656 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: trade-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-28 14:36:23.667 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:214] - Using serverListUpdater PollingServerListUpdater
2018-08-28 14:36:23.694 [hystrix-trade-service-1] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:36:23.697 [hystrix-trade-service-1] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client trade-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trade-service,current list of Servers=[192.168.199.18:3013],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.199.18:3013;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5f6b9bb7
2018-08-28 14:36:24.481 [main] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:57] - 初始化bitRpc客户端成功
2018-08-28 14:36:24.481 [main] INFO  com.bithaw.btc.init.BitRpcUtilsInit [BitRpcUtilsInit.java:33] - 初始化BitPrcUtils完毕
2018-08-28 14:36:24.482 [main] INFO  com.bithaw.btc.BithawBtcApplication [StartupInfoLogger.java:57] - Started BithawBtcApplication in 11.704 seconds (JVM running for 17.293)
2018-08-28 14:36:24.670 [PollingServerListUpdater-0] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: trade-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-28 14:38:01.743 [http-nio-3016-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-28 14:38:01.743 [http-nio-3016-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2018-08-28 14:38:01.787 [http-nio-3016-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-08-28 14:38:01.864 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:38:01.864 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:38:01.950 [http-nio-3016-exec-1] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:38:01.953 [http-nio-3016-exec-1] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:38:02.478 [http-nio-3016-exec-1] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:38:02.478 [http-nio-3016-exec-1] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:38:02.491 [http-nio-3016-exec-1] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:38:30.032 [http-nio-3016-exec-5] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:38:30.032 [http-nio-3016-exec-5] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:38:30.033 [http-nio-3016-exec-5] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:86] - /btc/getTradeStatus接口调用 txhash9029627a6e7a0d334ebb6805a31121bd4ef78833cee8bf6d416c152f43a1d90e
2018-08-28 14:38:30.033 [http-nio-3016-exec-5] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:118] - BtcServiceImpl getTradeStatus()
2018-08-28 14:38:31.493 [http-nio-3016-exec-5] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:130] - BtcServiceImpl getTradeStatus():查到交易 正在确认中
2018-08-28 14:38:31.494 [http-nio-3016-exec-5] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:93] - /btc/getTradeStatus接口调用:查询交易状态成功
2018-08-28 14:38:31.496 [http-nio-3016-exec-5] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/getTradeStatus
2018-08-28 14:40:00.210 [http-nio-3016-exec-4] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:35] - rpcToken=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:40:00.210 [http-nio-3016-exec-4] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:38] - token pass,token=ba49ca929afb11e89eb6529269fb1459529269fb1459cb977ec0
2018-08-28 14:40:00.210 [http-nio-3016-exec-4] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:133] - 检查节点链接接口调用
2018-08-28 14:40:00.211 [http-nio-3016-exec-4] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:163] - 检查节点
2018-08-28 14:40:00.211 [http-nio-3016-exec-4] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:134] - 获取节点对外链接数
2018-08-28 14:40:00.556 [http-nio-3016-exec-4] INFO  com.bithaw.btc.utils.BitRpcUtils [BitRpcUtils.java:137] - 获取节点对外链接数 成功
2018-08-28 14:40:00.556 [http-nio-3016-exec-4] INFO  com.bithaw.btc.service.impl.BtcServiceImpl [BtcServiceImpl.java:169] - 检查节点完毕,节点链接正常
2018-08-28 14:40:00.556 [http-nio-3016-exec-4] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:135] - 检查节点链接接口调用,节点链接正常
2018-08-28 14:40:00.589 [http-nio-3016-exec-4] INFO  com.bithaw.btc.comtroller.api.BtcWalletControllerApi [BtcWalletControllerApi.java:141] - 检查节点链接接口调用完毕
2018-08-28 14:40:00.590 [http-nio-3016-exec-4] INFO  com.bithaw.common.interceptor.RpcInterceptor [RpcInterceptor.java:57] - request end path =/btc/checkNode
2018-08-28 14:41:22.891 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-08-28 14:46:17.535 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin [SpringApplicationAdminMXBeanRegistrar.java:125] - Application shutdown requested.
2018-08-28 14:46:17.536 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac8cf9b: startup date [Tue Aug 28 14:36:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c5474f5
2018-08-28 14:46:17.537 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:64] - Unregistering application btc-service with eureka with status DOWN
2018-08-28 14:46:17.537 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:852] - Shutting down DiscoveryClient ...
2018-08-28 14:46:17.537 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:795] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016: registering service...
2018-08-28 14:46:17.538 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:884] - Unregistering ...
2018-08-28 14:46:17.543 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:886] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - deregister  status: 200
2018-08-28 14:46:17.544 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BTC-SERVICE/PC1:btc-service:3016 - registration status: 204
2018-08-28 14:46:17.548 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:873] - Completed shut down of DiscoveryClient
2018-08-28 14:46:17.550 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 2147483647
2018-08-28 14:46:17.552 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:358] - Stopping beans in phase 0
2018-08-28 14:46:17.554 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:46:17.555 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:46:17.555 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:449] - Unregistering JMX-exposed beans on shutdown
2018-08-28 14:46:17.556 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanRegistrationSupport.java:241] - Unregistering JMX-exposed beans
2018-08-28 14:46:17.571 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@66780d95: startup date [Tue Aug 28 14:36:23 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac8cf9b
2018-08-28 14:46:17.576 [RMI TCP Connection(2)-192.168.199.18] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-trade-service
2018-08-28 14:46:17.577 [RMI TCP Connection(2)-192.168.199.18] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@49cb5030: startup date [Tue Aug 28 14:36:17 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3ac8cf9b
2018-08-28 14:46:17.580 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Pausing ProtocolHandler ["http-nio-3016"]
2018-08-28 14:46:17.680 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:179] - Stopping service [Tomcat]
2018-08-28 14:46:17.682 [localhost-startStop-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:179] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2018-08-28 14:46:17.690 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Stopping ProtocolHandler ["http-nio-3016"]
2018-08-28 14:46:17.697 [RMI TCP Connection(2)-192.168.199.18] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:179] - Destroying ProtocolHandler ["http-nio-3016"]
2018-08-28 14:46:17.699 [Thread-11] INFO  com.netflix.loadbalancer.PollingServerListUpdater [PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
